

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jan 17 19:05:35 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext17,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext18,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	inittext,global,class=CODE,space=0,delta=2
    31                           	psect	clrtext,global,class=CODE,space=0,delta=2
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    43                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    44                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    45                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    46                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    50                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    51                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    52                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    53                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    54                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text35,local,class=CODE,space=0,merge=1,inline,delta=2
    70                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,space=0,delta=2
    76                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text58,local,class=CODE,space=0,merge=1,inline,delta=2
    93                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text60,local,class=CODE,space=0,merge=1,inline,delta=2
    95                           	psect	text61,local,class=CODE,space=0,merge=1,inline,delta=2
    96                           	psect	text62,local,class=CODE,space=0,merge=1,inline,delta=2
    97                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text65,local,class=CODE,space=0,merge=1,inline,delta=2
   100                           	psect	text66,local,class=CODE,space=0,merge=1,inline,delta=2
   101                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text68,local,class=CODE,space=0,merge=1,inline,delta=2
   103                           	psect	text69,local,class=CODE,space=0,merge=1,inline,delta=2
   104                           	psect	text70,local,class=CODE,space=0,merge=1,inline,delta=2
   105                           	psect	text71,local,class=CODE,space=0,merge=1,inline,delta=2
   106                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   114                           	dabs	1,0x7E,2
   115     0000                     
   116                           ; Generated 07/09/2023 GMT
   117                           ; 
   118                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution. Publication is not required when
   132                           ;        this file is used in an embedded application.
   133                           ; 
   134                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   135                           ;        software without specific prior written permission.
   136                           ; 
   137                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   138                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   139                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   140                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   141                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   142                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   143                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   144                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   145                           ; 
   146                           ; 
   147                           ; Code-generator required, PIC16F1705 Definitions
   148                           ; 
   149                           ; SFR Addresses
   150     0008                     bsr             equ	8
   151     0005                     fsr0h           equ	5
   152     0004                     fsr0l           equ	4
   153     0007                     fsr1h           equ	7
   154     0006                     fsr1l           equ	6
   155     0000                     indf            equ	0
   156     0000                     indf0           equ	0
   157     0001                     indf1           equ	1
   158     000B                     intcon          equ	11
   159     0002                     pc              equ	2
   160     0002                     pcl             equ	2
   161     000A                     pclath          equ	10
   162     0003                     status          equ	3
   163     0009                     wreg            equ	9
   164     0000                     INDF0           equ	0	;# 
   165     0001                     INDF1           equ	1	;# 
   166     0002                     PCL             equ	2	;# 
   167     0003                     STATUS          equ	3	;# 
   168     0004                     FSR0L           equ	4	;# 
   169     0005                     FSR0H           equ	5	;# 
   170     0006                     FSR1L           equ	6	;# 
   171     0007                     FSR1H           equ	7	;# 
   172     0008                     BSR             equ	8	;# 
   173     0009                     WREG            equ	9	;# 
   174     000A                     PCLATH          equ	10	;# 
   175     000B                     INTCON          equ	11	;# 
   176     000C                     PORTA           equ	12	;# 
   177     000E                     PORTC           equ	14	;# 
   178     0011                     PIR1            equ	17	;# 
   179     0012                     PIR2            equ	18	;# 
   180     0013                     PIR3            equ	19	;# 
   181     0015                     TMR0            equ	21	;# 
   182     0016                     TMR1            equ	22	;# 
   183     0016                     TMR1L           equ	22	;# 
   184     0017                     TMR1H           equ	23	;# 
   185     0018                     T1CON           equ	24	;# 
   186     0019                     T1GCON          equ	25	;# 
   187     001A                     TMR2            equ	26	;# 
   188     001B                     PR2             equ	27	;# 
   189     001C                     T2CON           equ	28	;# 
   190     008C                     TRISA           equ	140	;# 
   191     008E                     TRISC           equ	142	;# 
   192     0091                     PIE1            equ	145	;# 
   193     0092                     PIE2            equ	146	;# 
   194     0093                     PIE3            equ	147	;# 
   195     0095                     OPTION_REG      equ	149	;# 
   196     0096                     PCON            equ	150	;# 
   197     0097                     WDTCON          equ	151	;# 
   198     0098                     OSCTUNE         equ	152	;# 
   199     0099                     OSCCON          equ	153	;# 
   200     009A                     OSCSTAT         equ	154	;# 
   201     009B                     ADRES           equ	155	;# 
   202     009B                     ADRESL          equ	155	;# 
   203     009C                     ADRESH          equ	156	;# 
   204     009D                     ADCON0          equ	157	;# 
   205     009E                     ADCON1          equ	158	;# 
   206     009F                     ADCON2          equ	159	;# 
   207     010C                     LATA            equ	268	;# 
   208     010E                     LATC            equ	270	;# 
   209     0111                     CM1CON0         equ	273	;# 
   210     0112                     CM1CON1         equ	274	;# 
   211     0113                     CM2CON0         equ	275	;# 
   212     0114                     CM2CON1         equ	276	;# 
   213     0115                     CMOUT           equ	277	;# 
   214     0116                     BORCON          equ	278	;# 
   215     0117                     FVRCON          equ	279	;# 
   216     0118                     DAC1CON0        equ	280	;# 
   217     0119                     DAC1CON1        equ	281	;# 
   218     011C                     ZCD1CON         equ	284	;# 
   219     018C                     ANSELA          equ	396	;# 
   220     018E                     ANSELC          equ	398	;# 
   221     0191                     PMADR           equ	401	;# 
   222     0191                     PMADRL          equ	401	;# 
   223     0192                     PMADRH          equ	402	;# 
   224     0193                     PMDAT           equ	403	;# 
   225     0193                     PMDATL          equ	403	;# 
   226     0194                     PMDATH          equ	404	;# 
   227     0195                     PMCON1          equ	405	;# 
   228     0196                     PMCON2          equ	406	;# 
   229     0197                     VREGCON         equ	407	;# 
   230     0199                     RC1REG          equ	409	;# 
   231     0199                     RCREG           equ	409	;# 
   232     0199                     RCREG1          equ	409	;# 
   233     019A                     TX1REG          equ	410	;# 
   234     019A                     TXREG1          equ	410	;# 
   235     019A                     TXREG           equ	410	;# 
   236     019B                     SP1BRG          equ	411	;# 
   237     019B                     SPBRG           equ	411	;# 
   238     019B                     SP1BRGL         equ	411	;# 
   239     019B                     SPBRG1          equ	411	;# 
   240     019B                     SPBRGL          equ	411	;# 
   241     019C                     SP1BRGH         equ	412	;# 
   242     019C                     SPBRGH          equ	412	;# 
   243     019C                     SPBRGH1         equ	412	;# 
   244     019D                     RC1STA          equ	413	;# 
   245     019D                     RCSTA1          equ	413	;# 
   246     019D                     RCSTA           equ	413	;# 
   247     019E                     TX1STA          equ	414	;# 
   248     019E                     TXSTA1          equ	414	;# 
   249     019E                     TXSTA           equ	414	;# 
   250     019F                     BAUD1CON        equ	415	;# 
   251     019F                     BAUDCON1        equ	415	;# 
   252     019F                     BAUDCTL1        equ	415	;# 
   253     019F                     BAUDCON         equ	415	;# 
   254     019F                     BAUDCTL         equ	415	;# 
   255     020C                     WPUA            equ	524	;# 
   256     020E                     WPUC            equ	526	;# 
   257     0211                     SSP1BUF         equ	529	;# 
   258     0211                     SSPBUF          equ	529	;# 
   259     0212                     SSP1ADD         equ	530	;# 
   260     0212                     SSPADD          equ	530	;# 
   261     0213                     SSP1MSK         equ	531	;# 
   262     0213                     SSPMSK          equ	531	;# 
   263     0214                     SSP1STAT        equ	532	;# 
   264     0214                     SSPSTAT         equ	532	;# 
   265     0215                     SSP1CON1        equ	533	;# 
   266     0215                     SSPCON          equ	533	;# 
   267     0215                     SSPCON1         equ	533	;# 
   268     0215                     SSP1CON         equ	533	;# 
   269     0216                     SSP1CON2        equ	534	;# 
   270     0216                     SSPCON2         equ	534	;# 
   271     0217                     SSP1CON3        equ	535	;# 
   272     0217                     SSPCON3         equ	535	;# 
   273     028C                     ODCONA          equ	652	;# 
   274     028E                     ODCONC          equ	654	;# 
   275     0291                     CCPR1           equ	657	;# 
   276     0291                     CCPR1L          equ	657	;# 
   277     0292                     CCPR1H          equ	658	;# 
   278     0293                     CCP1CON         equ	659	;# 
   279     0293                     ECCP1CON        equ	659	;# 
   280     0298                     CCPR2           equ	664	;# 
   281     0298                     CCPR2L          equ	664	;# 
   282     0299                     CCPR2H          equ	665	;# 
   283     029A                     CCP2CON         equ	666	;# 
   284     029A                     ECCP2CON        equ	666	;# 
   285     029E                     CCPTMRS         equ	670	;# 
   286     030C                     SLRCONA         equ	780	;# 
   287     030E                     SLRCONC         equ	782	;# 
   288     038C                     INLVLA          equ	908	;# 
   289     038E                     INLVLC          equ	910	;# 
   290     0391                     IOCAP           equ	913	;# 
   291     0392                     IOCAN           equ	914	;# 
   292     0393                     IOCAF           equ	915	;# 
   293     0397                     IOCCP           equ	919	;# 
   294     0398                     IOCCN           equ	920	;# 
   295     0399                     IOCCF           equ	921	;# 
   296     0415                     TMR4            equ	1045	;# 
   297     0416                     PR4             equ	1046	;# 
   298     0417                     T4CON           equ	1047	;# 
   299     041C                     TMR6            equ	1052	;# 
   300     041D                     PR6             equ	1053	;# 
   301     041E                     T6CON           equ	1054	;# 
   302     0511                     OPA1CON         equ	1297	;# 
   303     0515                     OPA2CON         equ	1301	;# 
   304     0617                     PWM3DCL         equ	1559	;# 
   305     0618                     PWM3DCH         equ	1560	;# 
   306     0619                     PWM3CON         equ	1561	;# 
   307     0619                     PWM3CON0        equ	1561	;# 
   308     061A                     PWM4DCL         equ	1562	;# 
   309     061B                     PWM4DCH         equ	1563	;# 
   310     061C                     PWM4CON         equ	1564	;# 
   311     061C                     PWM4CON0        equ	1564	;# 
   312     0691                     COG1PHR         equ	1681	;# 
   313     0692                     COG1PHF         equ	1682	;# 
   314     0693                     COG1BLKR        equ	1683	;# 
   315     0694                     COG1BLKF        equ	1684	;# 
   316     0695                     COG1DBR         equ	1685	;# 
   317     0696                     COG1DBF         equ	1686	;# 
   318     0697                     COG1CON0        equ	1687	;# 
   319     0698                     COG1CON1        equ	1688	;# 
   320     0699                     COG1RIS         equ	1689	;# 
   321     069A                     COG1RSIM        equ	1690	;# 
   322     069B                     COG1FIS         equ	1691	;# 
   323     069C                     COG1FSIM        equ	1692	;# 
   324     069D                     COG1ASD0        equ	1693	;# 
   325     069E                     COG1ASD1        equ	1694	;# 
   326     069F                     COG1STR         equ	1695	;# 
   327     0E0F                     PPSLOCK         equ	3599	;# 
   328     0E10                     INTPPS          equ	3600	;# 
   329     0E11                     T0CKIPPS        equ	3601	;# 
   330     0E12                     T1CKIPPS        equ	3602	;# 
   331     0E13                     T1GPPS          equ	3603	;# 
   332     0E14                     CCP1PPS         equ	3604	;# 
   333     0E15                     CCP2PPS         equ	3605	;# 
   334     0E17                     COGINPPS        equ	3607	;# 
   335     0E20                     SSPCLKPPS       equ	3616	;# 
   336     0E21                     SSPDATPPS       equ	3617	;# 
   337     0E22                     SSPSSPPS        equ	3618	;# 
   338     0E24                     RXPPS           equ	3620	;# 
   339     0E25                     CKPPS           equ	3621	;# 
   340     0E28                     CLCIN0PPS       equ	3624	;# 
   341     0E29                     CLCIN1PPS       equ	3625	;# 
   342     0E2A                     CLCIN2PPS       equ	3626	;# 
   343     0E2B                     CLCIN3PPS       equ	3627	;# 
   344     0E90                     RA0PPS          equ	3728	;# 
   345     0E91                     RA1PPS          equ	3729	;# 
   346     0E92                     RA2PPS          equ	3730	;# 
   347     0E94                     RA4PPS          equ	3732	;# 
   348     0E95                     RA5PPS          equ	3733	;# 
   349     0EA0                     RC0PPS          equ	3744	;# 
   350     0EA1                     RC1PPS          equ	3745	;# 
   351     0EA2                     RC2PPS          equ	3746	;# 
   352     0EA3                     RC3PPS          equ	3747	;# 
   353     0EA4                     RC4PPS          equ	3748	;# 
   354     0EA5                     RC5PPS          equ	3749	;# 
   355     0F0F                     CLCDATA         equ	3855	;# 
   356     0F10                     CLC1CON         equ	3856	;# 
   357     0F11                     CLC1POL         equ	3857	;# 
   358     0F12                     CLC1SEL0        equ	3858	;# 
   359     0F13                     CLC1SEL1        equ	3859	;# 
   360     0F14                     CLC1SEL2        equ	3860	;# 
   361     0F15                     CLC1SEL3        equ	3861	;# 
   362     0F16                     CLC1GLS0        equ	3862	;# 
   363     0F17                     CLC1GLS1        equ	3863	;# 
   364     0F18                     CLC1GLS2        equ	3864	;# 
   365     0F19                     CLC1GLS3        equ	3865	;# 
   366     0F1A                     CLC2CON         equ	3866	;# 
   367     0F1B                     CLC2POL         equ	3867	;# 
   368     0F1C                     CLC2SEL0        equ	3868	;# 
   369     0F1D                     CLC2SEL1        equ	3869	;# 
   370     0F1E                     CLC2SEL2        equ	3870	;# 
   371     0F1F                     CLC2SEL3        equ	3871	;# 
   372     0F20                     CLC2GLS0        equ	3872	;# 
   373     0F21                     CLC2GLS1        equ	3873	;# 
   374     0F22                     CLC2GLS2        equ	3874	;# 
   375     0F23                     CLC2GLS3        equ	3875	;# 
   376     0F24                     CLC3CON         equ	3876	;# 
   377     0F25                     CLC3POL         equ	3877	;# 
   378     0F26                     CLC3SEL0        equ	3878	;# 
   379     0F27                     CLC3SEL1        equ	3879	;# 
   380     0F28                     CLC3SEL2        equ	3880	;# 
   381     0F29                     CLC3SEL3        equ	3881	;# 
   382     0F2A                     CLC3GLS0        equ	3882	;# 
   383     0F2B                     CLC3GLS1        equ	3883	;# 
   384     0F2C                     CLC3GLS2        equ	3884	;# 
   385     0F2D                     CLC3GLS3        equ	3885	;# 
   386     0F9E                     ICDBK0H         equ	3998	;# 
   387     0FE4                     STATUS_SHAD     equ	4068	;# 
   388     0FE5                     WREG_SHAD       equ	4069	;# 
   389     0FE6                     BSR_SHAD        equ	4070	;# 
   390     0FE7                     PCLATH_SHAD     equ	4071	;# 
   391     0FE8                     FSR0L_SHAD      equ	4072	;# 
   392     0FE9                     FSR0H_SHAD      equ	4073	;# 
   393     0FEA                     FSR1L_SHAD      equ	4074	;# 
   394     0FEB                     FSR1H_SHAD      equ	4075	;# 
   395     0FED                     STKPTR          equ	4077	;# 
   396     0FEE                     TOSL            equ	4078	;# 
   397     0FEF                     TOSH            equ	4079	;# 
   398     0000                     INDF0           equ	0	;# 
   399     0001                     INDF1           equ	1	;# 
   400     0002                     PCL             equ	2	;# 
   401     0003                     STATUS          equ	3	;# 
   402     0004                     FSR0L           equ	4	;# 
   403     0005                     FSR0H           equ	5	;# 
   404     0006                     FSR1L           equ	6	;# 
   405     0007                     FSR1H           equ	7	;# 
   406     0008                     BSR             equ	8	;# 
   407     0009                     WREG            equ	9	;# 
   408     000A                     PCLATH          equ	10	;# 
   409     000B                     INTCON          equ	11	;# 
   410     000C                     PORTA           equ	12	;# 
   411     000E                     PORTC           equ	14	;# 
   412     0011                     PIR1            equ	17	;# 
   413     0012                     PIR2            equ	18	;# 
   414     0013                     PIR3            equ	19	;# 
   415     0015                     TMR0            equ	21	;# 
   416     0016                     TMR1            equ	22	;# 
   417     0016                     TMR1L           equ	22	;# 
   418     0017                     TMR1H           equ	23	;# 
   419     0018                     T1CON           equ	24	;# 
   420     0019                     T1GCON          equ	25	;# 
   421     001A                     TMR2            equ	26	;# 
   422     001B                     PR2             equ	27	;# 
   423     001C                     T2CON           equ	28	;# 
   424     008C                     TRISA           equ	140	;# 
   425     008E                     TRISC           equ	142	;# 
   426     0091                     PIE1            equ	145	;# 
   427     0092                     PIE2            equ	146	;# 
   428     0093                     PIE3            equ	147	;# 
   429     0095                     OPTION_REG      equ	149	;# 
   430     0096                     PCON            equ	150	;# 
   431     0097                     WDTCON          equ	151	;# 
   432     0098                     OSCTUNE         equ	152	;# 
   433     0099                     OSCCON          equ	153	;# 
   434     009A                     OSCSTAT         equ	154	;# 
   435     009B                     ADRES           equ	155	;# 
   436     009B                     ADRESL          equ	155	;# 
   437     009C                     ADRESH          equ	156	;# 
   438     009D                     ADCON0          equ	157	;# 
   439     009E                     ADCON1          equ	158	;# 
   440     009F                     ADCON2          equ	159	;# 
   441     010C                     LATA            equ	268	;# 
   442     010E                     LATC            equ	270	;# 
   443     0111                     CM1CON0         equ	273	;# 
   444     0112                     CM1CON1         equ	274	;# 
   445     0113                     CM2CON0         equ	275	;# 
   446     0114                     CM2CON1         equ	276	;# 
   447     0115                     CMOUT           equ	277	;# 
   448     0116                     BORCON          equ	278	;# 
   449     0117                     FVRCON          equ	279	;# 
   450     0118                     DAC1CON0        equ	280	;# 
   451     0119                     DAC1CON1        equ	281	;# 
   452     011C                     ZCD1CON         equ	284	;# 
   453     018C                     ANSELA          equ	396	;# 
   454     018E                     ANSELC          equ	398	;# 
   455     0191                     PMADR           equ	401	;# 
   456     0191                     PMADRL          equ	401	;# 
   457     0192                     PMADRH          equ	402	;# 
   458     0193                     PMDAT           equ	403	;# 
   459     0193                     PMDATL          equ	403	;# 
   460     0194                     PMDATH          equ	404	;# 
   461     0195                     PMCON1          equ	405	;# 
   462     0196                     PMCON2          equ	406	;# 
   463     0197                     VREGCON         equ	407	;# 
   464     0199                     RC1REG          equ	409	;# 
   465     0199                     RCREG           equ	409	;# 
   466     0199                     RCREG1          equ	409	;# 
   467     019A                     TX1REG          equ	410	;# 
   468     019A                     TXREG1          equ	410	;# 
   469     019A                     TXREG           equ	410	;# 
   470     019B                     SP1BRG          equ	411	;# 
   471     019B                     SPBRG           equ	411	;# 
   472     019B                     SP1BRGL         equ	411	;# 
   473     019B                     SPBRG1          equ	411	;# 
   474     019B                     SPBRGL          equ	411	;# 
   475     019C                     SP1BRGH         equ	412	;# 
   476     019C                     SPBRGH          equ	412	;# 
   477     019C                     SPBRGH1         equ	412	;# 
   478     019D                     RC1STA          equ	413	;# 
   479     019D                     RCSTA1          equ	413	;# 
   480     019D                     RCSTA           equ	413	;# 
   481     019E                     TX1STA          equ	414	;# 
   482     019E                     TXSTA1          equ	414	;# 
   483     019E                     TXSTA           equ	414	;# 
   484     019F                     BAUD1CON        equ	415	;# 
   485     019F                     BAUDCON1        equ	415	;# 
   486     019F                     BAUDCTL1        equ	415	;# 
   487     019F                     BAUDCON         equ	415	;# 
   488     019F                     BAUDCTL         equ	415	;# 
   489     020C                     WPUA            equ	524	;# 
   490     020E                     WPUC            equ	526	;# 
   491     0211                     SSP1BUF         equ	529	;# 
   492     0211                     SSPBUF          equ	529	;# 
   493     0212                     SSP1ADD         equ	530	;# 
   494     0212                     SSPADD          equ	530	;# 
   495     0213                     SSP1MSK         equ	531	;# 
   496     0213                     SSPMSK          equ	531	;# 
   497     0214                     SSP1STAT        equ	532	;# 
   498     0214                     SSPSTAT         equ	532	;# 
   499     0215                     SSP1CON1        equ	533	;# 
   500     0215                     SSPCON          equ	533	;# 
   501     0215                     SSPCON1         equ	533	;# 
   502     0215                     SSP1CON         equ	533	;# 
   503     0216                     SSP1CON2        equ	534	;# 
   504     0216                     SSPCON2         equ	534	;# 
   505     0217                     SSP1CON3        equ	535	;# 
   506     0217                     SSPCON3         equ	535	;# 
   507     028C                     ODCONA          equ	652	;# 
   508     028E                     ODCONC          equ	654	;# 
   509     0291                     CCPR1           equ	657	;# 
   510     0291                     CCPR1L          equ	657	;# 
   511     0292                     CCPR1H          equ	658	;# 
   512     0293                     CCP1CON         equ	659	;# 
   513     0293                     ECCP1CON        equ	659	;# 
   514     0298                     CCPR2           equ	664	;# 
   515     0298                     CCPR2L          equ	664	;# 
   516     0299                     CCPR2H          equ	665	;# 
   517     029A                     CCP2CON         equ	666	;# 
   518     029A                     ECCP2CON        equ	666	;# 
   519     029E                     CCPTMRS         equ	670	;# 
   520     030C                     SLRCONA         equ	780	;# 
   521     030E                     SLRCONC         equ	782	;# 
   522     038C                     INLVLA          equ	908	;# 
   523     038E                     INLVLC          equ	910	;# 
   524     0391                     IOCAP           equ	913	;# 
   525     0392                     IOCAN           equ	914	;# 
   526     0393                     IOCAF           equ	915	;# 
   527     0397                     IOCCP           equ	919	;# 
   528     0398                     IOCCN           equ	920	;# 
   529     0399                     IOCCF           equ	921	;# 
   530     0415                     TMR4            equ	1045	;# 
   531     0416                     PR4             equ	1046	;# 
   532     0417                     T4CON           equ	1047	;# 
   533     041C                     TMR6            equ	1052	;# 
   534     041D                     PR6             equ	1053	;# 
   535     041E                     T6CON           equ	1054	;# 
   536     0511                     OPA1CON         equ	1297	;# 
   537     0515                     OPA2CON         equ	1301	;# 
   538     0617                     PWM3DCL         equ	1559	;# 
   539     0618                     PWM3DCH         equ	1560	;# 
   540     0619                     PWM3CON         equ	1561	;# 
   541     0619                     PWM3CON0        equ	1561	;# 
   542     061A                     PWM4DCL         equ	1562	;# 
   543     061B                     PWM4DCH         equ	1563	;# 
   544     061C                     PWM4CON         equ	1564	;# 
   545     061C                     PWM4CON0        equ	1564	;# 
   546     0691                     COG1PHR         equ	1681	;# 
   547     0692                     COG1PHF         equ	1682	;# 
   548     0693                     COG1BLKR        equ	1683	;# 
   549     0694                     COG1BLKF        equ	1684	;# 
   550     0695                     COG1DBR         equ	1685	;# 
   551     0696                     COG1DBF         equ	1686	;# 
   552     0697                     COG1CON0        equ	1687	;# 
   553     0698                     COG1CON1        equ	1688	;# 
   554     0699                     COG1RIS         equ	1689	;# 
   555     069A                     COG1RSIM        equ	1690	;# 
   556     069B                     COG1FIS         equ	1691	;# 
   557     069C                     COG1FSIM        equ	1692	;# 
   558     069D                     COG1ASD0        equ	1693	;# 
   559     069E                     COG1ASD1        equ	1694	;# 
   560     069F                     COG1STR         equ	1695	;# 
   561     0E0F                     PPSLOCK         equ	3599	;# 
   562     0E10                     INTPPS          equ	3600	;# 
   563     0E11                     T0CKIPPS        equ	3601	;# 
   564     0E12                     T1CKIPPS        equ	3602	;# 
   565     0E13                     T1GPPS          equ	3603	;# 
   566     0E14                     CCP1PPS         equ	3604	;# 
   567     0E15                     CCP2PPS         equ	3605	;# 
   568     0E17                     COGINPPS        equ	3607	;# 
   569     0E20                     SSPCLKPPS       equ	3616	;# 
   570     0E21                     SSPDATPPS       equ	3617	;# 
   571     0E22                     SSPSSPPS        equ	3618	;# 
   572     0E24                     RXPPS           equ	3620	;# 
   573     0E25                     CKPPS           equ	3621	;# 
   574     0E28                     CLCIN0PPS       equ	3624	;# 
   575     0E29                     CLCIN1PPS       equ	3625	;# 
   576     0E2A                     CLCIN2PPS       equ	3626	;# 
   577     0E2B                     CLCIN3PPS       equ	3627	;# 
   578     0E90                     RA0PPS          equ	3728	;# 
   579     0E91                     RA1PPS          equ	3729	;# 
   580     0E92                     RA2PPS          equ	3730	;# 
   581     0E94                     RA4PPS          equ	3732	;# 
   582     0E95                     RA5PPS          equ	3733	;# 
   583     0EA0                     RC0PPS          equ	3744	;# 
   584     0EA1                     RC1PPS          equ	3745	;# 
   585     0EA2                     RC2PPS          equ	3746	;# 
   586     0EA3                     RC3PPS          equ	3747	;# 
   587     0EA4                     RC4PPS          equ	3748	;# 
   588     0EA5                     RC5PPS          equ	3749	;# 
   589     0F0F                     CLCDATA         equ	3855	;# 
   590     0F10                     CLC1CON         equ	3856	;# 
   591     0F11                     CLC1POL         equ	3857	;# 
   592     0F12                     CLC1SEL0        equ	3858	;# 
   593     0F13                     CLC1SEL1        equ	3859	;# 
   594     0F14                     CLC1SEL2        equ	3860	;# 
   595     0F15                     CLC1SEL3        equ	3861	;# 
   596     0F16                     CLC1GLS0        equ	3862	;# 
   597     0F17                     CLC1GLS1        equ	3863	;# 
   598     0F18                     CLC1GLS2        equ	3864	;# 
   599     0F19                     CLC1GLS3        equ	3865	;# 
   600     0F1A                     CLC2CON         equ	3866	;# 
   601     0F1B                     CLC2POL         equ	3867	;# 
   602     0F1C                     CLC2SEL0        equ	3868	;# 
   603     0F1D                     CLC2SEL1        equ	3869	;# 
   604     0F1E                     CLC2SEL2        equ	3870	;# 
   605     0F1F                     CLC2SEL3        equ	3871	;# 
   606     0F20                     CLC2GLS0        equ	3872	;# 
   607     0F21                     CLC2GLS1        equ	3873	;# 
   608     0F22                     CLC2GLS2        equ	3874	;# 
   609     0F23                     CLC2GLS3        equ	3875	;# 
   610     0F24                     CLC3CON         equ	3876	;# 
   611     0F25                     CLC3POL         equ	3877	;# 
   612     0F26                     CLC3SEL0        equ	3878	;# 
   613     0F27                     CLC3SEL1        equ	3879	;# 
   614     0F28                     CLC3SEL2        equ	3880	;# 
   615     0F29                     CLC3SEL3        equ	3881	;# 
   616     0F2A                     CLC3GLS0        equ	3882	;# 
   617     0F2B                     CLC3GLS1        equ	3883	;# 
   618     0F2C                     CLC3GLS2        equ	3884	;# 
   619     0F2D                     CLC3GLS3        equ	3885	;# 
   620     0F9E                     ICDBK0H         equ	3998	;# 
   621     0FE4                     STATUS_SHAD     equ	4068	;# 
   622     0FE5                     WREG_SHAD       equ	4069	;# 
   623     0FE6                     BSR_SHAD        equ	4070	;# 
   624     0FE7                     PCLATH_SHAD     equ	4071	;# 
   625     0FE8                     FSR0L_SHAD      equ	4072	;# 
   626     0FE9                     FSR0H_SHAD      equ	4073	;# 
   627     0FEA                     FSR1L_SHAD      equ	4074	;# 
   628     0FEB                     FSR1H_SHAD      equ	4075	;# 
   629     0FED                     STKPTR          equ	4077	;# 
   630     0FEE                     TOSL            equ	4078	;# 
   631     0FEF                     TOSH            equ	4079	;# 
   632     0000                     INDF0           equ	0	;# 
   633     0001                     INDF1           equ	1	;# 
   634     0002                     PCL             equ	2	;# 
   635     0003                     STATUS          equ	3	;# 
   636     0004                     FSR0L           equ	4	;# 
   637     0005                     FSR0H           equ	5	;# 
   638     0006                     FSR1L           equ	6	;# 
   639     0007                     FSR1H           equ	7	;# 
   640     0008                     BSR             equ	8	;# 
   641     0009                     WREG            equ	9	;# 
   642     000A                     PCLATH          equ	10	;# 
   643     000B                     INTCON          equ	11	;# 
   644     000C                     PORTA           equ	12	;# 
   645     000E                     PORTC           equ	14	;# 
   646     0011                     PIR1            equ	17	;# 
   647     0012                     PIR2            equ	18	;# 
   648     0013                     PIR3            equ	19	;# 
   649     0015                     TMR0            equ	21	;# 
   650     0016                     TMR1            equ	22	;# 
   651     0016                     TMR1L           equ	22	;# 
   652     0017                     TMR1H           equ	23	;# 
   653     0018                     T1CON           equ	24	;# 
   654     0019                     T1GCON          equ	25	;# 
   655     001A                     TMR2            equ	26	;# 
   656     001B                     PR2             equ	27	;# 
   657     001C                     T2CON           equ	28	;# 
   658     008C                     TRISA           equ	140	;# 
   659     008E                     TRISC           equ	142	;# 
   660     0091                     PIE1            equ	145	;# 
   661     0092                     PIE2            equ	146	;# 
   662     0093                     PIE3            equ	147	;# 
   663     0095                     OPTION_REG      equ	149	;# 
   664     0096                     PCON            equ	150	;# 
   665     0097                     WDTCON          equ	151	;# 
   666     0098                     OSCTUNE         equ	152	;# 
   667     0099                     OSCCON          equ	153	;# 
   668     009A                     OSCSTAT         equ	154	;# 
   669     009B                     ADRES           equ	155	;# 
   670     009B                     ADRESL          equ	155	;# 
   671     009C                     ADRESH          equ	156	;# 
   672     009D                     ADCON0          equ	157	;# 
   673     009E                     ADCON1          equ	158	;# 
   674     009F                     ADCON2          equ	159	;# 
   675     010C                     LATA            equ	268	;# 
   676     010E                     LATC            equ	270	;# 
   677     0111                     CM1CON0         equ	273	;# 
   678     0112                     CM1CON1         equ	274	;# 
   679     0113                     CM2CON0         equ	275	;# 
   680     0114                     CM2CON1         equ	276	;# 
   681     0115                     CMOUT           equ	277	;# 
   682     0116                     BORCON          equ	278	;# 
   683     0117                     FVRCON          equ	279	;# 
   684     0118                     DAC1CON0        equ	280	;# 
   685     0119                     DAC1CON1        equ	281	;# 
   686     011C                     ZCD1CON         equ	284	;# 
   687     018C                     ANSELA          equ	396	;# 
   688     018E                     ANSELC          equ	398	;# 
   689     0191                     PMADR           equ	401	;# 
   690     0191                     PMADRL          equ	401	;# 
   691     0192                     PMADRH          equ	402	;# 
   692     0193                     PMDAT           equ	403	;# 
   693     0193                     PMDATL          equ	403	;# 
   694     0194                     PMDATH          equ	404	;# 
   695     0195                     PMCON1          equ	405	;# 
   696     0196                     PMCON2          equ	406	;# 
   697     0197                     VREGCON         equ	407	;# 
   698     0199                     RC1REG          equ	409	;# 
   699     0199                     RCREG           equ	409	;# 
   700     0199                     RCREG1          equ	409	;# 
   701     019A                     TX1REG          equ	410	;# 
   702     019A                     TXREG1          equ	410	;# 
   703     019A                     TXREG           equ	410	;# 
   704     019B                     SP1BRG          equ	411	;# 
   705     019B                     SPBRG           equ	411	;# 
   706     019B                     SP1BRGL         equ	411	;# 
   707     019B                     SPBRG1          equ	411	;# 
   708     019B                     SPBRGL          equ	411	;# 
   709     019C                     SP1BRGH         equ	412	;# 
   710     019C                     SPBRGH          equ	412	;# 
   711     019C                     SPBRGH1         equ	412	;# 
   712     019D                     RC1STA          equ	413	;# 
   713     019D                     RCSTA1          equ	413	;# 
   714     019D                     RCSTA           equ	413	;# 
   715     019E                     TX1STA          equ	414	;# 
   716     019E                     TXSTA1          equ	414	;# 
   717     019E                     TXSTA           equ	414	;# 
   718     019F                     BAUD1CON        equ	415	;# 
   719     019F                     BAUDCON1        equ	415	;# 
   720     019F                     BAUDCTL1        equ	415	;# 
   721     019F                     BAUDCON         equ	415	;# 
   722     019F                     BAUDCTL         equ	415	;# 
   723     020C                     WPUA            equ	524	;# 
   724     020E                     WPUC            equ	526	;# 
   725     0211                     SSP1BUF         equ	529	;# 
   726     0211                     SSPBUF          equ	529	;# 
   727     0212                     SSP1ADD         equ	530	;# 
   728     0212                     SSPADD          equ	530	;# 
   729     0213                     SSP1MSK         equ	531	;# 
   730     0213                     SSPMSK          equ	531	;# 
   731     0214                     SSP1STAT        equ	532	;# 
   732     0214                     SSPSTAT         equ	532	;# 
   733     0215                     SSP1CON1        equ	533	;# 
   734     0215                     SSPCON          equ	533	;# 
   735     0215                     SSPCON1         equ	533	;# 
   736     0215                     SSP1CON         equ	533	;# 
   737     0216                     SSP1CON2        equ	534	;# 
   738     0216                     SSPCON2         equ	534	;# 
   739     0217                     SSP1CON3        equ	535	;# 
   740     0217                     SSPCON3         equ	535	;# 
   741     028C                     ODCONA          equ	652	;# 
   742     028E                     ODCONC          equ	654	;# 
   743     0291                     CCPR1           equ	657	;# 
   744     0291                     CCPR1L          equ	657	;# 
   745     0292                     CCPR1H          equ	658	;# 
   746     0293                     CCP1CON         equ	659	;# 
   747     0293                     ECCP1CON        equ	659	;# 
   748     0298                     CCPR2           equ	664	;# 
   749     0298                     CCPR2L          equ	664	;# 
   750     0299                     CCPR2H          equ	665	;# 
   751     029A                     CCP2CON         equ	666	;# 
   752     029A                     ECCP2CON        equ	666	;# 
   753     029E                     CCPTMRS         equ	670	;# 
   754     030C                     SLRCONA         equ	780	;# 
   755     030E                     SLRCONC         equ	782	;# 
   756     038C                     INLVLA          equ	908	;# 
   757     038E                     INLVLC          equ	910	;# 
   758     0391                     IOCAP           equ	913	;# 
   759     0392                     IOCAN           equ	914	;# 
   760     0393                     IOCAF           equ	915	;# 
   761     0397                     IOCCP           equ	919	;# 
   762     0398                     IOCCN           equ	920	;# 
   763     0399                     IOCCF           equ	921	;# 
   764     0415                     TMR4            equ	1045	;# 
   765     0416                     PR4             equ	1046	;# 
   766     0417                     T4CON           equ	1047	;# 
   767     041C                     TMR6            equ	1052	;# 
   768     041D                     PR6             equ	1053	;# 
   769     041E                     T6CON           equ	1054	;# 
   770     0511                     OPA1CON         equ	1297	;# 
   771     0515                     OPA2CON         equ	1301	;# 
   772     0617                     PWM3DCL         equ	1559	;# 
   773     0618                     PWM3DCH         equ	1560	;# 
   774     0619                     PWM3CON         equ	1561	;# 
   775     0619                     PWM3CON0        equ	1561	;# 
   776     061A                     PWM4DCL         equ	1562	;# 
   777     061B                     PWM4DCH         equ	1563	;# 
   778     061C                     PWM4CON         equ	1564	;# 
   779     061C                     PWM4CON0        equ	1564	;# 
   780     0691                     COG1PHR         equ	1681	;# 
   781     0692                     COG1PHF         equ	1682	;# 
   782     0693                     COG1BLKR        equ	1683	;# 
   783     0694                     COG1BLKF        equ	1684	;# 
   784     0695                     COG1DBR         equ	1685	;# 
   785     0696                     COG1DBF         equ	1686	;# 
   786     0697                     COG1CON0        equ	1687	;# 
   787     0698                     COG1CON1        equ	1688	;# 
   788     0699                     COG1RIS         equ	1689	;# 
   789     069A                     COG1RSIM        equ	1690	;# 
   790     069B                     COG1FIS         equ	1691	;# 
   791     069C                     COG1FSIM        equ	1692	;# 
   792     069D                     COG1ASD0        equ	1693	;# 
   793     069E                     COG1ASD1        equ	1694	;# 
   794     069F                     COG1STR         equ	1695	;# 
   795     0E0F                     PPSLOCK         equ	3599	;# 
   796     0E10                     INTPPS          equ	3600	;# 
   797     0E11                     T0CKIPPS        equ	3601	;# 
   798     0E12                     T1CKIPPS        equ	3602	;# 
   799     0E13                     T1GPPS          equ	3603	;# 
   800     0E14                     CCP1PPS         equ	3604	;# 
   801     0E15                     CCP2PPS         equ	3605	;# 
   802     0E17                     COGINPPS        equ	3607	;# 
   803     0E20                     SSPCLKPPS       equ	3616	;# 
   804     0E21                     SSPDATPPS       equ	3617	;# 
   805     0E22                     SSPSSPPS        equ	3618	;# 
   806     0E24                     RXPPS           equ	3620	;# 
   807     0E25                     CKPPS           equ	3621	;# 
   808     0E28                     CLCIN0PPS       equ	3624	;# 
   809     0E29                     CLCIN1PPS       equ	3625	;# 
   810     0E2A                     CLCIN2PPS       equ	3626	;# 
   811     0E2B                     CLCIN3PPS       equ	3627	;# 
   812     0E90                     RA0PPS          equ	3728	;# 
   813     0E91                     RA1PPS          equ	3729	;# 
   814     0E92                     RA2PPS          equ	3730	;# 
   815     0E94                     RA4PPS          equ	3732	;# 
   816     0E95                     RA5PPS          equ	3733	;# 
   817     0EA0                     RC0PPS          equ	3744	;# 
   818     0EA1                     RC1PPS          equ	3745	;# 
   819     0EA2                     RC2PPS          equ	3746	;# 
   820     0EA3                     RC3PPS          equ	3747	;# 
   821     0EA4                     RC4PPS          equ	3748	;# 
   822     0EA5                     RC5PPS          equ	3749	;# 
   823     0F0F                     CLCDATA         equ	3855	;# 
   824     0F10                     CLC1CON         equ	3856	;# 
   825     0F11                     CLC1POL         equ	3857	;# 
   826     0F12                     CLC1SEL0        equ	3858	;# 
   827     0F13                     CLC1SEL1        equ	3859	;# 
   828     0F14                     CLC1SEL2        equ	3860	;# 
   829     0F15                     CLC1SEL3        equ	3861	;# 
   830     0F16                     CLC1GLS0        equ	3862	;# 
   831     0F17                     CLC1GLS1        equ	3863	;# 
   832     0F18                     CLC1GLS2        equ	3864	;# 
   833     0F19                     CLC1GLS3        equ	3865	;# 
   834     0F1A                     CLC2CON         equ	3866	;# 
   835     0F1B                     CLC2POL         equ	3867	;# 
   836     0F1C                     CLC2SEL0        equ	3868	;# 
   837     0F1D                     CLC2SEL1        equ	3869	;# 
   838     0F1E                     CLC2SEL2        equ	3870	;# 
   839     0F1F                     CLC2SEL3        equ	3871	;# 
   840     0F20                     CLC2GLS0        equ	3872	;# 
   841     0F21                     CLC2GLS1        equ	3873	;# 
   842     0F22                     CLC2GLS2        equ	3874	;# 
   843     0F23                     CLC2GLS3        equ	3875	;# 
   844     0F24                     CLC3CON         equ	3876	;# 
   845     0F25                     CLC3POL         equ	3877	;# 
   846     0F26                     CLC3SEL0        equ	3878	;# 
   847     0F27                     CLC3SEL1        equ	3879	;# 
   848     0F28                     CLC3SEL2        equ	3880	;# 
   849     0F29                     CLC3SEL3        equ	3881	;# 
   850     0F2A                     CLC3GLS0        equ	3882	;# 
   851     0F2B                     CLC3GLS1        equ	3883	;# 
   852     0F2C                     CLC3GLS2        equ	3884	;# 
   853     0F2D                     CLC3GLS3        equ	3885	;# 
   854     0F9E                     ICDBK0H         equ	3998	;# 
   855     0FE4                     STATUS_SHAD     equ	4068	;# 
   856     0FE5                     WREG_SHAD       equ	4069	;# 
   857     0FE6                     BSR_SHAD        equ	4070	;# 
   858     0FE7                     PCLATH_SHAD     equ	4071	;# 
   859     0FE8                     FSR0L_SHAD      equ	4072	;# 
   860     0FE9                     FSR0H_SHAD      equ	4073	;# 
   861     0FEA                     FSR1L_SHAD      equ	4074	;# 
   862     0FEB                     FSR1H_SHAD      equ	4075	;# 
   863     0FED                     STKPTR          equ	4077	;# 
   864     0FEE                     TOSL            equ	4078	;# 
   865     0FEF                     TOSH            equ	4079	;# 
   866     0000                     INDF0           equ	0	;# 
   867     0001                     INDF1           equ	1	;# 
   868     0002                     PCL             equ	2	;# 
   869     0003                     STATUS          equ	3	;# 
   870     0004                     FSR0L           equ	4	;# 
   871     0005                     FSR0H           equ	5	;# 
   872     0006                     FSR1L           equ	6	;# 
   873     0007                     FSR1H           equ	7	;# 
   874     0008                     BSR             equ	8	;# 
   875     0009                     WREG            equ	9	;# 
   876     000A                     PCLATH          equ	10	;# 
   877     000B                     INTCON          equ	11	;# 
   878     000C                     PORTA           equ	12	;# 
   879     000E                     PORTC           equ	14	;# 
   880     0011                     PIR1            equ	17	;# 
   881     0012                     PIR2            equ	18	;# 
   882     0013                     PIR3            equ	19	;# 
   883     0015                     TMR0            equ	21	;# 
   884     0016                     TMR1            equ	22	;# 
   885     0016                     TMR1L           equ	22	;# 
   886     0017                     TMR1H           equ	23	;# 
   887     0018                     T1CON           equ	24	;# 
   888     0019                     T1GCON          equ	25	;# 
   889     001A                     TMR2            equ	26	;# 
   890     001B                     PR2             equ	27	;# 
   891     001C                     T2CON           equ	28	;# 
   892     008C                     TRISA           equ	140	;# 
   893     008E                     TRISC           equ	142	;# 
   894     0091                     PIE1            equ	145	;# 
   895     0092                     PIE2            equ	146	;# 
   896     0093                     PIE3            equ	147	;# 
   897     0095                     OPTION_REG      equ	149	;# 
   898     0096                     PCON            equ	150	;# 
   899     0097                     WDTCON          equ	151	;# 
   900     0098                     OSCTUNE         equ	152	;# 
   901     0099                     OSCCON          equ	153	;# 
   902     009A                     OSCSTAT         equ	154	;# 
   903     009B                     ADRES           equ	155	;# 
   904     009B                     ADRESL          equ	155	;# 
   905     009C                     ADRESH          equ	156	;# 
   906     009D                     ADCON0          equ	157	;# 
   907     009E                     ADCON1          equ	158	;# 
   908     009F                     ADCON2          equ	159	;# 
   909     010C                     LATA            equ	268	;# 
   910     010E                     LATC            equ	270	;# 
   911     0111                     CM1CON0         equ	273	;# 
   912     0112                     CM1CON1         equ	274	;# 
   913     0113                     CM2CON0         equ	275	;# 
   914     0114                     CM2CON1         equ	276	;# 
   915     0115                     CMOUT           equ	277	;# 
   916     0116                     BORCON          equ	278	;# 
   917     0117                     FVRCON          equ	279	;# 
   918     0118                     DAC1CON0        equ	280	;# 
   919     0119                     DAC1CON1        equ	281	;# 
   920     011C                     ZCD1CON         equ	284	;# 
   921     018C                     ANSELA          equ	396	;# 
   922     018E                     ANSELC          equ	398	;# 
   923     0191                     PMADR           equ	401	;# 
   924     0191                     PMADRL          equ	401	;# 
   925     0192                     PMADRH          equ	402	;# 
   926     0193                     PMDAT           equ	403	;# 
   927     0193                     PMDATL          equ	403	;# 
   928     0194                     PMDATH          equ	404	;# 
   929     0195                     PMCON1          equ	405	;# 
   930     0196                     PMCON2          equ	406	;# 
   931     0197                     VREGCON         equ	407	;# 
   932     0199                     RC1REG          equ	409	;# 
   933     0199                     RCREG           equ	409	;# 
   934     0199                     RCREG1          equ	409	;# 
   935     019A                     TX1REG          equ	410	;# 
   936     019A                     TXREG1          equ	410	;# 
   937     019A                     TXREG           equ	410	;# 
   938     019B                     SP1BRG          equ	411	;# 
   939     019B                     SPBRG           equ	411	;# 
   940     019B                     SP1BRGL         equ	411	;# 
   941     019B                     SPBRG1          equ	411	;# 
   942     019B                     SPBRGL          equ	411	;# 
   943     019C                     SP1BRGH         equ	412	;# 
   944     019C                     SPBRGH          equ	412	;# 
   945     019C                     SPBRGH1         equ	412	;# 
   946     019D                     RC1STA          equ	413	;# 
   947     019D                     RCSTA1          equ	413	;# 
   948     019D                     RCSTA           equ	413	;# 
   949     019E                     TX1STA          equ	414	;# 
   950     019E                     TXSTA1          equ	414	;# 
   951     019E                     TXSTA           equ	414	;# 
   952     019F                     BAUD1CON        equ	415	;# 
   953     019F                     BAUDCON1        equ	415	;# 
   954     019F                     BAUDCTL1        equ	415	;# 
   955     019F                     BAUDCON         equ	415	;# 
   956     019F                     BAUDCTL         equ	415	;# 
   957     020C                     WPUA            equ	524	;# 
   958     020E                     WPUC            equ	526	;# 
   959     0211                     SSP1BUF         equ	529	;# 
   960     0211                     SSPBUF          equ	529	;# 
   961     0212                     SSP1ADD         equ	530	;# 
   962     0212                     SSPADD          equ	530	;# 
   963     0213                     SSP1MSK         equ	531	;# 
   964     0213                     SSPMSK          equ	531	;# 
   965     0214                     SSP1STAT        equ	532	;# 
   966     0214                     SSPSTAT         equ	532	;# 
   967     0215                     SSP1CON1        equ	533	;# 
   968     0215                     SSPCON          equ	533	;# 
   969     0215                     SSPCON1         equ	533	;# 
   970     0215                     SSP1CON         equ	533	;# 
   971     0216                     SSP1CON2        equ	534	;# 
   972     0216                     SSPCON2         equ	534	;# 
   973     0217                     SSP1CON3        equ	535	;# 
   974     0217                     SSPCON3         equ	535	;# 
   975     028C                     ODCONA          equ	652	;# 
   976     028E                     ODCONC          equ	654	;# 
   977     0291                     CCPR1           equ	657	;# 
   978     0291                     CCPR1L          equ	657	;# 
   979     0292                     CCPR1H          equ	658	;# 
   980     0293                     CCP1CON         equ	659	;# 
   981     0293                     ECCP1CON        equ	659	;# 
   982     0298                     CCPR2           equ	664	;# 
   983     0298                     CCPR2L          equ	664	;# 
   984     0299                     CCPR2H          equ	665	;# 
   985     029A                     CCP2CON         equ	666	;# 
   986     029A                     ECCP2CON        equ	666	;# 
   987     029E                     CCPTMRS         equ	670	;# 
   988     030C                     SLRCONA         equ	780	;# 
   989     030E                     SLRCONC         equ	782	;# 
   990     038C                     INLVLA          equ	908	;# 
   991     038E                     INLVLC          equ	910	;# 
   992     0391                     IOCAP           equ	913	;# 
   993     0392                     IOCAN           equ	914	;# 
   994     0393                     IOCAF           equ	915	;# 
   995     0397                     IOCCP           equ	919	;# 
   996     0398                     IOCCN           equ	920	;# 
   997     0399                     IOCCF           equ	921	;# 
   998     0415                     TMR4            equ	1045	;# 
   999     0416                     PR4             equ	1046	;# 
  1000     0417                     T4CON           equ	1047	;# 
  1001     041C                     TMR6            equ	1052	;# 
  1002     041D                     PR6             equ	1053	;# 
  1003     041E                     T6CON           equ	1054	;# 
  1004     0511                     OPA1CON         equ	1297	;# 
  1005     0515                     OPA2CON         equ	1301	;# 
  1006     0617                     PWM3DCL         equ	1559	;# 
  1007     0618                     PWM3DCH         equ	1560	;# 
  1008     0619                     PWM3CON         equ	1561	;# 
  1009     0619                     PWM3CON0        equ	1561	;# 
  1010     061A                     PWM4DCL         equ	1562	;# 
  1011     061B                     PWM4DCH         equ	1563	;# 
  1012     061C                     PWM4CON         equ	1564	;# 
  1013     061C                     PWM4CON0        equ	1564	;# 
  1014     0691                     COG1PHR         equ	1681	;# 
  1015     0692                     COG1PHF         equ	1682	;# 
  1016     0693                     COG1BLKR        equ	1683	;# 
  1017     0694                     COG1BLKF        equ	1684	;# 
  1018     0695                     COG1DBR         equ	1685	;# 
  1019     0696                     COG1DBF         equ	1686	;# 
  1020     0697                     COG1CON0        equ	1687	;# 
  1021     0698                     COG1CON1        equ	1688	;# 
  1022     0699                     COG1RIS         equ	1689	;# 
  1023     069A                     COG1RSIM        equ	1690	;# 
  1024     069B                     COG1FIS         equ	1691	;# 
  1025     069C                     COG1FSIM        equ	1692	;# 
  1026     069D                     COG1ASD0        equ	1693	;# 
  1027     069E                     COG1ASD1        equ	1694	;# 
  1028     069F                     COG1STR         equ	1695	;# 
  1029     0E0F                     PPSLOCK         equ	3599	;# 
  1030     0E10                     INTPPS          equ	3600	;# 
  1031     0E11                     T0CKIPPS        equ	3601	;# 
  1032     0E12                     T1CKIPPS        equ	3602	;# 
  1033     0E13                     T1GPPS          equ	3603	;# 
  1034     0E14                     CCP1PPS         equ	3604	;# 
  1035     0E15                     CCP2PPS         equ	3605	;# 
  1036     0E17                     COGINPPS        equ	3607	;# 
  1037     0E20                     SSPCLKPPS       equ	3616	;# 
  1038     0E21                     SSPDATPPS       equ	3617	;# 
  1039     0E22                     SSPSSPPS        equ	3618	;# 
  1040     0E24                     RXPPS           equ	3620	;# 
  1041     0E25                     CKPPS           equ	3621	;# 
  1042     0E28                     CLCIN0PPS       equ	3624	;# 
  1043     0E29                     CLCIN1PPS       equ	3625	;# 
  1044     0E2A                     CLCIN2PPS       equ	3626	;# 
  1045     0E2B                     CLCIN3PPS       equ	3627	;# 
  1046     0E90                     RA0PPS          equ	3728	;# 
  1047     0E91                     RA1PPS          equ	3729	;# 
  1048     0E92                     RA2PPS          equ	3730	;# 
  1049     0E94                     RA4PPS          equ	3732	;# 
  1050     0E95                     RA5PPS          equ	3733	;# 
  1051     0EA0                     RC0PPS          equ	3744	;# 
  1052     0EA1                     RC1PPS          equ	3745	;# 
  1053     0EA2                     RC2PPS          equ	3746	;# 
  1054     0EA3                     RC3PPS          equ	3747	;# 
  1055     0EA4                     RC4PPS          equ	3748	;# 
  1056     0EA5                     RC5PPS          equ	3749	;# 
  1057     0F0F                     CLCDATA         equ	3855	;# 
  1058     0F10                     CLC1CON         equ	3856	;# 
  1059     0F11                     CLC1POL         equ	3857	;# 
  1060     0F12                     CLC1SEL0        equ	3858	;# 
  1061     0F13                     CLC1SEL1        equ	3859	;# 
  1062     0F14                     CLC1SEL2        equ	3860	;# 
  1063     0F15                     CLC1SEL3        equ	3861	;# 
  1064     0F16                     CLC1GLS0        equ	3862	;# 
  1065     0F17                     CLC1GLS1        equ	3863	;# 
  1066     0F18                     CLC1GLS2        equ	3864	;# 
  1067     0F19                     CLC1GLS3        equ	3865	;# 
  1068     0F1A                     CLC2CON         equ	3866	;# 
  1069     0F1B                     CLC2POL         equ	3867	;# 
  1070     0F1C                     CLC2SEL0        equ	3868	;# 
  1071     0F1D                     CLC2SEL1        equ	3869	;# 
  1072     0F1E                     CLC2SEL2        equ	3870	;# 
  1073     0F1F                     CLC2SEL3        equ	3871	;# 
  1074     0F20                     CLC2GLS0        equ	3872	;# 
  1075     0F21                     CLC2GLS1        equ	3873	;# 
  1076     0F22                     CLC2GLS2        equ	3874	;# 
  1077     0F23                     CLC2GLS3        equ	3875	;# 
  1078     0F24                     CLC3CON         equ	3876	;# 
  1079     0F25                     CLC3POL         equ	3877	;# 
  1080     0F26                     CLC3SEL0        equ	3878	;# 
  1081     0F27                     CLC3SEL1        equ	3879	;# 
  1082     0F28                     CLC3SEL2        equ	3880	;# 
  1083     0F29                     CLC3SEL3        equ	3881	;# 
  1084     0F2A                     CLC3GLS0        equ	3882	;# 
  1085     0F2B                     CLC3GLS1        equ	3883	;# 
  1086     0F2C                     CLC3GLS2        equ	3884	;# 
  1087     0F2D                     CLC3GLS3        equ	3885	;# 
  1088     0F9E                     ICDBK0H         equ	3998	;# 
  1089     0FE4                     STATUS_SHAD     equ	4068	;# 
  1090     0FE5                     WREG_SHAD       equ	4069	;# 
  1091     0FE6                     BSR_SHAD        equ	4070	;# 
  1092     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1093     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1094     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1095     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1096     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1097     0FED                     STKPTR          equ	4077	;# 
  1098     0FEE                     TOSL            equ	4078	;# 
  1099     0FEF                     TOSH            equ	4079	;# 
  1100     0000                     INDF0           equ	0	;# 
  1101     0001                     INDF1           equ	1	;# 
  1102     0002                     PCL             equ	2	;# 
  1103     0003                     STATUS          equ	3	;# 
  1104     0004                     FSR0L           equ	4	;# 
  1105     0005                     FSR0H           equ	5	;# 
  1106     0006                     FSR1L           equ	6	;# 
  1107     0007                     FSR1H           equ	7	;# 
  1108     0008                     BSR             equ	8	;# 
  1109     0009                     WREG            equ	9	;# 
  1110     000A                     PCLATH          equ	10	;# 
  1111     000B                     INTCON          equ	11	;# 
  1112     000C                     PORTA           equ	12	;# 
  1113     000E                     PORTC           equ	14	;# 
  1114     0011                     PIR1            equ	17	;# 
  1115     0012                     PIR2            equ	18	;# 
  1116     0013                     PIR3            equ	19	;# 
  1117     0015                     TMR0            equ	21	;# 
  1118     0016                     TMR1            equ	22	;# 
  1119     0016                     TMR1L           equ	22	;# 
  1120     0017                     TMR1H           equ	23	;# 
  1121     0018                     T1CON           equ	24	;# 
  1122     0019                     T1GCON          equ	25	;# 
  1123     001A                     TMR2            equ	26	;# 
  1124     001B                     PR2             equ	27	;# 
  1125     001C                     T2CON           equ	28	;# 
  1126     008C                     TRISA           equ	140	;# 
  1127     008E                     TRISC           equ	142	;# 
  1128     0091                     PIE1            equ	145	;# 
  1129     0092                     PIE2            equ	146	;# 
  1130     0093                     PIE3            equ	147	;# 
  1131     0095                     OPTION_REG      equ	149	;# 
  1132     0096                     PCON            equ	150	;# 
  1133     0097                     WDTCON          equ	151	;# 
  1134     0098                     OSCTUNE         equ	152	;# 
  1135     0099                     OSCCON          equ	153	;# 
  1136     009A                     OSCSTAT         equ	154	;# 
  1137     009B                     ADRES           equ	155	;# 
  1138     009B                     ADRESL          equ	155	;# 
  1139     009C                     ADRESH          equ	156	;# 
  1140     009D                     ADCON0          equ	157	;# 
  1141     009E                     ADCON1          equ	158	;# 
  1142     009F                     ADCON2          equ	159	;# 
  1143     010C                     LATA            equ	268	;# 
  1144     010E                     LATC            equ	270	;# 
  1145     0111                     CM1CON0         equ	273	;# 
  1146     0112                     CM1CON1         equ	274	;# 
  1147     0113                     CM2CON0         equ	275	;# 
  1148     0114                     CM2CON1         equ	276	;# 
  1149     0115                     CMOUT           equ	277	;# 
  1150     0116                     BORCON          equ	278	;# 
  1151     0117                     FVRCON          equ	279	;# 
  1152     0118                     DAC1CON0        equ	280	;# 
  1153     0119                     DAC1CON1        equ	281	;# 
  1154     011C                     ZCD1CON         equ	284	;# 
  1155     018C                     ANSELA          equ	396	;# 
  1156     018E                     ANSELC          equ	398	;# 
  1157     0191                     PMADR           equ	401	;# 
  1158     0191                     PMADRL          equ	401	;# 
  1159     0192                     PMADRH          equ	402	;# 
  1160     0193                     PMDAT           equ	403	;# 
  1161     0193                     PMDATL          equ	403	;# 
  1162     0194                     PMDATH          equ	404	;# 
  1163     0195                     PMCON1          equ	405	;# 
  1164     0196                     PMCON2          equ	406	;# 
  1165     0197                     VREGCON         equ	407	;# 
  1166     0199                     RC1REG          equ	409	;# 
  1167     0199                     RCREG           equ	409	;# 
  1168     0199                     RCREG1          equ	409	;# 
  1169     019A                     TX1REG          equ	410	;# 
  1170     019A                     TXREG1          equ	410	;# 
  1171     019A                     TXREG           equ	410	;# 
  1172     019B                     SP1BRG          equ	411	;# 
  1173     019B                     SPBRG           equ	411	;# 
  1174     019B                     SP1BRGL         equ	411	;# 
  1175     019B                     SPBRG1          equ	411	;# 
  1176     019B                     SPBRGL          equ	411	;# 
  1177     019C                     SP1BRGH         equ	412	;# 
  1178     019C                     SPBRGH          equ	412	;# 
  1179     019C                     SPBRGH1         equ	412	;# 
  1180     019D                     RC1STA          equ	413	;# 
  1181     019D                     RCSTA1          equ	413	;# 
  1182     019D                     RCSTA           equ	413	;# 
  1183     019E                     TX1STA          equ	414	;# 
  1184     019E                     TXSTA1          equ	414	;# 
  1185     019E                     TXSTA           equ	414	;# 
  1186     019F                     BAUD1CON        equ	415	;# 
  1187     019F                     BAUDCON1        equ	415	;# 
  1188     019F                     BAUDCTL1        equ	415	;# 
  1189     019F                     BAUDCON         equ	415	;# 
  1190     019F                     BAUDCTL         equ	415	;# 
  1191     020C                     WPUA            equ	524	;# 
  1192     020E                     WPUC            equ	526	;# 
  1193     0211                     SSP1BUF         equ	529	;# 
  1194     0211                     SSPBUF          equ	529	;# 
  1195     0212                     SSP1ADD         equ	530	;# 
  1196     0212                     SSPADD          equ	530	;# 
  1197     0213                     SSP1MSK         equ	531	;# 
  1198     0213                     SSPMSK          equ	531	;# 
  1199     0214                     SSP1STAT        equ	532	;# 
  1200     0214                     SSPSTAT         equ	532	;# 
  1201     0215                     SSP1CON1        equ	533	;# 
  1202     0215                     SSPCON          equ	533	;# 
  1203     0215                     SSPCON1         equ	533	;# 
  1204     0215                     SSP1CON         equ	533	;# 
  1205     0216                     SSP1CON2        equ	534	;# 
  1206     0216                     SSPCON2         equ	534	;# 
  1207     0217                     SSP1CON3        equ	535	;# 
  1208     0217                     SSPCON3         equ	535	;# 
  1209     028C                     ODCONA          equ	652	;# 
  1210     028E                     ODCONC          equ	654	;# 
  1211     0291                     CCPR1           equ	657	;# 
  1212     0291                     CCPR1L          equ	657	;# 
  1213     0292                     CCPR1H          equ	658	;# 
  1214     0293                     CCP1CON         equ	659	;# 
  1215     0293                     ECCP1CON        equ	659	;# 
  1216     0298                     CCPR2           equ	664	;# 
  1217     0298                     CCPR2L          equ	664	;# 
  1218     0299                     CCPR2H          equ	665	;# 
  1219     029A                     CCP2CON         equ	666	;# 
  1220     029A                     ECCP2CON        equ	666	;# 
  1221     029E                     CCPTMRS         equ	670	;# 
  1222     030C                     SLRCONA         equ	780	;# 
  1223     030E                     SLRCONC         equ	782	;# 
  1224     038C                     INLVLA          equ	908	;# 
  1225     038E                     INLVLC          equ	910	;# 
  1226     0391                     IOCAP           equ	913	;# 
  1227     0392                     IOCAN           equ	914	;# 
  1228     0393                     IOCAF           equ	915	;# 
  1229     0397                     IOCCP           equ	919	;# 
  1230     0398                     IOCCN           equ	920	;# 
  1231     0399                     IOCCF           equ	921	;# 
  1232     0415                     TMR4            equ	1045	;# 
  1233     0416                     PR4             equ	1046	;# 
  1234     0417                     T4CON           equ	1047	;# 
  1235     041C                     TMR6            equ	1052	;# 
  1236     041D                     PR6             equ	1053	;# 
  1237     041E                     T6CON           equ	1054	;# 
  1238     0511                     OPA1CON         equ	1297	;# 
  1239     0515                     OPA2CON         equ	1301	;# 
  1240     0617                     PWM3DCL         equ	1559	;# 
  1241     0618                     PWM3DCH         equ	1560	;# 
  1242     0619                     PWM3CON         equ	1561	;# 
  1243     0619                     PWM3CON0        equ	1561	;# 
  1244     061A                     PWM4DCL         equ	1562	;# 
  1245     061B                     PWM4DCH         equ	1563	;# 
  1246     061C                     PWM4CON         equ	1564	;# 
  1247     061C                     PWM4CON0        equ	1564	;# 
  1248     0691                     COG1PHR         equ	1681	;# 
  1249     0692                     COG1PHF         equ	1682	;# 
  1250     0693                     COG1BLKR        equ	1683	;# 
  1251     0694                     COG1BLKF        equ	1684	;# 
  1252     0695                     COG1DBR         equ	1685	;# 
  1253     0696                     COG1DBF         equ	1686	;# 
  1254     0697                     COG1CON0        equ	1687	;# 
  1255     0698                     COG1CON1        equ	1688	;# 
  1256     0699                     COG1RIS         equ	1689	;# 
  1257     069A                     COG1RSIM        equ	1690	;# 
  1258     069B                     COG1FIS         equ	1691	;# 
  1259     069C                     COG1FSIM        equ	1692	;# 
  1260     069D                     COG1ASD0        equ	1693	;# 
  1261     069E                     COG1ASD1        equ	1694	;# 
  1262     069F                     COG1STR         equ	1695	;# 
  1263     0E0F                     PPSLOCK         equ	3599	;# 
  1264     0E10                     INTPPS          equ	3600	;# 
  1265     0E11                     T0CKIPPS        equ	3601	;# 
  1266     0E12                     T1CKIPPS        equ	3602	;# 
  1267     0E13                     T1GPPS          equ	3603	;# 
  1268     0E14                     CCP1PPS         equ	3604	;# 
  1269     0E15                     CCP2PPS         equ	3605	;# 
  1270     0E17                     COGINPPS        equ	3607	;# 
  1271     0E20                     SSPCLKPPS       equ	3616	;# 
  1272     0E21                     SSPDATPPS       equ	3617	;# 
  1273     0E22                     SSPSSPPS        equ	3618	;# 
  1274     0E24                     RXPPS           equ	3620	;# 
  1275     0E25                     CKPPS           equ	3621	;# 
  1276     0E28                     CLCIN0PPS       equ	3624	;# 
  1277     0E29                     CLCIN1PPS       equ	3625	;# 
  1278     0E2A                     CLCIN2PPS       equ	3626	;# 
  1279     0E2B                     CLCIN3PPS       equ	3627	;# 
  1280     0E90                     RA0PPS          equ	3728	;# 
  1281     0E91                     RA1PPS          equ	3729	;# 
  1282     0E92                     RA2PPS          equ	3730	;# 
  1283     0E94                     RA4PPS          equ	3732	;# 
  1284     0E95                     RA5PPS          equ	3733	;# 
  1285     0EA0                     RC0PPS          equ	3744	;# 
  1286     0EA1                     RC1PPS          equ	3745	;# 
  1287     0EA2                     RC2PPS          equ	3746	;# 
  1288     0EA3                     RC3PPS          equ	3747	;# 
  1289     0EA4                     RC4PPS          equ	3748	;# 
  1290     0EA5                     RC5PPS          equ	3749	;# 
  1291     0F0F                     CLCDATA         equ	3855	;# 
  1292     0F10                     CLC1CON         equ	3856	;# 
  1293     0F11                     CLC1POL         equ	3857	;# 
  1294     0F12                     CLC1SEL0        equ	3858	;# 
  1295     0F13                     CLC1SEL1        equ	3859	;# 
  1296     0F14                     CLC1SEL2        equ	3860	;# 
  1297     0F15                     CLC1SEL3        equ	3861	;# 
  1298     0F16                     CLC1GLS0        equ	3862	;# 
  1299     0F17                     CLC1GLS1        equ	3863	;# 
  1300     0F18                     CLC1GLS2        equ	3864	;# 
  1301     0F19                     CLC1GLS3        equ	3865	;# 
  1302     0F1A                     CLC2CON         equ	3866	;# 
  1303     0F1B                     CLC2POL         equ	3867	;# 
  1304     0F1C                     CLC2SEL0        equ	3868	;# 
  1305     0F1D                     CLC2SEL1        equ	3869	;# 
  1306     0F1E                     CLC2SEL2        equ	3870	;# 
  1307     0F1F                     CLC2SEL3        equ	3871	;# 
  1308     0F20                     CLC2GLS0        equ	3872	;# 
  1309     0F21                     CLC2GLS1        equ	3873	;# 
  1310     0F22                     CLC2GLS2        equ	3874	;# 
  1311     0F23                     CLC2GLS3        equ	3875	;# 
  1312     0F24                     CLC3CON         equ	3876	;# 
  1313     0F25                     CLC3POL         equ	3877	;# 
  1314     0F26                     CLC3SEL0        equ	3878	;# 
  1315     0F27                     CLC3SEL1        equ	3879	;# 
  1316     0F28                     CLC3SEL2        equ	3880	;# 
  1317     0F29                     CLC3SEL3        equ	3881	;# 
  1318     0F2A                     CLC3GLS0        equ	3882	;# 
  1319     0F2B                     CLC3GLS1        equ	3883	;# 
  1320     0F2C                     CLC3GLS2        equ	3884	;# 
  1321     0F2D                     CLC3GLS3        equ	3885	;# 
  1322     0F9E                     ICDBK0H         equ	3998	;# 
  1323     0FE4                     STATUS_SHAD     equ	4068	;# 
  1324     0FE5                     WREG_SHAD       equ	4069	;# 
  1325     0FE6                     BSR_SHAD        equ	4070	;# 
  1326     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1327     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1328     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1329     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1330     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1331     0FED                     STKPTR          equ	4077	;# 
  1332     0FEE                     TOSL            equ	4078	;# 
  1333     0FEF                     TOSH            equ	4079	;# 
  1334     0000                     INDF0           equ	0	;# 
  1335     0001                     INDF1           equ	1	;# 
  1336     0002                     PCL             equ	2	;# 
  1337     0003                     STATUS          equ	3	;# 
  1338     0004                     FSR0L           equ	4	;# 
  1339     0005                     FSR0H           equ	5	;# 
  1340     0006                     FSR1L           equ	6	;# 
  1341     0007                     FSR1H           equ	7	;# 
  1342     0008                     BSR             equ	8	;# 
  1343     0009                     WREG            equ	9	;# 
  1344     000A                     PCLATH          equ	10	;# 
  1345     000B                     INTCON          equ	11	;# 
  1346     000C                     PORTA           equ	12	;# 
  1347     000E                     PORTC           equ	14	;# 
  1348     0011                     PIR1            equ	17	;# 
  1349     0012                     PIR2            equ	18	;# 
  1350     0013                     PIR3            equ	19	;# 
  1351     0015                     TMR0            equ	21	;# 
  1352     0016                     TMR1            equ	22	;# 
  1353     0016                     TMR1L           equ	22	;# 
  1354     0017                     TMR1H           equ	23	;# 
  1355     0018                     T1CON           equ	24	;# 
  1356     0019                     T1GCON          equ	25	;# 
  1357     001A                     TMR2            equ	26	;# 
  1358     001B                     PR2             equ	27	;# 
  1359     001C                     T2CON           equ	28	;# 
  1360     008C                     TRISA           equ	140	;# 
  1361     008E                     TRISC           equ	142	;# 
  1362     0091                     PIE1            equ	145	;# 
  1363     0092                     PIE2            equ	146	;# 
  1364     0093                     PIE3            equ	147	;# 
  1365     0095                     OPTION_REG      equ	149	;# 
  1366     0096                     PCON            equ	150	;# 
  1367     0097                     WDTCON          equ	151	;# 
  1368     0098                     OSCTUNE         equ	152	;# 
  1369     0099                     OSCCON          equ	153	;# 
  1370     009A                     OSCSTAT         equ	154	;# 
  1371     009B                     ADRES           equ	155	;# 
  1372     009B                     ADRESL          equ	155	;# 
  1373     009C                     ADRESH          equ	156	;# 
  1374     009D                     ADCON0          equ	157	;# 
  1375     009E                     ADCON1          equ	158	;# 
  1376     009F                     ADCON2          equ	159	;# 
  1377     010C                     LATA            equ	268	;# 
  1378     010E                     LATC            equ	270	;# 
  1379     0111                     CM1CON0         equ	273	;# 
  1380     0112                     CM1CON1         equ	274	;# 
  1381     0113                     CM2CON0         equ	275	;# 
  1382     0114                     CM2CON1         equ	276	;# 
  1383     0115                     CMOUT           equ	277	;# 
  1384     0116                     BORCON          equ	278	;# 
  1385     0117                     FVRCON          equ	279	;# 
  1386     0118                     DAC1CON0        equ	280	;# 
  1387     0119                     DAC1CON1        equ	281	;# 
  1388     011C                     ZCD1CON         equ	284	;# 
  1389     018C                     ANSELA          equ	396	;# 
  1390     018E                     ANSELC          equ	398	;# 
  1391     0191                     PMADR           equ	401	;# 
  1392     0191                     PMADRL          equ	401	;# 
  1393     0192                     PMADRH          equ	402	;# 
  1394     0193                     PMDAT           equ	403	;# 
  1395     0193                     PMDATL          equ	403	;# 
  1396     0194                     PMDATH          equ	404	;# 
  1397     0195                     PMCON1          equ	405	;# 
  1398     0196                     PMCON2          equ	406	;# 
  1399     0197                     VREGCON         equ	407	;# 
  1400     0199                     RC1REG          equ	409	;# 
  1401     0199                     RCREG           equ	409	;# 
  1402     0199                     RCREG1          equ	409	;# 
  1403     019A                     TX1REG          equ	410	;# 
  1404     019A                     TXREG1          equ	410	;# 
  1405     019A                     TXREG           equ	410	;# 
  1406     019B                     SP1BRG          equ	411	;# 
  1407     019B                     SPBRG           equ	411	;# 
  1408     019B                     SP1BRGL         equ	411	;# 
  1409     019B                     SPBRG1          equ	411	;# 
  1410     019B                     SPBRGL          equ	411	;# 
  1411     019C                     SP1BRGH         equ	412	;# 
  1412     019C                     SPBRGH          equ	412	;# 
  1413     019C                     SPBRGH1         equ	412	;# 
  1414     019D                     RC1STA          equ	413	;# 
  1415     019D                     RCSTA1          equ	413	;# 
  1416     019D                     RCSTA           equ	413	;# 
  1417     019E                     TX1STA          equ	414	;# 
  1418     019E                     TXSTA1          equ	414	;# 
  1419     019E                     TXSTA           equ	414	;# 
  1420     019F                     BAUD1CON        equ	415	;# 
  1421     019F                     BAUDCON1        equ	415	;# 
  1422     019F                     BAUDCTL1        equ	415	;# 
  1423     019F                     BAUDCON         equ	415	;# 
  1424     019F                     BAUDCTL         equ	415	;# 
  1425     020C                     WPUA            equ	524	;# 
  1426     020E                     WPUC            equ	526	;# 
  1427     0211                     SSP1BUF         equ	529	;# 
  1428     0211                     SSPBUF          equ	529	;# 
  1429     0212                     SSP1ADD         equ	530	;# 
  1430     0212                     SSPADD          equ	530	;# 
  1431     0213                     SSP1MSK         equ	531	;# 
  1432     0213                     SSPMSK          equ	531	;# 
  1433     0214                     SSP1STAT        equ	532	;# 
  1434     0214                     SSPSTAT         equ	532	;# 
  1435     0215                     SSP1CON1        equ	533	;# 
  1436     0215                     SSPCON          equ	533	;# 
  1437     0215                     SSPCON1         equ	533	;# 
  1438     0215                     SSP1CON         equ	533	;# 
  1439     0216                     SSP1CON2        equ	534	;# 
  1440     0216                     SSPCON2         equ	534	;# 
  1441     0217                     SSP1CON3        equ	535	;# 
  1442     0217                     SSPCON3         equ	535	;# 
  1443     028C                     ODCONA          equ	652	;# 
  1444     028E                     ODCONC          equ	654	;# 
  1445     0291                     CCPR1           equ	657	;# 
  1446     0291                     CCPR1L          equ	657	;# 
  1447     0292                     CCPR1H          equ	658	;# 
  1448     0293                     CCP1CON         equ	659	;# 
  1449     0293                     ECCP1CON        equ	659	;# 
  1450     0298                     CCPR2           equ	664	;# 
  1451     0298                     CCPR2L          equ	664	;# 
  1452     0299                     CCPR2H          equ	665	;# 
  1453     029A                     CCP2CON         equ	666	;# 
  1454     029A                     ECCP2CON        equ	666	;# 
  1455     029E                     CCPTMRS         equ	670	;# 
  1456     030C                     SLRCONA         equ	780	;# 
  1457     030E                     SLRCONC         equ	782	;# 
  1458     038C                     INLVLA          equ	908	;# 
  1459     038E                     INLVLC          equ	910	;# 
  1460     0391                     IOCAP           equ	913	;# 
  1461     0392                     IOCAN           equ	914	;# 
  1462     0393                     IOCAF           equ	915	;# 
  1463     0397                     IOCCP           equ	919	;# 
  1464     0398                     IOCCN           equ	920	;# 
  1465     0399                     IOCCF           equ	921	;# 
  1466     0415                     TMR4            equ	1045	;# 
  1467     0416                     PR4             equ	1046	;# 
  1468     0417                     T4CON           equ	1047	;# 
  1469     041C                     TMR6            equ	1052	;# 
  1470     041D                     PR6             equ	1053	;# 
  1471     041E                     T6CON           equ	1054	;# 
  1472     0511                     OPA1CON         equ	1297	;# 
  1473     0515                     OPA2CON         equ	1301	;# 
  1474     0617                     PWM3DCL         equ	1559	;# 
  1475     0618                     PWM3DCH         equ	1560	;# 
  1476     0619                     PWM3CON         equ	1561	;# 
  1477     0619                     PWM3CON0        equ	1561	;# 
  1478     061A                     PWM4DCL         equ	1562	;# 
  1479     061B                     PWM4DCH         equ	1563	;# 
  1480     061C                     PWM4CON         equ	1564	;# 
  1481     061C                     PWM4CON0        equ	1564	;# 
  1482     0691                     COG1PHR         equ	1681	;# 
  1483     0692                     COG1PHF         equ	1682	;# 
  1484     0693                     COG1BLKR        equ	1683	;# 
  1485     0694                     COG1BLKF        equ	1684	;# 
  1486     0695                     COG1DBR         equ	1685	;# 
  1487     0696                     COG1DBF         equ	1686	;# 
  1488     0697                     COG1CON0        equ	1687	;# 
  1489     0698                     COG1CON1        equ	1688	;# 
  1490     0699                     COG1RIS         equ	1689	;# 
  1491     069A                     COG1RSIM        equ	1690	;# 
  1492     069B                     COG1FIS         equ	1691	;# 
  1493     069C                     COG1FSIM        equ	1692	;# 
  1494     069D                     COG1ASD0        equ	1693	;# 
  1495     069E                     COG1ASD1        equ	1694	;# 
  1496     069F                     COG1STR         equ	1695	;# 
  1497     0E0F                     PPSLOCK         equ	3599	;# 
  1498     0E10                     INTPPS          equ	3600	;# 
  1499     0E11                     T0CKIPPS        equ	3601	;# 
  1500     0E12                     T1CKIPPS        equ	3602	;# 
  1501     0E13                     T1GPPS          equ	3603	;# 
  1502     0E14                     CCP1PPS         equ	3604	;# 
  1503     0E15                     CCP2PPS         equ	3605	;# 
  1504     0E17                     COGINPPS        equ	3607	;# 
  1505     0E20                     SSPCLKPPS       equ	3616	;# 
  1506     0E21                     SSPDATPPS       equ	3617	;# 
  1507     0E22                     SSPSSPPS        equ	3618	;# 
  1508     0E24                     RXPPS           equ	3620	;# 
  1509     0E25                     CKPPS           equ	3621	;# 
  1510     0E28                     CLCIN0PPS       equ	3624	;# 
  1511     0E29                     CLCIN1PPS       equ	3625	;# 
  1512     0E2A                     CLCIN2PPS       equ	3626	;# 
  1513     0E2B                     CLCIN3PPS       equ	3627	;# 
  1514     0E90                     RA0PPS          equ	3728	;# 
  1515     0E91                     RA1PPS          equ	3729	;# 
  1516     0E92                     RA2PPS          equ	3730	;# 
  1517     0E94                     RA4PPS          equ	3732	;# 
  1518     0E95                     RA5PPS          equ	3733	;# 
  1519     0EA0                     RC0PPS          equ	3744	;# 
  1520     0EA1                     RC1PPS          equ	3745	;# 
  1521     0EA2                     RC2PPS          equ	3746	;# 
  1522     0EA3                     RC3PPS          equ	3747	;# 
  1523     0EA4                     RC4PPS          equ	3748	;# 
  1524     0EA5                     RC5PPS          equ	3749	;# 
  1525     0F0F                     CLCDATA         equ	3855	;# 
  1526     0F10                     CLC1CON         equ	3856	;# 
  1527     0F11                     CLC1POL         equ	3857	;# 
  1528     0F12                     CLC1SEL0        equ	3858	;# 
  1529     0F13                     CLC1SEL1        equ	3859	;# 
  1530     0F14                     CLC1SEL2        equ	3860	;# 
  1531     0F15                     CLC1SEL3        equ	3861	;# 
  1532     0F16                     CLC1GLS0        equ	3862	;# 
  1533     0F17                     CLC1GLS1        equ	3863	;# 
  1534     0F18                     CLC1GLS2        equ	3864	;# 
  1535     0F19                     CLC1GLS3        equ	3865	;# 
  1536     0F1A                     CLC2CON         equ	3866	;# 
  1537     0F1B                     CLC2POL         equ	3867	;# 
  1538     0F1C                     CLC2SEL0        equ	3868	;# 
  1539     0F1D                     CLC2SEL1        equ	3869	;# 
  1540     0F1E                     CLC2SEL2        equ	3870	;# 
  1541     0F1F                     CLC2SEL3        equ	3871	;# 
  1542     0F20                     CLC2GLS0        equ	3872	;# 
  1543     0F21                     CLC2GLS1        equ	3873	;# 
  1544     0F22                     CLC2GLS2        equ	3874	;# 
  1545     0F23                     CLC2GLS3        equ	3875	;# 
  1546     0F24                     CLC3CON         equ	3876	;# 
  1547     0F25                     CLC3POL         equ	3877	;# 
  1548     0F26                     CLC3SEL0        equ	3878	;# 
  1549     0F27                     CLC3SEL1        equ	3879	;# 
  1550     0F28                     CLC3SEL2        equ	3880	;# 
  1551     0F29                     CLC3SEL3        equ	3881	;# 
  1552     0F2A                     CLC3GLS0        equ	3882	;# 
  1553     0F2B                     CLC3GLS1        equ	3883	;# 
  1554     0F2C                     CLC3GLS2        equ	3884	;# 
  1555     0F2D                     CLC3GLS3        equ	3885	;# 
  1556     0F9E                     ICDBK0H         equ	3998	;# 
  1557     0FE4                     STATUS_SHAD     equ	4068	;# 
  1558     0FE5                     WREG_SHAD       equ	4069	;# 
  1559     0FE6                     BSR_SHAD        equ	4070	;# 
  1560     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1561     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1562     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1563     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1564     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1565     0FED                     STKPTR          equ	4077	;# 
  1566     0FEE                     TOSL            equ	4078	;# 
  1567     0FEF                     TOSH            equ	4079	;# 
  1568     0000                     INDF0           equ	0	;# 
  1569     0001                     INDF1           equ	1	;# 
  1570     0002                     PCL             equ	2	;# 
  1571     0003                     STATUS          equ	3	;# 
  1572     0004                     FSR0L           equ	4	;# 
  1573     0005                     FSR0H           equ	5	;# 
  1574     0006                     FSR1L           equ	6	;# 
  1575     0007                     FSR1H           equ	7	;# 
  1576     0008                     BSR             equ	8	;# 
  1577     0009                     WREG            equ	9	;# 
  1578     000A                     PCLATH          equ	10	;# 
  1579     000B                     INTCON          equ	11	;# 
  1580     000C                     PORTA           equ	12	;# 
  1581     000E                     PORTC           equ	14	;# 
  1582     0011                     PIR1            equ	17	;# 
  1583     0012                     PIR2            equ	18	;# 
  1584     0013                     PIR3            equ	19	;# 
  1585     0015                     TMR0            equ	21	;# 
  1586     0016                     TMR1            equ	22	;# 
  1587     0016                     TMR1L           equ	22	;# 
  1588     0017                     TMR1H           equ	23	;# 
  1589     0018                     T1CON           equ	24	;# 
  1590     0019                     T1GCON          equ	25	;# 
  1591     001A                     TMR2            equ	26	;# 
  1592     001B                     PR2             equ	27	;# 
  1593     001C                     T2CON           equ	28	;# 
  1594     008C                     TRISA           equ	140	;# 
  1595     008E                     TRISC           equ	142	;# 
  1596     0091                     PIE1            equ	145	;# 
  1597     0092                     PIE2            equ	146	;# 
  1598     0093                     PIE3            equ	147	;# 
  1599     0095                     OPTION_REG      equ	149	;# 
  1600     0096                     PCON            equ	150	;# 
  1601     0097                     WDTCON          equ	151	;# 
  1602     0098                     OSCTUNE         equ	152	;# 
  1603     0099                     OSCCON          equ	153	;# 
  1604     009A                     OSCSTAT         equ	154	;# 
  1605     009B                     ADRES           equ	155	;# 
  1606     009B                     ADRESL          equ	155	;# 
  1607     009C                     ADRESH          equ	156	;# 
  1608     009D                     ADCON0          equ	157	;# 
  1609     009E                     ADCON1          equ	158	;# 
  1610     009F                     ADCON2          equ	159	;# 
  1611     010C                     LATA            equ	268	;# 
  1612     010E                     LATC            equ	270	;# 
  1613     0111                     CM1CON0         equ	273	;# 
  1614     0112                     CM1CON1         equ	274	;# 
  1615     0113                     CM2CON0         equ	275	;# 
  1616     0114                     CM2CON1         equ	276	;# 
  1617     0115                     CMOUT           equ	277	;# 
  1618     0116                     BORCON          equ	278	;# 
  1619     0117                     FVRCON          equ	279	;# 
  1620     0118                     DAC1CON0        equ	280	;# 
  1621     0119                     DAC1CON1        equ	281	;# 
  1622     011C                     ZCD1CON         equ	284	;# 
  1623     018C                     ANSELA          equ	396	;# 
  1624     018E                     ANSELC          equ	398	;# 
  1625     0191                     PMADR           equ	401	;# 
  1626     0191                     PMADRL          equ	401	;# 
  1627     0192                     PMADRH          equ	402	;# 
  1628     0193                     PMDAT           equ	403	;# 
  1629     0193                     PMDATL          equ	403	;# 
  1630     0194                     PMDATH          equ	404	;# 
  1631     0195                     PMCON1          equ	405	;# 
  1632     0196                     PMCON2          equ	406	;# 
  1633     0197                     VREGCON         equ	407	;# 
  1634     0199                     RC1REG          equ	409	;# 
  1635     0199                     RCREG           equ	409	;# 
  1636     0199                     RCREG1          equ	409	;# 
  1637     019A                     TX1REG          equ	410	;# 
  1638     019A                     TXREG1          equ	410	;# 
  1639     019A                     TXREG           equ	410	;# 
  1640     019B                     SP1BRG          equ	411	;# 
  1641     019B                     SPBRG           equ	411	;# 
  1642     019B                     SP1BRGL         equ	411	;# 
  1643     019B                     SPBRG1          equ	411	;# 
  1644     019B                     SPBRGL          equ	411	;# 
  1645     019C                     SP1BRGH         equ	412	;# 
  1646     019C                     SPBRGH          equ	412	;# 
  1647     019C                     SPBRGH1         equ	412	;# 
  1648     019D                     RC1STA          equ	413	;# 
  1649     019D                     RCSTA1          equ	413	;# 
  1650     019D                     RCSTA           equ	413	;# 
  1651     019E                     TX1STA          equ	414	;# 
  1652     019E                     TXSTA1          equ	414	;# 
  1653     019E                     TXSTA           equ	414	;# 
  1654     019F                     BAUD1CON        equ	415	;# 
  1655     019F                     BAUDCON1        equ	415	;# 
  1656     019F                     BAUDCTL1        equ	415	;# 
  1657     019F                     BAUDCON         equ	415	;# 
  1658     019F                     BAUDCTL         equ	415	;# 
  1659     020C                     WPUA            equ	524	;# 
  1660     020E                     WPUC            equ	526	;# 
  1661     0211                     SSP1BUF         equ	529	;# 
  1662     0211                     SSPBUF          equ	529	;# 
  1663     0212                     SSP1ADD         equ	530	;# 
  1664     0212                     SSPADD          equ	530	;# 
  1665     0213                     SSP1MSK         equ	531	;# 
  1666     0213                     SSPMSK          equ	531	;# 
  1667     0214                     SSP1STAT        equ	532	;# 
  1668     0214                     SSPSTAT         equ	532	;# 
  1669     0215                     SSP1CON1        equ	533	;# 
  1670     0215                     SSPCON          equ	533	;# 
  1671     0215                     SSPCON1         equ	533	;# 
  1672     0215                     SSP1CON         equ	533	;# 
  1673     0216                     SSP1CON2        equ	534	;# 
  1674     0216                     SSPCON2         equ	534	;# 
  1675     0217                     SSP1CON3        equ	535	;# 
  1676     0217                     SSPCON3         equ	535	;# 
  1677     028C                     ODCONA          equ	652	;# 
  1678     028E                     ODCONC          equ	654	;# 
  1679     0291                     CCPR1           equ	657	;# 
  1680     0291                     CCPR1L          equ	657	;# 
  1681     0292                     CCPR1H          equ	658	;# 
  1682     0293                     CCP1CON         equ	659	;# 
  1683     0293                     ECCP1CON        equ	659	;# 
  1684     0298                     CCPR2           equ	664	;# 
  1685     0298                     CCPR2L          equ	664	;# 
  1686     0299                     CCPR2H          equ	665	;# 
  1687     029A                     CCP2CON         equ	666	;# 
  1688     029A                     ECCP2CON        equ	666	;# 
  1689     029E                     CCPTMRS         equ	670	;# 
  1690     030C                     SLRCONA         equ	780	;# 
  1691     030E                     SLRCONC         equ	782	;# 
  1692     038C                     INLVLA          equ	908	;# 
  1693     038E                     INLVLC          equ	910	;# 
  1694     0391                     IOCAP           equ	913	;# 
  1695     0392                     IOCAN           equ	914	;# 
  1696     0393                     IOCAF           equ	915	;# 
  1697     0397                     IOCCP           equ	919	;# 
  1698     0398                     IOCCN           equ	920	;# 
  1699     0399                     IOCCF           equ	921	;# 
  1700     0415                     TMR4            equ	1045	;# 
  1701     0416                     PR4             equ	1046	;# 
  1702     0417                     T4CON           equ	1047	;# 
  1703     041C                     TMR6            equ	1052	;# 
  1704     041D                     PR6             equ	1053	;# 
  1705     041E                     T6CON           equ	1054	;# 
  1706     0511                     OPA1CON         equ	1297	;# 
  1707     0515                     OPA2CON         equ	1301	;# 
  1708     0617                     PWM3DCL         equ	1559	;# 
  1709     0618                     PWM3DCH         equ	1560	;# 
  1710     0619                     PWM3CON         equ	1561	;# 
  1711     0619                     PWM3CON0        equ	1561	;# 
  1712     061A                     PWM4DCL         equ	1562	;# 
  1713     061B                     PWM4DCH         equ	1563	;# 
  1714     061C                     PWM4CON         equ	1564	;# 
  1715     061C                     PWM4CON0        equ	1564	;# 
  1716     0691                     COG1PHR         equ	1681	;# 
  1717     0692                     COG1PHF         equ	1682	;# 
  1718     0693                     COG1BLKR        equ	1683	;# 
  1719     0694                     COG1BLKF        equ	1684	;# 
  1720     0695                     COG1DBR         equ	1685	;# 
  1721     0696                     COG1DBF         equ	1686	;# 
  1722     0697                     COG1CON0        equ	1687	;# 
  1723     0698                     COG1CON1        equ	1688	;# 
  1724     0699                     COG1RIS         equ	1689	;# 
  1725     069A                     COG1RSIM        equ	1690	;# 
  1726     069B                     COG1FIS         equ	1691	;# 
  1727     069C                     COG1FSIM        equ	1692	;# 
  1728     069D                     COG1ASD0        equ	1693	;# 
  1729     069E                     COG1ASD1        equ	1694	;# 
  1730     069F                     COG1STR         equ	1695	;# 
  1731     0E0F                     PPSLOCK         equ	3599	;# 
  1732     0E10                     INTPPS          equ	3600	;# 
  1733     0E11                     T0CKIPPS        equ	3601	;# 
  1734     0E12                     T1CKIPPS        equ	3602	;# 
  1735     0E13                     T1GPPS          equ	3603	;# 
  1736     0E14                     CCP1PPS         equ	3604	;# 
  1737     0E15                     CCP2PPS         equ	3605	;# 
  1738     0E17                     COGINPPS        equ	3607	;# 
  1739     0E20                     SSPCLKPPS       equ	3616	;# 
  1740     0E21                     SSPDATPPS       equ	3617	;# 
  1741     0E22                     SSPSSPPS        equ	3618	;# 
  1742     0E24                     RXPPS           equ	3620	;# 
  1743     0E25                     CKPPS           equ	3621	;# 
  1744     0E28                     CLCIN0PPS       equ	3624	;# 
  1745     0E29                     CLCIN1PPS       equ	3625	;# 
  1746     0E2A                     CLCIN2PPS       equ	3626	;# 
  1747     0E2B                     CLCIN3PPS       equ	3627	;# 
  1748     0E90                     RA0PPS          equ	3728	;# 
  1749     0E91                     RA1PPS          equ	3729	;# 
  1750     0E92                     RA2PPS          equ	3730	;# 
  1751     0E94                     RA4PPS          equ	3732	;# 
  1752     0E95                     RA5PPS          equ	3733	;# 
  1753     0EA0                     RC0PPS          equ	3744	;# 
  1754     0EA1                     RC1PPS          equ	3745	;# 
  1755     0EA2                     RC2PPS          equ	3746	;# 
  1756     0EA3                     RC3PPS          equ	3747	;# 
  1757     0EA4                     RC4PPS          equ	3748	;# 
  1758     0EA5                     RC5PPS          equ	3749	;# 
  1759     0F0F                     CLCDATA         equ	3855	;# 
  1760     0F10                     CLC1CON         equ	3856	;# 
  1761     0F11                     CLC1POL         equ	3857	;# 
  1762     0F12                     CLC1SEL0        equ	3858	;# 
  1763     0F13                     CLC1SEL1        equ	3859	;# 
  1764     0F14                     CLC1SEL2        equ	3860	;# 
  1765     0F15                     CLC1SEL3        equ	3861	;# 
  1766     0F16                     CLC1GLS0        equ	3862	;# 
  1767     0F17                     CLC1GLS1        equ	3863	;# 
  1768     0F18                     CLC1GLS2        equ	3864	;# 
  1769     0F19                     CLC1GLS3        equ	3865	;# 
  1770     0F1A                     CLC2CON         equ	3866	;# 
  1771     0F1B                     CLC2POL         equ	3867	;# 
  1772     0F1C                     CLC2SEL0        equ	3868	;# 
  1773     0F1D                     CLC2SEL1        equ	3869	;# 
  1774     0F1E                     CLC2SEL2        equ	3870	;# 
  1775     0F1F                     CLC2SEL3        equ	3871	;# 
  1776     0F20                     CLC2GLS0        equ	3872	;# 
  1777     0F21                     CLC2GLS1        equ	3873	;# 
  1778     0F22                     CLC2GLS2        equ	3874	;# 
  1779     0F23                     CLC2GLS3        equ	3875	;# 
  1780     0F24                     CLC3CON         equ	3876	;# 
  1781     0F25                     CLC3POL         equ	3877	;# 
  1782     0F26                     CLC3SEL0        equ	3878	;# 
  1783     0F27                     CLC3SEL1        equ	3879	;# 
  1784     0F28                     CLC3SEL2        equ	3880	;# 
  1785     0F29                     CLC3SEL3        equ	3881	;# 
  1786     0F2A                     CLC3GLS0        equ	3882	;# 
  1787     0F2B                     CLC3GLS1        equ	3883	;# 
  1788     0F2C                     CLC3GLS2        equ	3884	;# 
  1789     0F2D                     CLC3GLS3        equ	3885	;# 
  1790     0F9E                     ICDBK0H         equ	3998	;# 
  1791     0FE4                     STATUS_SHAD     equ	4068	;# 
  1792     0FE5                     WREG_SHAD       equ	4069	;# 
  1793     0FE6                     BSR_SHAD        equ	4070	;# 
  1794     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1795     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1796     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1797     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1798     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1799     0FED                     STKPTR          equ	4077	;# 
  1800     0FEE                     TOSL            equ	4078	;# 
  1801     0FEF                     TOSH            equ	4079	;# 
  1802     0000                     INDF0           equ	0	;# 
  1803     0001                     INDF1           equ	1	;# 
  1804     0002                     PCL             equ	2	;# 
  1805     0003                     STATUS          equ	3	;# 
  1806     0004                     FSR0L           equ	4	;# 
  1807     0005                     FSR0H           equ	5	;# 
  1808     0006                     FSR1L           equ	6	;# 
  1809     0007                     FSR1H           equ	7	;# 
  1810     0008                     BSR             equ	8	;# 
  1811     0009                     WREG            equ	9	;# 
  1812     000A                     PCLATH          equ	10	;# 
  1813     000B                     INTCON          equ	11	;# 
  1814     000C                     PORTA           equ	12	;# 
  1815     000E                     PORTC           equ	14	;# 
  1816     0011                     PIR1            equ	17	;# 
  1817     0012                     PIR2            equ	18	;# 
  1818     0013                     PIR3            equ	19	;# 
  1819     0015                     TMR0            equ	21	;# 
  1820     0016                     TMR1            equ	22	;# 
  1821     0016                     TMR1L           equ	22	;# 
  1822     0017                     TMR1H           equ	23	;# 
  1823     0018                     T1CON           equ	24	;# 
  1824     0019                     T1GCON          equ	25	;# 
  1825     001A                     TMR2            equ	26	;# 
  1826     001B                     PR2             equ	27	;# 
  1827     001C                     T2CON           equ	28	;# 
  1828     008C                     TRISA           equ	140	;# 
  1829     008E                     TRISC           equ	142	;# 
  1830     0091                     PIE1            equ	145	;# 
  1831     0092                     PIE2            equ	146	;# 
  1832     0093                     PIE3            equ	147	;# 
  1833     0095                     OPTION_REG      equ	149	;# 
  1834     0096                     PCON            equ	150	;# 
  1835     0097                     WDTCON          equ	151	;# 
  1836     0098                     OSCTUNE         equ	152	;# 
  1837     0099                     OSCCON          equ	153	;# 
  1838     009A                     OSCSTAT         equ	154	;# 
  1839     009B                     ADRES           equ	155	;# 
  1840     009B                     ADRESL          equ	155	;# 
  1841     009C                     ADRESH          equ	156	;# 
  1842     009D                     ADCON0          equ	157	;# 
  1843     009E                     ADCON1          equ	158	;# 
  1844     009F                     ADCON2          equ	159	;# 
  1845     010C                     LATA            equ	268	;# 
  1846     010E                     LATC            equ	270	;# 
  1847     0111                     CM1CON0         equ	273	;# 
  1848     0112                     CM1CON1         equ	274	;# 
  1849     0113                     CM2CON0         equ	275	;# 
  1850     0114                     CM2CON1         equ	276	;# 
  1851     0115                     CMOUT           equ	277	;# 
  1852     0116                     BORCON          equ	278	;# 
  1853     0117                     FVRCON          equ	279	;# 
  1854     0118                     DAC1CON0        equ	280	;# 
  1855     0119                     DAC1CON1        equ	281	;# 
  1856     011C                     ZCD1CON         equ	284	;# 
  1857     018C                     ANSELA          equ	396	;# 
  1858     018E                     ANSELC          equ	398	;# 
  1859     0191                     PMADR           equ	401	;# 
  1860     0191                     PMADRL          equ	401	;# 
  1861     0192                     PMADRH          equ	402	;# 
  1862     0193                     PMDAT           equ	403	;# 
  1863     0193                     PMDATL          equ	403	;# 
  1864     0194                     PMDATH          equ	404	;# 
  1865     0195                     PMCON1          equ	405	;# 
  1866     0196                     PMCON2          equ	406	;# 
  1867     0197                     VREGCON         equ	407	;# 
  1868     0199                     RC1REG          equ	409	;# 
  1869     0199                     RCREG           equ	409	;# 
  1870     0199                     RCREG1          equ	409	;# 
  1871     019A                     TX1REG          equ	410	;# 
  1872     019A                     TXREG1          equ	410	;# 
  1873     019A                     TXREG           equ	410	;# 
  1874     019B                     SP1BRG          equ	411	;# 
  1875     019B                     SPBRG           equ	411	;# 
  1876     019B                     SP1BRGL         equ	411	;# 
  1877     019B                     SPBRG1          equ	411	;# 
  1878     019B                     SPBRGL          equ	411	;# 
  1879     019C                     SP1BRGH         equ	412	;# 
  1880     019C                     SPBRGH          equ	412	;# 
  1881     019C                     SPBRGH1         equ	412	;# 
  1882     019D                     RC1STA          equ	413	;# 
  1883     019D                     RCSTA1          equ	413	;# 
  1884     019D                     RCSTA           equ	413	;# 
  1885     019E                     TX1STA          equ	414	;# 
  1886     019E                     TXSTA1          equ	414	;# 
  1887     019E                     TXSTA           equ	414	;# 
  1888     019F                     BAUD1CON        equ	415	;# 
  1889     019F                     BAUDCON1        equ	415	;# 
  1890     019F                     BAUDCTL1        equ	415	;# 
  1891     019F                     BAUDCON         equ	415	;# 
  1892     019F                     BAUDCTL         equ	415	;# 
  1893     020C                     WPUA            equ	524	;# 
  1894     020E                     WPUC            equ	526	;# 
  1895     0211                     SSP1BUF         equ	529	;# 
  1896     0211                     SSPBUF          equ	529	;# 
  1897     0212                     SSP1ADD         equ	530	;# 
  1898     0212                     SSPADD          equ	530	;# 
  1899     0213                     SSP1MSK         equ	531	;# 
  1900     0213                     SSPMSK          equ	531	;# 
  1901     0214                     SSP1STAT        equ	532	;# 
  1902     0214                     SSPSTAT         equ	532	;# 
  1903     0215                     SSP1CON1        equ	533	;# 
  1904     0215                     SSPCON          equ	533	;# 
  1905     0215                     SSPCON1         equ	533	;# 
  1906     0215                     SSP1CON         equ	533	;# 
  1907     0216                     SSP1CON2        equ	534	;# 
  1908     0216                     SSPCON2         equ	534	;# 
  1909     0217                     SSP1CON3        equ	535	;# 
  1910     0217                     SSPCON3         equ	535	;# 
  1911     028C                     ODCONA          equ	652	;# 
  1912     028E                     ODCONC          equ	654	;# 
  1913     0291                     CCPR1           equ	657	;# 
  1914     0291                     CCPR1L          equ	657	;# 
  1915     0292                     CCPR1H          equ	658	;# 
  1916     0293                     CCP1CON         equ	659	;# 
  1917     0293                     ECCP1CON        equ	659	;# 
  1918     0298                     CCPR2           equ	664	;# 
  1919     0298                     CCPR2L          equ	664	;# 
  1920     0299                     CCPR2H          equ	665	;# 
  1921     029A                     CCP2CON         equ	666	;# 
  1922     029A                     ECCP2CON        equ	666	;# 
  1923     029E                     CCPTMRS         equ	670	;# 
  1924     030C                     SLRCONA         equ	780	;# 
  1925     030E                     SLRCONC         equ	782	;# 
  1926     038C                     INLVLA          equ	908	;# 
  1927     038E                     INLVLC          equ	910	;# 
  1928     0391                     IOCAP           equ	913	;# 
  1929     0392                     IOCAN           equ	914	;# 
  1930     0393                     IOCAF           equ	915	;# 
  1931     0397                     IOCCP           equ	919	;# 
  1932     0398                     IOCCN           equ	920	;# 
  1933     0399                     IOCCF           equ	921	;# 
  1934     0415                     TMR4            equ	1045	;# 
  1935     0416                     PR4             equ	1046	;# 
  1936     0417                     T4CON           equ	1047	;# 
  1937     041C                     TMR6            equ	1052	;# 
  1938     041D                     PR6             equ	1053	;# 
  1939     041E                     T6CON           equ	1054	;# 
  1940     0511                     OPA1CON         equ	1297	;# 
  1941     0515                     OPA2CON         equ	1301	;# 
  1942     0617                     PWM3DCL         equ	1559	;# 
  1943     0618                     PWM3DCH         equ	1560	;# 
  1944     0619                     PWM3CON         equ	1561	;# 
  1945     0619                     PWM3CON0        equ	1561	;# 
  1946     061A                     PWM4DCL         equ	1562	;# 
  1947     061B                     PWM4DCH         equ	1563	;# 
  1948     061C                     PWM4CON         equ	1564	;# 
  1949     061C                     PWM4CON0        equ	1564	;# 
  1950     0691                     COG1PHR         equ	1681	;# 
  1951     0692                     COG1PHF         equ	1682	;# 
  1952     0693                     COG1BLKR        equ	1683	;# 
  1953     0694                     COG1BLKF        equ	1684	;# 
  1954     0695                     COG1DBR         equ	1685	;# 
  1955     0696                     COG1DBF         equ	1686	;# 
  1956     0697                     COG1CON0        equ	1687	;# 
  1957     0698                     COG1CON1        equ	1688	;# 
  1958     0699                     COG1RIS         equ	1689	;# 
  1959     069A                     COG1RSIM        equ	1690	;# 
  1960     069B                     COG1FIS         equ	1691	;# 
  1961     069C                     COG1FSIM        equ	1692	;# 
  1962     069D                     COG1ASD0        equ	1693	;# 
  1963     069E                     COG1ASD1        equ	1694	;# 
  1964     069F                     COG1STR         equ	1695	;# 
  1965     0E0F                     PPSLOCK         equ	3599	;# 
  1966     0E10                     INTPPS          equ	3600	;# 
  1967     0E11                     T0CKIPPS        equ	3601	;# 
  1968     0E12                     T1CKIPPS        equ	3602	;# 
  1969     0E13                     T1GPPS          equ	3603	;# 
  1970     0E14                     CCP1PPS         equ	3604	;# 
  1971     0E15                     CCP2PPS         equ	3605	;# 
  1972     0E17                     COGINPPS        equ	3607	;# 
  1973     0E20                     SSPCLKPPS       equ	3616	;# 
  1974     0E21                     SSPDATPPS       equ	3617	;# 
  1975     0E22                     SSPSSPPS        equ	3618	;# 
  1976     0E24                     RXPPS           equ	3620	;# 
  1977     0E25                     CKPPS           equ	3621	;# 
  1978     0E28                     CLCIN0PPS       equ	3624	;# 
  1979     0E29                     CLCIN1PPS       equ	3625	;# 
  1980     0E2A                     CLCIN2PPS       equ	3626	;# 
  1981     0E2B                     CLCIN3PPS       equ	3627	;# 
  1982     0E90                     RA0PPS          equ	3728	;# 
  1983     0E91                     RA1PPS          equ	3729	;# 
  1984     0E92                     RA2PPS          equ	3730	;# 
  1985     0E94                     RA4PPS          equ	3732	;# 
  1986     0E95                     RA5PPS          equ	3733	;# 
  1987     0EA0                     RC0PPS          equ	3744	;# 
  1988     0EA1                     RC1PPS          equ	3745	;# 
  1989     0EA2                     RC2PPS          equ	3746	;# 
  1990     0EA3                     RC3PPS          equ	3747	;# 
  1991     0EA4                     RC4PPS          equ	3748	;# 
  1992     0EA5                     RC5PPS          equ	3749	;# 
  1993     0F0F                     CLCDATA         equ	3855	;# 
  1994     0F10                     CLC1CON         equ	3856	;# 
  1995     0F11                     CLC1POL         equ	3857	;# 
  1996     0F12                     CLC1SEL0        equ	3858	;# 
  1997     0F13                     CLC1SEL1        equ	3859	;# 
  1998     0F14                     CLC1SEL2        equ	3860	;# 
  1999     0F15                     CLC1SEL3        equ	3861	;# 
  2000     0F16                     CLC1GLS0        equ	3862	;# 
  2001     0F17                     CLC1GLS1        equ	3863	;# 
  2002     0F18                     CLC1GLS2        equ	3864	;# 
  2003     0F19                     CLC1GLS3        equ	3865	;# 
  2004     0F1A                     CLC2CON         equ	3866	;# 
  2005     0F1B                     CLC2POL         equ	3867	;# 
  2006     0F1C                     CLC2SEL0        equ	3868	;# 
  2007     0F1D                     CLC2SEL1        equ	3869	;# 
  2008     0F1E                     CLC2SEL2        equ	3870	;# 
  2009     0F1F                     CLC2SEL3        equ	3871	;# 
  2010     0F20                     CLC2GLS0        equ	3872	;# 
  2011     0F21                     CLC2GLS1        equ	3873	;# 
  2012     0F22                     CLC2GLS2        equ	3874	;# 
  2013     0F23                     CLC2GLS3        equ	3875	;# 
  2014     0F24                     CLC3CON         equ	3876	;# 
  2015     0F25                     CLC3POL         equ	3877	;# 
  2016     0F26                     CLC3SEL0        equ	3878	;# 
  2017     0F27                     CLC3SEL1        equ	3879	;# 
  2018     0F28                     CLC3SEL2        equ	3880	;# 
  2019     0F29                     CLC3SEL3        equ	3881	;# 
  2020     0F2A                     CLC3GLS0        equ	3882	;# 
  2021     0F2B                     CLC3GLS1        equ	3883	;# 
  2022     0F2C                     CLC3GLS2        equ	3884	;# 
  2023     0F2D                     CLC3GLS3        equ	3885	;# 
  2024     0F9E                     ICDBK0H         equ	3998	;# 
  2025     0FE4                     STATUS_SHAD     equ	4068	;# 
  2026     0FE5                     WREG_SHAD       equ	4069	;# 
  2027     0FE6                     BSR_SHAD        equ	4070	;# 
  2028     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2029     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2030     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2031     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2032     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2033     0FED                     STKPTR          equ	4077	;# 
  2034     0FEE                     TOSL            equ	4078	;# 
  2035     0FEF                     TOSH            equ	4079	;# 
  2036     0000                     INDF0           equ	0	;# 
  2037     0001                     INDF1           equ	1	;# 
  2038     0002                     PCL             equ	2	;# 
  2039     0003                     STATUS          equ	3	;# 
  2040     0004                     FSR0L           equ	4	;# 
  2041     0005                     FSR0H           equ	5	;# 
  2042     0006                     FSR1L           equ	6	;# 
  2043     0007                     FSR1H           equ	7	;# 
  2044     0008                     BSR             equ	8	;# 
  2045     0009                     WREG            equ	9	;# 
  2046     000A                     PCLATH          equ	10	;# 
  2047     000B                     INTCON          equ	11	;# 
  2048     000C                     PORTA           equ	12	;# 
  2049     000E                     PORTC           equ	14	;# 
  2050     0011                     PIR1            equ	17	;# 
  2051     0012                     PIR2            equ	18	;# 
  2052     0013                     PIR3            equ	19	;# 
  2053     0015                     TMR0            equ	21	;# 
  2054     0016                     TMR1            equ	22	;# 
  2055     0016                     TMR1L           equ	22	;# 
  2056     0017                     TMR1H           equ	23	;# 
  2057     0018                     T1CON           equ	24	;# 
  2058     0019                     T1GCON          equ	25	;# 
  2059     001A                     TMR2            equ	26	;# 
  2060     001B                     PR2             equ	27	;# 
  2061     001C                     T2CON           equ	28	;# 
  2062     008C                     TRISA           equ	140	;# 
  2063     008E                     TRISC           equ	142	;# 
  2064     0091                     PIE1            equ	145	;# 
  2065     0092                     PIE2            equ	146	;# 
  2066     0093                     PIE3            equ	147	;# 
  2067     0095                     OPTION_REG      equ	149	;# 
  2068     0096                     PCON            equ	150	;# 
  2069     0097                     WDTCON          equ	151	;# 
  2070     0098                     OSCTUNE         equ	152	;# 
  2071     0099                     OSCCON          equ	153	;# 
  2072     009A                     OSCSTAT         equ	154	;# 
  2073     009B                     ADRES           equ	155	;# 
  2074     009B                     ADRESL          equ	155	;# 
  2075     009C                     ADRESH          equ	156	;# 
  2076     009D                     ADCON0          equ	157	;# 
  2077     009E                     ADCON1          equ	158	;# 
  2078     009F                     ADCON2          equ	159	;# 
  2079     010C                     LATA            equ	268	;# 
  2080     010E                     LATC            equ	270	;# 
  2081     0111                     CM1CON0         equ	273	;# 
  2082     0112                     CM1CON1         equ	274	;# 
  2083     0113                     CM2CON0         equ	275	;# 
  2084     0114                     CM2CON1         equ	276	;# 
  2085     0115                     CMOUT           equ	277	;# 
  2086     0116                     BORCON          equ	278	;# 
  2087     0117                     FVRCON          equ	279	;# 
  2088     0118                     DAC1CON0        equ	280	;# 
  2089     0119                     DAC1CON1        equ	281	;# 
  2090     011C                     ZCD1CON         equ	284	;# 
  2091     018C                     ANSELA          equ	396	;# 
  2092     018E                     ANSELC          equ	398	;# 
  2093     0191                     PMADR           equ	401	;# 
  2094     0191                     PMADRL          equ	401	;# 
  2095     0192                     PMADRH          equ	402	;# 
  2096     0193                     PMDAT           equ	403	;# 
  2097     0193                     PMDATL          equ	403	;# 
  2098     0194                     PMDATH          equ	404	;# 
  2099     0195                     PMCON1          equ	405	;# 
  2100     0196                     PMCON2          equ	406	;# 
  2101     0197                     VREGCON         equ	407	;# 
  2102     0199                     RC1REG          equ	409	;# 
  2103     0199                     RCREG           equ	409	;# 
  2104     0199                     RCREG1          equ	409	;# 
  2105     019A                     TX1REG          equ	410	;# 
  2106     019A                     TXREG1          equ	410	;# 
  2107     019A                     TXREG           equ	410	;# 
  2108     019B                     SP1BRG          equ	411	;# 
  2109     019B                     SPBRG           equ	411	;# 
  2110     019B                     SP1BRGL         equ	411	;# 
  2111     019B                     SPBRG1          equ	411	;# 
  2112     019B                     SPBRGL          equ	411	;# 
  2113     019C                     SP1BRGH         equ	412	;# 
  2114     019C                     SPBRGH          equ	412	;# 
  2115     019C                     SPBRGH1         equ	412	;# 
  2116     019D                     RC1STA          equ	413	;# 
  2117     019D                     RCSTA1          equ	413	;# 
  2118     019D                     RCSTA           equ	413	;# 
  2119     019E                     TX1STA          equ	414	;# 
  2120     019E                     TXSTA1          equ	414	;# 
  2121     019E                     TXSTA           equ	414	;# 
  2122     019F                     BAUD1CON        equ	415	;# 
  2123     019F                     BAUDCON1        equ	415	;# 
  2124     019F                     BAUDCTL1        equ	415	;# 
  2125     019F                     BAUDCON         equ	415	;# 
  2126     019F                     BAUDCTL         equ	415	;# 
  2127     020C                     WPUA            equ	524	;# 
  2128     020E                     WPUC            equ	526	;# 
  2129     0211                     SSP1BUF         equ	529	;# 
  2130     0211                     SSPBUF          equ	529	;# 
  2131     0212                     SSP1ADD         equ	530	;# 
  2132     0212                     SSPADD          equ	530	;# 
  2133     0213                     SSP1MSK         equ	531	;# 
  2134     0213                     SSPMSK          equ	531	;# 
  2135     0214                     SSP1STAT        equ	532	;# 
  2136     0214                     SSPSTAT         equ	532	;# 
  2137     0215                     SSP1CON1        equ	533	;# 
  2138     0215                     SSPCON          equ	533	;# 
  2139     0215                     SSPCON1         equ	533	;# 
  2140     0215                     SSP1CON         equ	533	;# 
  2141     0216                     SSP1CON2        equ	534	;# 
  2142     0216                     SSPCON2         equ	534	;# 
  2143     0217                     SSP1CON3        equ	535	;# 
  2144     0217                     SSPCON3         equ	535	;# 
  2145     028C                     ODCONA          equ	652	;# 
  2146     028E                     ODCONC          equ	654	;# 
  2147     0291                     CCPR1           equ	657	;# 
  2148     0291                     CCPR1L          equ	657	;# 
  2149     0292                     CCPR1H          equ	658	;# 
  2150     0293                     CCP1CON         equ	659	;# 
  2151     0293                     ECCP1CON        equ	659	;# 
  2152     0298                     CCPR2           equ	664	;# 
  2153     0298                     CCPR2L          equ	664	;# 
  2154     0299                     CCPR2H          equ	665	;# 
  2155     029A                     CCP2CON         equ	666	;# 
  2156     029A                     ECCP2CON        equ	666	;# 
  2157     029E                     CCPTMRS         equ	670	;# 
  2158     030C                     SLRCONA         equ	780	;# 
  2159     030E                     SLRCONC         equ	782	;# 
  2160     038C                     INLVLA          equ	908	;# 
  2161     038E                     INLVLC          equ	910	;# 
  2162     0391                     IOCAP           equ	913	;# 
  2163     0392                     IOCAN           equ	914	;# 
  2164     0393                     IOCAF           equ	915	;# 
  2165     0397                     IOCCP           equ	919	;# 
  2166     0398                     IOCCN           equ	920	;# 
  2167     0399                     IOCCF           equ	921	;# 
  2168     0415                     TMR4            equ	1045	;# 
  2169     0416                     PR4             equ	1046	;# 
  2170     0417                     T4CON           equ	1047	;# 
  2171     041C                     TMR6            equ	1052	;# 
  2172     041D                     PR6             equ	1053	;# 
  2173     041E                     T6CON           equ	1054	;# 
  2174     0511                     OPA1CON         equ	1297	;# 
  2175     0515                     OPA2CON         equ	1301	;# 
  2176     0617                     PWM3DCL         equ	1559	;# 
  2177     0618                     PWM3DCH         equ	1560	;# 
  2178     0619                     PWM3CON         equ	1561	;# 
  2179     0619                     PWM3CON0        equ	1561	;# 
  2180     061A                     PWM4DCL         equ	1562	;# 
  2181     061B                     PWM4DCH         equ	1563	;# 
  2182     061C                     PWM4CON         equ	1564	;# 
  2183     061C                     PWM4CON0        equ	1564	;# 
  2184     0691                     COG1PHR         equ	1681	;# 
  2185     0692                     COG1PHF         equ	1682	;# 
  2186     0693                     COG1BLKR        equ	1683	;# 
  2187     0694                     COG1BLKF        equ	1684	;# 
  2188     0695                     COG1DBR         equ	1685	;# 
  2189     0696                     COG1DBF         equ	1686	;# 
  2190     0697                     COG1CON0        equ	1687	;# 
  2191     0698                     COG1CON1        equ	1688	;# 
  2192     0699                     COG1RIS         equ	1689	;# 
  2193     069A                     COG1RSIM        equ	1690	;# 
  2194     069B                     COG1FIS         equ	1691	;# 
  2195     069C                     COG1FSIM        equ	1692	;# 
  2196     069D                     COG1ASD0        equ	1693	;# 
  2197     069E                     COG1ASD1        equ	1694	;# 
  2198     069F                     COG1STR         equ	1695	;# 
  2199     0E0F                     PPSLOCK         equ	3599	;# 
  2200     0E10                     INTPPS          equ	3600	;# 
  2201     0E11                     T0CKIPPS        equ	3601	;# 
  2202     0E12                     T1CKIPPS        equ	3602	;# 
  2203     0E13                     T1GPPS          equ	3603	;# 
  2204     0E14                     CCP1PPS         equ	3604	;# 
  2205     0E15                     CCP2PPS         equ	3605	;# 
  2206     0E17                     COGINPPS        equ	3607	;# 
  2207     0E20                     SSPCLKPPS       equ	3616	;# 
  2208     0E21                     SSPDATPPS       equ	3617	;# 
  2209     0E22                     SSPSSPPS        equ	3618	;# 
  2210     0E24                     RXPPS           equ	3620	;# 
  2211     0E25                     CKPPS           equ	3621	;# 
  2212     0E28                     CLCIN0PPS       equ	3624	;# 
  2213     0E29                     CLCIN1PPS       equ	3625	;# 
  2214     0E2A                     CLCIN2PPS       equ	3626	;# 
  2215     0E2B                     CLCIN3PPS       equ	3627	;# 
  2216     0E90                     RA0PPS          equ	3728	;# 
  2217     0E91                     RA1PPS          equ	3729	;# 
  2218     0E92                     RA2PPS          equ	3730	;# 
  2219     0E94                     RA4PPS          equ	3732	;# 
  2220     0E95                     RA5PPS          equ	3733	;# 
  2221     0EA0                     RC0PPS          equ	3744	;# 
  2222     0EA1                     RC1PPS          equ	3745	;# 
  2223     0EA2                     RC2PPS          equ	3746	;# 
  2224     0EA3                     RC3PPS          equ	3747	;# 
  2225     0EA4                     RC4PPS          equ	3748	;# 
  2226     0EA5                     RC5PPS          equ	3749	;# 
  2227     0F0F                     CLCDATA         equ	3855	;# 
  2228     0F10                     CLC1CON         equ	3856	;# 
  2229     0F11                     CLC1POL         equ	3857	;# 
  2230     0F12                     CLC1SEL0        equ	3858	;# 
  2231     0F13                     CLC1SEL1        equ	3859	;# 
  2232     0F14                     CLC1SEL2        equ	3860	;# 
  2233     0F15                     CLC1SEL3        equ	3861	;# 
  2234     0F16                     CLC1GLS0        equ	3862	;# 
  2235     0F17                     CLC1GLS1        equ	3863	;# 
  2236     0F18                     CLC1GLS2        equ	3864	;# 
  2237     0F19                     CLC1GLS3        equ	3865	;# 
  2238     0F1A                     CLC2CON         equ	3866	;# 
  2239     0F1B                     CLC2POL         equ	3867	;# 
  2240     0F1C                     CLC2SEL0        equ	3868	;# 
  2241     0F1D                     CLC2SEL1        equ	3869	;# 
  2242     0F1E                     CLC2SEL2        equ	3870	;# 
  2243     0F1F                     CLC2SEL3        equ	3871	;# 
  2244     0F20                     CLC2GLS0        equ	3872	;# 
  2245     0F21                     CLC2GLS1        equ	3873	;# 
  2246     0F22                     CLC2GLS2        equ	3874	;# 
  2247     0F23                     CLC2GLS3        equ	3875	;# 
  2248     0F24                     CLC3CON         equ	3876	;# 
  2249     0F25                     CLC3POL         equ	3877	;# 
  2250     0F26                     CLC3SEL0        equ	3878	;# 
  2251     0F27                     CLC3SEL1        equ	3879	;# 
  2252     0F28                     CLC3SEL2        equ	3880	;# 
  2253     0F29                     CLC3SEL3        equ	3881	;# 
  2254     0F2A                     CLC3GLS0        equ	3882	;# 
  2255     0F2B                     CLC3GLS1        equ	3883	;# 
  2256     0F2C                     CLC3GLS2        equ	3884	;# 
  2257     0F2D                     CLC3GLS3        equ	3885	;# 
  2258     0F9E                     ICDBK0H         equ	3998	;# 
  2259     0FE4                     STATUS_SHAD     equ	4068	;# 
  2260     0FE5                     WREG_SHAD       equ	4069	;# 
  2261     0FE6                     BSR_SHAD        equ	4070	;# 
  2262     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2263     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2264     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2265     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2266     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2267     0FED                     STKPTR          equ	4077	;# 
  2268     0FEE                     TOSL            equ	4078	;# 
  2269     0FEF                     TOSH            equ	4079	;# 
  2270     0000                     INDF0           equ	0	;# 
  2271     0001                     INDF1           equ	1	;# 
  2272     0002                     PCL             equ	2	;# 
  2273     0003                     STATUS          equ	3	;# 
  2274     0004                     FSR0L           equ	4	;# 
  2275     0005                     FSR0H           equ	5	;# 
  2276     0006                     FSR1L           equ	6	;# 
  2277     0007                     FSR1H           equ	7	;# 
  2278     0008                     BSR             equ	8	;# 
  2279     0009                     WREG            equ	9	;# 
  2280     000A                     PCLATH          equ	10	;# 
  2281     000B                     INTCON          equ	11	;# 
  2282     000C                     PORTA           equ	12	;# 
  2283     000E                     PORTC           equ	14	;# 
  2284     0011                     PIR1            equ	17	;# 
  2285     0012                     PIR2            equ	18	;# 
  2286     0013                     PIR3            equ	19	;# 
  2287     0015                     TMR0            equ	21	;# 
  2288     0016                     TMR1            equ	22	;# 
  2289     0016                     TMR1L           equ	22	;# 
  2290     0017                     TMR1H           equ	23	;# 
  2291     0018                     T1CON           equ	24	;# 
  2292     0019                     T1GCON          equ	25	;# 
  2293     001A                     TMR2            equ	26	;# 
  2294     001B                     PR2             equ	27	;# 
  2295     001C                     T2CON           equ	28	;# 
  2296     008C                     TRISA           equ	140	;# 
  2297     008E                     TRISC           equ	142	;# 
  2298     0091                     PIE1            equ	145	;# 
  2299     0092                     PIE2            equ	146	;# 
  2300     0093                     PIE3            equ	147	;# 
  2301     0095                     OPTION_REG      equ	149	;# 
  2302     0096                     PCON            equ	150	;# 
  2303     0097                     WDTCON          equ	151	;# 
  2304     0098                     OSCTUNE         equ	152	;# 
  2305     0099                     OSCCON          equ	153	;# 
  2306     009A                     OSCSTAT         equ	154	;# 
  2307     009B                     ADRES           equ	155	;# 
  2308     009B                     ADRESL          equ	155	;# 
  2309     009C                     ADRESH          equ	156	;# 
  2310     009D                     ADCON0          equ	157	;# 
  2311     009E                     ADCON1          equ	158	;# 
  2312     009F                     ADCON2          equ	159	;# 
  2313     010C                     LATA            equ	268	;# 
  2314     010E                     LATC            equ	270	;# 
  2315     0111                     CM1CON0         equ	273	;# 
  2316     0112                     CM1CON1         equ	274	;# 
  2317     0113                     CM2CON0         equ	275	;# 
  2318     0114                     CM2CON1         equ	276	;# 
  2319     0115                     CMOUT           equ	277	;# 
  2320     0116                     BORCON          equ	278	;# 
  2321     0117                     FVRCON          equ	279	;# 
  2322     0118                     DAC1CON0        equ	280	;# 
  2323     0119                     DAC1CON1        equ	281	;# 
  2324     011C                     ZCD1CON         equ	284	;# 
  2325     018C                     ANSELA          equ	396	;# 
  2326     018E                     ANSELC          equ	398	;# 
  2327     0191                     PMADR           equ	401	;# 
  2328     0191                     PMADRL          equ	401	;# 
  2329     0192                     PMADRH          equ	402	;# 
  2330     0193                     PMDAT           equ	403	;# 
  2331     0193                     PMDATL          equ	403	;# 
  2332     0194                     PMDATH          equ	404	;# 
  2333     0195                     PMCON1          equ	405	;# 
  2334     0196                     PMCON2          equ	406	;# 
  2335     0197                     VREGCON         equ	407	;# 
  2336     0199                     RC1REG          equ	409	;# 
  2337     0199                     RCREG           equ	409	;# 
  2338     0199                     RCREG1          equ	409	;# 
  2339     019A                     TX1REG          equ	410	;# 
  2340     019A                     TXREG1          equ	410	;# 
  2341     019A                     TXREG           equ	410	;# 
  2342     019B                     SP1BRG          equ	411	;# 
  2343     019B                     SPBRG           equ	411	;# 
  2344     019B                     SP1BRGL         equ	411	;# 
  2345     019B                     SPBRG1          equ	411	;# 
  2346     019B                     SPBRGL          equ	411	;# 
  2347     019C                     SP1BRGH         equ	412	;# 
  2348     019C                     SPBRGH          equ	412	;# 
  2349     019C                     SPBRGH1         equ	412	;# 
  2350     019D                     RC1STA          equ	413	;# 
  2351     019D                     RCSTA1          equ	413	;# 
  2352     019D                     RCSTA           equ	413	;# 
  2353     019E                     TX1STA          equ	414	;# 
  2354     019E                     TXSTA1          equ	414	;# 
  2355     019E                     TXSTA           equ	414	;# 
  2356     019F                     BAUD1CON        equ	415	;# 
  2357     019F                     BAUDCON1        equ	415	;# 
  2358     019F                     BAUDCTL1        equ	415	;# 
  2359     019F                     BAUDCON         equ	415	;# 
  2360     019F                     BAUDCTL         equ	415	;# 
  2361     020C                     WPUA            equ	524	;# 
  2362     020E                     WPUC            equ	526	;# 
  2363     0211                     SSP1BUF         equ	529	;# 
  2364     0211                     SSPBUF          equ	529	;# 
  2365     0212                     SSP1ADD         equ	530	;# 
  2366     0212                     SSPADD          equ	530	;# 
  2367     0213                     SSP1MSK         equ	531	;# 
  2368     0213                     SSPMSK          equ	531	;# 
  2369     0214                     SSP1STAT        equ	532	;# 
  2370     0214                     SSPSTAT         equ	532	;# 
  2371     0215                     SSP1CON1        equ	533	;# 
  2372     0215                     SSPCON          equ	533	;# 
  2373     0215                     SSPCON1         equ	533	;# 
  2374     0215                     SSP1CON         equ	533	;# 
  2375     0216                     SSP1CON2        equ	534	;# 
  2376     0216                     SSPCON2         equ	534	;# 
  2377     0217                     SSP1CON3        equ	535	;# 
  2378     0217                     SSPCON3         equ	535	;# 
  2379     028C                     ODCONA          equ	652	;# 
  2380     028E                     ODCONC          equ	654	;# 
  2381     0291                     CCPR1           equ	657	;# 
  2382     0291                     CCPR1L          equ	657	;# 
  2383     0292                     CCPR1H          equ	658	;# 
  2384     0293                     CCP1CON         equ	659	;# 
  2385     0293                     ECCP1CON        equ	659	;# 
  2386     0298                     CCPR2           equ	664	;# 
  2387     0298                     CCPR2L          equ	664	;# 
  2388     0299                     CCPR2H          equ	665	;# 
  2389     029A                     CCP2CON         equ	666	;# 
  2390     029A                     ECCP2CON        equ	666	;# 
  2391     029E                     CCPTMRS         equ	670	;# 
  2392     030C                     SLRCONA         equ	780	;# 
  2393     030E                     SLRCONC         equ	782	;# 
  2394     038C                     INLVLA          equ	908	;# 
  2395     038E                     INLVLC          equ	910	;# 
  2396     0391                     IOCAP           equ	913	;# 
  2397     0392                     IOCAN           equ	914	;# 
  2398     0393                     IOCAF           equ	915	;# 
  2399     0397                     IOCCP           equ	919	;# 
  2400     0398                     IOCCN           equ	920	;# 
  2401     0399                     IOCCF           equ	921	;# 
  2402     0415                     TMR4            equ	1045	;# 
  2403     0416                     PR4             equ	1046	;# 
  2404     0417                     T4CON           equ	1047	;# 
  2405     041C                     TMR6            equ	1052	;# 
  2406     041D                     PR6             equ	1053	;# 
  2407     041E                     T6CON           equ	1054	;# 
  2408     0511                     OPA1CON         equ	1297	;# 
  2409     0515                     OPA2CON         equ	1301	;# 
  2410     0617                     PWM3DCL         equ	1559	;# 
  2411     0618                     PWM3DCH         equ	1560	;# 
  2412     0619                     PWM3CON         equ	1561	;# 
  2413     0619                     PWM3CON0        equ	1561	;# 
  2414     061A                     PWM4DCL         equ	1562	;# 
  2415     061B                     PWM4DCH         equ	1563	;# 
  2416     061C                     PWM4CON         equ	1564	;# 
  2417     061C                     PWM4CON0        equ	1564	;# 
  2418     0691                     COG1PHR         equ	1681	;# 
  2419     0692                     COG1PHF         equ	1682	;# 
  2420     0693                     COG1BLKR        equ	1683	;# 
  2421     0694                     COG1BLKF        equ	1684	;# 
  2422     0695                     COG1DBR         equ	1685	;# 
  2423     0696                     COG1DBF         equ	1686	;# 
  2424     0697                     COG1CON0        equ	1687	;# 
  2425     0698                     COG1CON1        equ	1688	;# 
  2426     0699                     COG1RIS         equ	1689	;# 
  2427     069A                     COG1RSIM        equ	1690	;# 
  2428     069B                     COG1FIS         equ	1691	;# 
  2429     069C                     COG1FSIM        equ	1692	;# 
  2430     069D                     COG1ASD0        equ	1693	;# 
  2431     069E                     COG1ASD1        equ	1694	;# 
  2432     069F                     COG1STR         equ	1695	;# 
  2433     0E0F                     PPSLOCK         equ	3599	;# 
  2434     0E10                     INTPPS          equ	3600	;# 
  2435     0E11                     T0CKIPPS        equ	3601	;# 
  2436     0E12                     T1CKIPPS        equ	3602	;# 
  2437     0E13                     T1GPPS          equ	3603	;# 
  2438     0E14                     CCP1PPS         equ	3604	;# 
  2439     0E15                     CCP2PPS         equ	3605	;# 
  2440     0E17                     COGINPPS        equ	3607	;# 
  2441     0E20                     SSPCLKPPS       equ	3616	;# 
  2442     0E21                     SSPDATPPS       equ	3617	;# 
  2443     0E22                     SSPSSPPS        equ	3618	;# 
  2444     0E24                     RXPPS           equ	3620	;# 
  2445     0E25                     CKPPS           equ	3621	;# 
  2446     0E28                     CLCIN0PPS       equ	3624	;# 
  2447     0E29                     CLCIN1PPS       equ	3625	;# 
  2448     0E2A                     CLCIN2PPS       equ	3626	;# 
  2449     0E2B                     CLCIN3PPS       equ	3627	;# 
  2450     0E90                     RA0PPS          equ	3728	;# 
  2451     0E91                     RA1PPS          equ	3729	;# 
  2452     0E92                     RA2PPS          equ	3730	;# 
  2453     0E94                     RA4PPS          equ	3732	;# 
  2454     0E95                     RA5PPS          equ	3733	;# 
  2455     0EA0                     RC0PPS          equ	3744	;# 
  2456     0EA1                     RC1PPS          equ	3745	;# 
  2457     0EA2                     RC2PPS          equ	3746	;# 
  2458     0EA3                     RC3PPS          equ	3747	;# 
  2459     0EA4                     RC4PPS          equ	3748	;# 
  2460     0EA5                     RC5PPS          equ	3749	;# 
  2461     0F0F                     CLCDATA         equ	3855	;# 
  2462     0F10                     CLC1CON         equ	3856	;# 
  2463     0F11                     CLC1POL         equ	3857	;# 
  2464     0F12                     CLC1SEL0        equ	3858	;# 
  2465     0F13                     CLC1SEL1        equ	3859	;# 
  2466     0F14                     CLC1SEL2        equ	3860	;# 
  2467     0F15                     CLC1SEL3        equ	3861	;# 
  2468     0F16                     CLC1GLS0        equ	3862	;# 
  2469     0F17                     CLC1GLS1        equ	3863	;# 
  2470     0F18                     CLC1GLS2        equ	3864	;# 
  2471     0F19                     CLC1GLS3        equ	3865	;# 
  2472     0F1A                     CLC2CON         equ	3866	;# 
  2473     0F1B                     CLC2POL         equ	3867	;# 
  2474     0F1C                     CLC2SEL0        equ	3868	;# 
  2475     0F1D                     CLC2SEL1        equ	3869	;# 
  2476     0F1E                     CLC2SEL2        equ	3870	;# 
  2477     0F1F                     CLC2SEL3        equ	3871	;# 
  2478     0F20                     CLC2GLS0        equ	3872	;# 
  2479     0F21                     CLC2GLS1        equ	3873	;# 
  2480     0F22                     CLC2GLS2        equ	3874	;# 
  2481     0F23                     CLC2GLS3        equ	3875	;# 
  2482     0F24                     CLC3CON         equ	3876	;# 
  2483     0F25                     CLC3POL         equ	3877	;# 
  2484     0F26                     CLC3SEL0        equ	3878	;# 
  2485     0F27                     CLC3SEL1        equ	3879	;# 
  2486     0F28                     CLC3SEL2        equ	3880	;# 
  2487     0F29                     CLC3SEL3        equ	3881	;# 
  2488     0F2A                     CLC3GLS0        equ	3882	;# 
  2489     0F2B                     CLC3GLS1        equ	3883	;# 
  2490     0F2C                     CLC3GLS2        equ	3884	;# 
  2491     0F2D                     CLC3GLS3        equ	3885	;# 
  2492     0F9E                     ICDBK0H         equ	3998	;# 
  2493     0FE4                     STATUS_SHAD     equ	4068	;# 
  2494     0FE5                     WREG_SHAD       equ	4069	;# 
  2495     0FE6                     BSR_SHAD        equ	4070	;# 
  2496     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2497     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2498     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2499     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2500     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2501     0FED                     STKPTR          equ	4077	;# 
  2502     0FEE                     TOSL            equ	4078	;# 
  2503     0FEF                     TOSH            equ	4079	;# 
  2504     0000                     INDF0           equ	0	;# 
  2505     0001                     INDF1           equ	1	;# 
  2506     0002                     PCL             equ	2	;# 
  2507     0003                     STATUS          equ	3	;# 
  2508     0004                     FSR0L           equ	4	;# 
  2509     0005                     FSR0H           equ	5	;# 
  2510     0006                     FSR1L           equ	6	;# 
  2511     0007                     FSR1H           equ	7	;# 
  2512     0008                     BSR             equ	8	;# 
  2513     0009                     WREG            equ	9	;# 
  2514     000A                     PCLATH          equ	10	;# 
  2515     000B                     INTCON          equ	11	;# 
  2516     000C                     PORTA           equ	12	;# 
  2517     000E                     PORTC           equ	14	;# 
  2518     0011                     PIR1            equ	17	;# 
  2519     0012                     PIR2            equ	18	;# 
  2520     0013                     PIR3            equ	19	;# 
  2521     0015                     TMR0            equ	21	;# 
  2522     0016                     TMR1            equ	22	;# 
  2523     0016                     TMR1L           equ	22	;# 
  2524     0017                     TMR1H           equ	23	;# 
  2525     0018                     T1CON           equ	24	;# 
  2526     0019                     T1GCON          equ	25	;# 
  2527     001A                     TMR2            equ	26	;# 
  2528     001B                     PR2             equ	27	;# 
  2529     001C                     T2CON           equ	28	;# 
  2530     008C                     TRISA           equ	140	;# 
  2531     008E                     TRISC           equ	142	;# 
  2532     0091                     PIE1            equ	145	;# 
  2533     0092                     PIE2            equ	146	;# 
  2534     0093                     PIE3            equ	147	;# 
  2535     0095                     OPTION_REG      equ	149	;# 
  2536     0096                     PCON            equ	150	;# 
  2537     0097                     WDTCON          equ	151	;# 
  2538     0098                     OSCTUNE         equ	152	;# 
  2539     0099                     OSCCON          equ	153	;# 
  2540     009A                     OSCSTAT         equ	154	;# 
  2541     009B                     ADRES           equ	155	;# 
  2542     009B                     ADRESL          equ	155	;# 
  2543     009C                     ADRESH          equ	156	;# 
  2544     009D                     ADCON0          equ	157	;# 
  2545     009E                     ADCON1          equ	158	;# 
  2546     009F                     ADCON2          equ	159	;# 
  2547     010C                     LATA            equ	268	;# 
  2548     010E                     LATC            equ	270	;# 
  2549     0111                     CM1CON0         equ	273	;# 
  2550     0112                     CM1CON1         equ	274	;# 
  2551     0113                     CM2CON0         equ	275	;# 
  2552     0114                     CM2CON1         equ	276	;# 
  2553     0115                     CMOUT           equ	277	;# 
  2554     0116                     BORCON          equ	278	;# 
  2555     0117                     FVRCON          equ	279	;# 
  2556     0118                     DAC1CON0        equ	280	;# 
  2557     0119                     DAC1CON1        equ	281	;# 
  2558     011C                     ZCD1CON         equ	284	;# 
  2559     018C                     ANSELA          equ	396	;# 
  2560     018E                     ANSELC          equ	398	;# 
  2561     0191                     PMADR           equ	401	;# 
  2562     0191                     PMADRL          equ	401	;# 
  2563     0192                     PMADRH          equ	402	;# 
  2564     0193                     PMDAT           equ	403	;# 
  2565     0193                     PMDATL          equ	403	;# 
  2566     0194                     PMDATH          equ	404	;# 
  2567     0195                     PMCON1          equ	405	;# 
  2568     0196                     PMCON2          equ	406	;# 
  2569     0197                     VREGCON         equ	407	;# 
  2570     0199                     RC1REG          equ	409	;# 
  2571     0199                     RCREG           equ	409	;# 
  2572     0199                     RCREG1          equ	409	;# 
  2573     019A                     TX1REG          equ	410	;# 
  2574     019A                     TXREG1          equ	410	;# 
  2575     019A                     TXREG           equ	410	;# 
  2576     019B                     SP1BRG          equ	411	;# 
  2577     019B                     SPBRG           equ	411	;# 
  2578     019B                     SP1BRGL         equ	411	;# 
  2579     019B                     SPBRG1          equ	411	;# 
  2580     019B                     SPBRGL          equ	411	;# 
  2581     019C                     SP1BRGH         equ	412	;# 
  2582     019C                     SPBRGH          equ	412	;# 
  2583     019C                     SPBRGH1         equ	412	;# 
  2584     019D                     RC1STA          equ	413	;# 
  2585     019D                     RCSTA1          equ	413	;# 
  2586     019D                     RCSTA           equ	413	;# 
  2587     019E                     TX1STA          equ	414	;# 
  2588     019E                     TXSTA1          equ	414	;# 
  2589     019E                     TXSTA           equ	414	;# 
  2590     019F                     BAUD1CON        equ	415	;# 
  2591     019F                     BAUDCON1        equ	415	;# 
  2592     019F                     BAUDCTL1        equ	415	;# 
  2593     019F                     BAUDCON         equ	415	;# 
  2594     019F                     BAUDCTL         equ	415	;# 
  2595     020C                     WPUA            equ	524	;# 
  2596     020E                     WPUC            equ	526	;# 
  2597     0211                     SSP1BUF         equ	529	;# 
  2598     0211                     SSPBUF          equ	529	;# 
  2599     0212                     SSP1ADD         equ	530	;# 
  2600     0212                     SSPADD          equ	530	;# 
  2601     0213                     SSP1MSK         equ	531	;# 
  2602     0213                     SSPMSK          equ	531	;# 
  2603     0214                     SSP1STAT        equ	532	;# 
  2604     0214                     SSPSTAT         equ	532	;# 
  2605     0215                     SSP1CON1        equ	533	;# 
  2606     0215                     SSPCON          equ	533	;# 
  2607     0215                     SSPCON1         equ	533	;# 
  2608     0215                     SSP1CON         equ	533	;# 
  2609     0216                     SSP1CON2        equ	534	;# 
  2610     0216                     SSPCON2         equ	534	;# 
  2611     0217                     SSP1CON3        equ	535	;# 
  2612     0217                     SSPCON3         equ	535	;# 
  2613     028C                     ODCONA          equ	652	;# 
  2614     028E                     ODCONC          equ	654	;# 
  2615     0291                     CCPR1           equ	657	;# 
  2616     0291                     CCPR1L          equ	657	;# 
  2617     0292                     CCPR1H          equ	658	;# 
  2618     0293                     CCP1CON         equ	659	;# 
  2619     0293                     ECCP1CON        equ	659	;# 
  2620     0298                     CCPR2           equ	664	;# 
  2621     0298                     CCPR2L          equ	664	;# 
  2622     0299                     CCPR2H          equ	665	;# 
  2623     029A                     CCP2CON         equ	666	;# 
  2624     029A                     ECCP2CON        equ	666	;# 
  2625     029E                     CCPTMRS         equ	670	;# 
  2626     030C                     SLRCONA         equ	780	;# 
  2627     030E                     SLRCONC         equ	782	;# 
  2628     038C                     INLVLA          equ	908	;# 
  2629     038E                     INLVLC          equ	910	;# 
  2630     0391                     IOCAP           equ	913	;# 
  2631     0392                     IOCAN           equ	914	;# 
  2632     0393                     IOCAF           equ	915	;# 
  2633     0397                     IOCCP           equ	919	;# 
  2634     0398                     IOCCN           equ	920	;# 
  2635     0399                     IOCCF           equ	921	;# 
  2636     0415                     TMR4            equ	1045	;# 
  2637     0416                     PR4             equ	1046	;# 
  2638     0417                     T4CON           equ	1047	;# 
  2639     041C                     TMR6            equ	1052	;# 
  2640     041D                     PR6             equ	1053	;# 
  2641     041E                     T6CON           equ	1054	;# 
  2642     0511                     OPA1CON         equ	1297	;# 
  2643     0515                     OPA2CON         equ	1301	;# 
  2644     0617                     PWM3DCL         equ	1559	;# 
  2645     0618                     PWM3DCH         equ	1560	;# 
  2646     0619                     PWM3CON         equ	1561	;# 
  2647     0619                     PWM3CON0        equ	1561	;# 
  2648     061A                     PWM4DCL         equ	1562	;# 
  2649     061B                     PWM4DCH         equ	1563	;# 
  2650     061C                     PWM4CON         equ	1564	;# 
  2651     061C                     PWM4CON0        equ	1564	;# 
  2652     0691                     COG1PHR         equ	1681	;# 
  2653     0692                     COG1PHF         equ	1682	;# 
  2654     0693                     COG1BLKR        equ	1683	;# 
  2655     0694                     COG1BLKF        equ	1684	;# 
  2656     0695                     COG1DBR         equ	1685	;# 
  2657     0696                     COG1DBF         equ	1686	;# 
  2658     0697                     COG1CON0        equ	1687	;# 
  2659     0698                     COG1CON1        equ	1688	;# 
  2660     0699                     COG1RIS         equ	1689	;# 
  2661     069A                     COG1RSIM        equ	1690	;# 
  2662     069B                     COG1FIS         equ	1691	;# 
  2663     069C                     COG1FSIM        equ	1692	;# 
  2664     069D                     COG1ASD0        equ	1693	;# 
  2665     069E                     COG1ASD1        equ	1694	;# 
  2666     069F                     COG1STR         equ	1695	;# 
  2667     0E0F                     PPSLOCK         equ	3599	;# 
  2668     0E10                     INTPPS          equ	3600	;# 
  2669     0E11                     T0CKIPPS        equ	3601	;# 
  2670     0E12                     T1CKIPPS        equ	3602	;# 
  2671     0E13                     T1GPPS          equ	3603	;# 
  2672     0E14                     CCP1PPS         equ	3604	;# 
  2673     0E15                     CCP2PPS         equ	3605	;# 
  2674     0E17                     COGINPPS        equ	3607	;# 
  2675     0E20                     SSPCLKPPS       equ	3616	;# 
  2676     0E21                     SSPDATPPS       equ	3617	;# 
  2677     0E22                     SSPSSPPS        equ	3618	;# 
  2678     0E24                     RXPPS           equ	3620	;# 
  2679     0E25                     CKPPS           equ	3621	;# 
  2680     0E28                     CLCIN0PPS       equ	3624	;# 
  2681     0E29                     CLCIN1PPS       equ	3625	;# 
  2682     0E2A                     CLCIN2PPS       equ	3626	;# 
  2683     0E2B                     CLCIN3PPS       equ	3627	;# 
  2684     0E90                     RA0PPS          equ	3728	;# 
  2685     0E91                     RA1PPS          equ	3729	;# 
  2686     0E92                     RA2PPS          equ	3730	;# 
  2687     0E94                     RA4PPS          equ	3732	;# 
  2688     0E95                     RA5PPS          equ	3733	;# 
  2689     0EA0                     RC0PPS          equ	3744	;# 
  2690     0EA1                     RC1PPS          equ	3745	;# 
  2691     0EA2                     RC2PPS          equ	3746	;# 
  2692     0EA3                     RC3PPS          equ	3747	;# 
  2693     0EA4                     RC4PPS          equ	3748	;# 
  2694     0EA5                     RC5PPS          equ	3749	;# 
  2695     0F0F                     CLCDATA         equ	3855	;# 
  2696     0F10                     CLC1CON         equ	3856	;# 
  2697     0F11                     CLC1POL         equ	3857	;# 
  2698     0F12                     CLC1SEL0        equ	3858	;# 
  2699     0F13                     CLC1SEL1        equ	3859	;# 
  2700     0F14                     CLC1SEL2        equ	3860	;# 
  2701     0F15                     CLC1SEL3        equ	3861	;# 
  2702     0F16                     CLC1GLS0        equ	3862	;# 
  2703     0F17                     CLC1GLS1        equ	3863	;# 
  2704     0F18                     CLC1GLS2        equ	3864	;# 
  2705     0F19                     CLC1GLS3        equ	3865	;# 
  2706     0F1A                     CLC2CON         equ	3866	;# 
  2707     0F1B                     CLC2POL         equ	3867	;# 
  2708     0F1C                     CLC2SEL0        equ	3868	;# 
  2709     0F1D                     CLC2SEL1        equ	3869	;# 
  2710     0F1E                     CLC2SEL2        equ	3870	;# 
  2711     0F1F                     CLC2SEL3        equ	3871	;# 
  2712     0F20                     CLC2GLS0        equ	3872	;# 
  2713     0F21                     CLC2GLS1        equ	3873	;# 
  2714     0F22                     CLC2GLS2        equ	3874	;# 
  2715     0F23                     CLC2GLS3        equ	3875	;# 
  2716     0F24                     CLC3CON         equ	3876	;# 
  2717     0F25                     CLC3POL         equ	3877	;# 
  2718     0F26                     CLC3SEL0        equ	3878	;# 
  2719     0F27                     CLC3SEL1        equ	3879	;# 
  2720     0F28                     CLC3SEL2        equ	3880	;# 
  2721     0F29                     CLC3SEL3        equ	3881	;# 
  2722     0F2A                     CLC3GLS0        equ	3882	;# 
  2723     0F2B                     CLC3GLS1        equ	3883	;# 
  2724     0F2C                     CLC3GLS2        equ	3884	;# 
  2725     0F2D                     CLC3GLS3        equ	3885	;# 
  2726     0F9E                     ICDBK0H         equ	3998	;# 
  2727     0FE4                     STATUS_SHAD     equ	4068	;# 
  2728     0FE5                     WREG_SHAD       equ	4069	;# 
  2729     0FE6                     BSR_SHAD        equ	4070	;# 
  2730     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2731     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2732     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2733     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2734     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2735     0FED                     STKPTR          equ	4077	;# 
  2736     0FEE                     TOSL            equ	4078	;# 
  2737     0FEF                     TOSH            equ	4079	;# 
  2738                           
  2739 ;; Function _I2C1_Deinitialize is unused but had its address taken
  2740     0000                     _I2C1_Deinitialize equ	0
  2741                           
  2742 ;; Function _I2C1_Write is unused but had its address taken
  2743     0000                     _I2C1_Write     equ	0
  2744                           
  2745 ;; Function _I2C1_Read is unused but had its address taken
  2746     0000                     _I2C1_Read      equ	0
  2747                           
  2748 ;; Function _I2C1_WriteRead is unused but had its address taken
  2749     0000                     _I2C1_WriteRead equ	0
  2750                           
  2751 ;; Function _I2C1_ErrorGet is unused but had its address taken
  2752     0000                     _I2C1_ErrorGet  equ	0
  2753                           
  2754 ;; Function _I2C1_IsBusy is unused but had its address taken
  2755     0000                     _I2C1_IsBusy    equ	0
  2756                           
  2757 ;; Function _I2C1_CallbackRegister is unused but had its address taken
  2758     0000                     _I2C1_CallbackRegister equ	0
  2759                           
  2760 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  2761     0000                     _INT_DefaultInterruptHandler equ	0
  2762                           
  2763 ;; Function _INT_IMU_DefaultInterruptHandler is unused but had its address taken
  2764     0000                     _INT_IMU_DefaultInterruptHandler equ	0
  2765                           
  2766 ;; Function _TMR2_DefaultPeriodMatchCallback is unused but had its address taken
  2767     0000                     _TMR2_DefaultPeriodMatchCallback equ	0
  2768                           
  2769 ;; Function _EUSART_Deinitialize is unused but had its address taken
  2770     0000                     _EUSART_Deinitialize equ	0
  2771                           
  2772 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  2773     0000                     _EUSART_TransmitDisable equ	0
  2774                           
  2775 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  2776     0000                     _EUSART_AutoBaudSet equ	0
  2777                           
  2778 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  2779     0000                     _EUSART_AutoBaudQuery equ	0
  2780                           
  2781 ;; Function _EUSART_IsRxReady is unused but had its address taken
  2782     0000                     _EUSART_IsRxReady equ	0
  2783                           
  2784 ;; Function _EUSART_IsTxDone is unused but had its address taken
  2785     0000                     _EUSART_IsTxDone equ	0
  2786                           
  2787 ;; Function _EUSART_ErrorGet is unused but had its address taken
  2788     0000                     _EUSART_ErrorGet equ	0
  2789                           
  2790 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  2791     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  2792                           
  2793                           	psect	idataBANK2
  2794     07F8                     __pidataBANK2:
  2795                           
  2796                           ;initializer for _ESC_Setting
  2797     07F8  3401               	retlw	1
  2798     07F9  3402               	retlw	2
  2799     07FA  3401               	retlw	1
  2800     07FB  3401               	retlw	1
  2801     07FC  3402               	retlw	2
  2802     07FD  3401               	retlw	1
  2803     07FE  3401               	retlw	1
  2804     07FF  3401               	retlw	1
  2805                           
  2806                           	psect	stringtext1
  2807     0772                     __pstringtext1:
  2808     0772                     _UART1:
  2809     0772  34DA               	retlw	low _EUSART_Initialize
  2810     0773  3406               	retlw	high _EUSART_Initialize
  2811     0774  3400               	retlw	0
  2812     0775  3400               	retlw	0
  2813     0776  3423               	retlw	low _EUSART_Read
  2814     0777  340F               	retlw	high _EUSART_Read
  2815     0778  34B6               	retlw	low _EUSART_Write
  2816     0779  340F               	retlw	high _EUSART_Write
  2817     077A  3400               	retlw	0
  2818     077B  3400               	retlw	0
  2819     077C  34F3               	retlw	low _EUSART_IsTxReady
  2820     077D  340D               	retlw	high _EUSART_IsTxReady
  2821     077E  3400               	retlw	0
  2822     077F  3400               	retlw	0
  2823     0780  3472               	retlw	low _EUSART_TransmitEnable
  2824     0781  340D               	retlw	high _EUSART_TransmitEnable
  2825     0782  3400               	retlw	0
  2826     0783  3400               	retlw	0
  2827     0784  3400               	retlw	0
  2828     0785  3400               	retlw	0
  2829     0786  3400               	retlw	0
  2830     0787  3400               	retlw	0
  2831     0788  3400               	retlw	0
  2832     0789  3400               	retlw	0
  2833     078A  3400               	retlw	0
  2834     078B  3400               	retlw	0
  2835     078C  3400               	retlw	0
  2836     078D  3400               	retlw	0
  2837     078E  3400               	retlw	0
  2838     078F  3400               	retlw	0
  2839     0790  3400               	retlw	0
  2840     0791  3400               	retlw	0
  2841     0792  3400               	retlw	0
  2842     0793  3400               	retlw	0
  2843     0794  3400               	retlw	0
  2844     0795  3400               	retlw	0
  2845     0796  3471               	retlw	low _EUSART_RxCompleteCallbackRegister
  2846     0797  340E               	retlw	high _EUSART_RxCompleteCallbackRegister
  2847     0798  3400               	retlw	0
  2848     0799  3400               	retlw	0
  2849     079A  3444               	retlw	low _EUSART_FramingErrorCallbackRegister
  2850     079B  340E               	retlw	high _EUSART_FramingErrorCallbackRegister
  2851     079C  3453               	retlw	low _EUSART_OverrunErrorCallbackRegister
  2852     079D  340E               	retlw	high _EUSART_OverrunErrorCallbackRegister
  2853     079E  3400               	retlw	0
  2854     079F  3400               	retlw	0
  2855     07A0  3400               	retlw	0
  2856     07A1  3400               	retlw	0
  2857     07A2                     __end_of_UART1:
  2858                           
  2859                           	psect	stringtext2
  2860     10AA                     __pstringtext2:
  2861     10AA                     _I2C1_Host:
  2862     10AA  3462               	retlw	low _I2C1_Initialize
  2863     10AB  340E               	retlw	high _I2C1_Initialize
  2864     10AC  3400               	retlw	0
  2865     10AD  3400               	retlw	0
  2866     10AE  3400               	retlw	0
  2867     10AF  3400               	retlw	0
  2868     10B0  3400               	retlw	0
  2869     10B1  3400               	retlw	0
  2870     10B2  3400               	retlw	0
  2871     10B3  3400               	retlw	0
  2872     10B4  3400               	retlw	0
  2873     10B5  3400               	retlw	0
  2874     10B6  3400               	retlw	0
  2875     10B7  3400               	retlw	0
  2876     10B8  3400               	retlw	0
  2877     10B9  3400               	retlw	0
  2878     10BA  3400               	retlw	0
  2879     10BB  3400               	retlw	0
  2880     10BC  3400               	retlw	0
  2881     10BD  3400               	retlw	0
  2882     10BE                     __end_of_I2C1_Host:
  2883                           
  2884                           	psect	stringtext3
  2885     10D1                     __pstringtext3:
  2886     10D1                     _i2c1_eventTable:
  2887     10D1  3490               	retlw	low _I2C1_EVENT_IDLE
  2888     10D2  340D               	retlw	high _I2C1_EVENT_IDLE
  2889     10D3  34E3               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  2890     10D4  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  2891     10D5  34CE               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  2892     10D6  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  2893     10D7  34A2               	retlw	low _I2C1_EVENT_TX
  2894     10D8  3407               	retlw	high _I2C1_EVENT_TX
  2895     10D9  34A0               	retlw	low _I2C1_EVENT_RX
  2896     10DA  3406               	retlw	high _I2C1_EVENT_RX
  2897     10DB  34AA               	retlw	low _I2C1_EVENT_NACK
  2898     10DC  340D               	retlw	high _I2C1_EVENT_NACK
  2899     10DD  34B0               	retlw	low _I2C1_EVENT_ERROR
  2900     10DE  340D               	retlw	high _I2C1_EVENT_ERROR
  2901     10DF  34EB               	retlw	low _I2C1_EVENT_STOP
  2902     10E0  340D               	retlw	high _I2C1_EVENT_STOP
  2903     10E1  34D5               	retlw	low _I2C1_EVENT_RESET
  2904     10E2  340D               	retlw	high _I2C1_EVENT_RESET
  2905     10E3                     __end_of_i2c1_eventTable:
  2906                           
  2907                           	psect	nvBANK1
  2908     00E8                     __pnvBANK1:
  2909     00E8                     _TMR2_PeriodMatchCallback:
  2910     00E8                     	ds	2
  2911     00EA                     _INT_IMU_InterruptHandler:
  2912     00EA                     	ds	2
  2913     00EC                     _EUSART_RxInterruptHandler:
  2914     00EC                     	ds	2
  2915     00EE                     _EUSART_TxInterruptHandler:
  2916     00EE                     	ds	2
  2917     001C                     _T2CONbits      set	28
  2918     001C                     _T2CON          set	28
  2919     001A                     _TMR2           set	26
  2920     001B                     _PR2            set	27
  2921     000B                     _INTCONbits     set	11
  2922     0012                     _PIR2bits       set	18
  2923     0011                     _PIR1bits       set	17
  2924     008E                     _TRISC          set	142
  2925     008C                     _TRISA          set	140
  2926     0098                     _OSCTUNE        set	152
  2927     0099                     _OSCCON         set	153
  2928     0095                     _OPTION_REGbits set	149
  2929     0092                     _PIE2bits       set	146
  2930     0091                     _PIE1bits       set	145
  2931     009D                     _ADCON0bits     set	157
  2932     009D                     _ADCON0         set	157
  2933     009F                     _ADCON2         set	159
  2934     009C                     _ADRESH         set	156
  2935     009B                     _ADRESL         set	155
  2936     009E                     _ADCON1         set	158
  2937     010E                     _LATCbits       set	270
  2938     010E                     _LATC           set	270
  2939     010C                     _LATA           set	268
  2940     0116                     _BORCON         set	278
  2941     019A                     _TX1REG         set	410
  2942     0199                     _RC1REG         set	409
  2943     019F                     _BAUD1CONbits   set	415
  2944     019E                     _TX1STAbits     set	414
  2945     019D                     _RC1STAbits     set	413
  2946     019C                     _SP1BRGH        set	412
  2947     019B                     _SP1BRGL        set	411
  2948     019E                     _TX1STA         set	414
  2949     019D                     _RC1STA         set	413
  2950     019F                     _BAUD1CON       set	415
  2951     018E                     _ANSELC         set	398
  2952     018C                     _ANSELA         set	396
  2953     020E                     _WPUC           set	526
  2954     020C                     _WPUA           set	524
  2955     0216                     _SSP1CON2bits   set	534
  2956     0211                     _SSP1BUF        set	529
  2957     0214                     _SSP1STATbits   set	532
  2958     0215                     _SSP1CON1bits   set	533
  2959     0212                     _SSP1ADD        set	530
  2960     0217                     _SSP1CON3       set	535
  2961     0216                     _SSP1CON2       set	534
  2962     0215                     _SSP1CON1       set	533
  2963     0214                     _SSP1STAT       set	532
  2964     028E                     _ODCONC         set	654
  2965     028C                     _ODCONA         set	652
  2966     029E                     _CCPTMRSbits    set	670
  2967     030E                     _SLRCONC        set	782
  2968     030C                     _SLRCONA        set	780
  2969     0399                     _IOCCFbits      set	921
  2970     0399                     _IOCCF          set	921
  2971     0398                     _IOCCN          set	920
  2972     0397                     _IOCCP          set	919
  2973     0393                     _IOCAF          set	915
  2974     0392                     _IOCAN          set	914
  2975     0391                     _IOCAP          set	913
  2976     038E                     _INLVLC         set	910
  2977     038C                     _INLVLA         set	908
  2978     061A                     _PWM4DCL        set	1562
  2979     061B                     _PWM4DCH        set	1563
  2980     061C                     _PWM4CON        set	1564
  2981     0617                     _PWM3DCL        set	1559
  2982     0618                     _PWM3DCH        set	1560
  2983     0619                     _PWM3CON        set	1561
  2984     0E21                     _SSPDATPPS      set	3617
  2985     0E20                     _SSPCLKPPS      set	3616
  2986     0E24                     _RXPPS          set	3620
  2987     0EA1                     _RC1PPS         set	3745
  2988     0EA0                     _RC0PPS         set	3744
  2989     0EA3                     _RC3PPS         set	3747
  2990     0E94                     _RA4PPS         set	3732
  2991     0E95                     _RA5PPS         set	3733
  2992                           
  2993                           	psect	stringtext4
  2994     1000                     __pstringtext4:
  2995     1000                     STR_13:
  2996     1000  3445               	retlw	69	;'E'
  2997     1001  346E               	retlw	110	;'n'
  2998     1002  3474               	retlw	116	;'t'
  2999     1003  3465               	retlw	101	;'e'
  3000     1004  3472               	retlw	114	;'r'
  3001     1005  3469               	retlw	105	;'i'
  3002     1006  346E               	retlw	110	;'n'
  3003     1007  3467               	retlw	103	;'g'
  3004     1008  3420               	retlw	32	;' '
  3005     1009  3450               	retlw	80	;'P'
  3006     100A  3472               	retlw	114	;'r'
  3007     100B  346F               	retlw	111	;'o'
  3008     100C  3467               	retlw	103	;'g'
  3009     100D  3472               	retlw	114	;'r'
  3010     100E  3461               	retlw	97	;'a'
  3011     100F  346D               	retlw	109	;'m'
  3012     1010  346D               	retlw	109	;'m'
  3013     1011  3469               	retlw	105	;'i'
  3014     1012  346E               	retlw	110	;'n'
  3015     1013  3467               	retlw	103	;'g'
  3016     1014  3420               	retlw	32	;' '
  3017     1015  344D               	retlw	77	;'M'
  3018     1016  346F               	retlw	111	;'o'
  3019     1017  3464               	retlw	100	;'d'
  3020     1018  3465               	retlw	101	;'e'
  3021     1019  340D               	retlw	13
  3022     101A  340A               	retlw	10
  3023     101B  3400               	retlw	0
  3024                           
  3025                           	psect	stringtext5
  3026     101C                     __pstringtext5:
  3027     101C                     STR_5:
  3028     101C  3445               	retlw	69	;'E'
  3029     101D  3453               	retlw	83	;'S'
  3030     101E  3443               	retlw	67	;'C'
  3031     101F  3420               	retlw	32	;' '
  3032     1020  3450               	retlw	80	;'P'
  3033     1021  3472               	retlw	114	;'r'
  3034     1022  346F               	retlw	111	;'o'
  3035     1023  3467               	retlw	103	;'g'
  3036     1024  3472               	retlw	114	;'r'
  3037     1025  3461               	retlw	97	;'a'
  3038     1026  346D               	retlw	109	;'m'
  3039     1027  346D               	retlw	109	;'m'
  3040     1028  3469               	retlw	105	;'i'
  3041     1029  346E               	retlw	110	;'n'
  3042     102A  3467               	retlw	103	;'g'
  3043     102B  3420               	retlw	32	;' '
  3044     102C  3443               	retlw	67	;'C'
  3045     102D  346F               	retlw	111	;'o'
  3046     102E  346D               	retlw	109	;'m'
  3047     102F  3470               	retlw	112	;'p'
  3048     1030  346C               	retlw	108	;'l'
  3049     1031  3465               	retlw	101	;'e'
  3050     1032  3474               	retlw	116	;'t'
  3051     1033  3465               	retlw	101	;'e'
  3052     1034  340D               	retlw	13
  3053     1035  340A               	retlw	10
  3054     1036  3400               	retlw	0
  3055                           
  3056                           	psect	stringtext6
  3057     1037                     __pstringtext6:
  3058     1037                     STR_14:
  3059     1037  3450               	retlw	80	;'P'
  3060     1038  3472               	retlw	114	;'r'
  3061     1039  346F               	retlw	111	;'o'
  3062     103A  3467               	retlw	103	;'g'
  3063     103B  3472               	retlw	114	;'r'
  3064     103C  3461               	retlw	97	;'a'
  3065     103D  346D               	retlw	109	;'m'
  3066     103E  346D               	retlw	109	;'m'
  3067     103F  3469               	retlw	105	;'i'
  3068     1040  346E               	retlw	110	;'n'
  3069     1041  3467               	retlw	103	;'g'
  3070     1042  3420               	retlw	32	;' '
  3071     1043  3450               	retlw	80	;'P'
  3072     1044  3461               	retlw	97	;'a'
  3073     1045  3472               	retlw	114	;'r'
  3074     1046  3461               	retlw	97	;'a'
  3075     1047  346D               	retlw	109	;'m'
  3076     1048  3465               	retlw	101	;'e'
  3077     1049  3474               	retlw	116	;'t'
  3078     104A  3465               	retlw	101	;'e'
  3079     104B  3472               	retlw	114	;'r'
  3080     104C  3420               	retlw	32	;' '
  3081     104D  3425               	retlw	37	;'%'
  3082     104E  3475               	retlw	117	;'u'
  3083     104F  340D               	retlw	13
  3084     1050  340A               	retlw	10
  3085     1051  3400               	retlw	0
  3086                           
  3087                           	psect	stringtext7
  3088     1052                     __pstringtext7:
  3089     1052                     STR_4:
  3090     1052  3445               	retlw	69	;'E'
  3091     1053  3453               	retlw	83	;'S'
  3092     1054  3443               	retlw	67	;'C'
  3093     1055  3420               	retlw	32	;' '
  3094     1056  3450               	retlw	80	;'P'
  3095     1057  3472               	retlw	114	;'r'
  3096     1058  346F               	retlw	111	;'o'
  3097     1059  3467               	retlw	103	;'g'
  3098     105A  3472               	retlw	114	;'r'
  3099     105B  3461               	retlw	97	;'a'
  3100     105C  346D               	retlw	109	;'m'
  3101     105D  346D               	retlw	109	;'m'
  3102     105E  3469               	retlw	105	;'i'
  3103     105F  346E               	retlw	110	;'n'
  3104     1060  3467               	retlw	103	;'g'
  3105     1061  3420               	retlw	32	;' '
  3106     1062  3453               	retlw	83	;'S'
  3107     1063  3474               	retlw	116	;'t'
  3108     1064  3461               	retlw	97	;'a'
  3109     1065  3472               	retlw	114	;'r'
  3110     1066  3474               	retlw	116	;'t'
  3111     1067  340D               	retlw	13
  3112     1068  340A               	retlw	10
  3113     1069  3400               	retlw	0
  3114                           
  3115                           	psect	stringtext8
  3116     106A                     __pstringtext8:
  3117     106A                     STR_8:
  3118     106A  3449               	retlw	73	;'I'
  3119     106B  344D               	retlw	77	;'M'
  3120     106C  3455               	retlw	85	;'U'
  3121     106D  3420               	retlw	32	;' '
  3122     106E  3453               	retlw	83	;'S'
  3123     106F  3474               	retlw	116	;'t'
  3124     1070  3472               	retlw	114	;'r'
  3125     1071  3465               	retlw	101	;'e'
  3126     1072  3461               	retlw	97	;'a'
  3127     1073  346D               	retlw	109	;'m'
  3128     1074  3420               	retlw	32	;' '
  3129     1075  3444               	retlw	68	;'D'
  3130     1076  3469               	retlw	105	;'i'
  3131     1077  3473               	retlw	115	;'s'
  3132     1078  3461               	retlw	97	;'a'
  3133     1079  3462               	retlw	98	;'b'
  3134     107A  346C               	retlw	108	;'l'
  3135     107B  3465               	retlw	101	;'e'
  3136     107C  3464               	retlw	100	;'d'
  3137     107D  340D               	retlw	13
  3138     107E  340A               	retlw	10
  3139     107F  3400               	retlw	0
  3140                           
  3141                           	psect	stringtext9
  3142     1080                     __pstringtext9:
  3143     1080                     STR_7:
  3144     1080  3449               	retlw	73	;'I'
  3145     1081  344D               	retlw	77	;'M'
  3146     1082  3455               	retlw	85	;'U'
  3147     1083  3420               	retlw	32	;' '
  3148     1084  3453               	retlw	83	;'S'
  3149     1085  3474               	retlw	116	;'t'
  3150     1086  3472               	retlw	114	;'r'
  3151     1087  3465               	retlw	101	;'e'
  3152     1088  3461               	retlw	97	;'a'
  3153     1089  346D               	retlw	109	;'m'
  3154     108A  3420               	retlw	32	;' '
  3155     108B  3445               	retlw	69	;'E'
  3156     108C  346E               	retlw	110	;'n'
  3157     108D  3461               	retlw	97	;'a'
  3158     108E  3462               	retlw	98	;'b'
  3159     108F  346C               	retlw	108	;'l'
  3160     1090  3465               	retlw	101	;'e'
  3161     1091  3464               	retlw	100	;'d'
  3162     1092  340D               	retlw	13
  3163     1093  340A               	retlw	10
  3164     1094  3400               	retlw	0
  3165                           
  3166                           	psect	stringtext10
  3167     1095                     __pstringtext10:
  3168     1095                     STR_9:
  3169     1095  3443               	retlw	67	;'C'
  3170     1096  344D               	retlw	77	;'M'
  3171     1097  3444               	retlw	68	;'D'
  3172     1098  3420               	retlw	32	;' '
  3173     1099  346E               	retlw	110	;'n'
  3174     109A  346F               	retlw	111	;'o'
  3175     109B  3474               	retlw	116	;'t'
  3176     109C  3420               	retlw	32	;' '
  3177     109D  3452               	retlw	82	;'R'
  3178     109E  3465               	retlw	101	;'e'
  3179     109F  3463               	retlw	99	;'c'
  3180     10A0  346F               	retlw	111	;'o'
  3181     10A1  3467               	retlw	103	;'g'
  3182     10A2  346E               	retlw	110	;'n'
  3183     10A3  3469               	retlw	105	;'i'
  3184     10A4  347A               	retlw	122	;'z'
  3185     10A5  3465               	retlw	101	;'e'
  3186     10A6  3464               	retlw	100	;'d'
  3187     10A7  340D               	retlw	13
  3188     10A8  340A               	retlw	10
  3189     10A9  3400               	retlw	0
  3190                           
  3191                           	psect	stringtext11
  3192     10BE                     __pstringtext11:
  3193     10BE                     STR_12:
  3194     10BE  3450               	retlw	80	;'P'
  3195     10BF  346F               	retlw	111	;'o'
  3196     10C0  3477               	retlw	119	;'w'
  3197     10C1  3465               	retlw	101	;'e'
  3198     10C2  3472               	retlw	114	;'r'
  3199     10C3  3469               	retlw	105	;'i'
  3200     10C4  346E               	retlw	110	;'n'
  3201     10C5  3467               	retlw	103	;'g'
  3202     10C6  3420               	retlw	32	;' '
  3203     10C7  346F               	retlw	111	;'o'
  3204     10C8  346E               	retlw	110	;'n'
  3205     10C9  3420               	retlw	32	;' '
  3206     10CA  3445               	retlw	69	;'E'
  3207     10CB  3453               	retlw	83	;'S'
  3208     10CC  3443               	retlw	67	;'C'
  3209     10CD  3473               	retlw	115	;'s'
  3210     10CE  340D               	retlw	13
  3211     10CF  340A               	retlw	10
  3212     10D0  3400               	retlw	0
  3213                           
  3214                           	psect	stringtext12
  3215     10E3                     __pstringtext12:
  3216     10E3                     STR_10:
  3217     10E3  3425               	retlw	37	;'%'
  3218     10E4  3464               	retlw	100	;'d'
  3219     10E5  342C               	retlw	44	;','
  3220     10E6  3425               	retlw	37	;'%'
  3221     10E7  3464               	retlw	100	;'d'
  3222     10E8  342C               	retlw	44	;','
  3223     10E9  3425               	retlw	37	;'%'
  3224     10EA  3464               	retlw	100	;'d'
  3225     10EB  342C               	retlw	44	;','
  3226     10EC  3425               	retlw	37	;'%'
  3227     10ED  3464               	retlw	100	;'d'
  3228     10EE  342C               	retlw	44	;','
  3229     10EF  3425               	retlw	37	;'%'
  3230     10F0  3464               	retlw	100	;'d'
  3231     10F1  342C               	retlw	44	;','
  3232     10F2  3425               	retlw	37	;'%'
  3233     10F3  3464               	retlw	100	;'d'
  3234     10F4  3400               	retlw	0
  3235                           
  3236                           	psect	stringtext13
  3237     10F5                     __pstringtext13:
  3238     10F5                     STR_11:
  3239     10F5  3452               	retlw	82	;'R'
  3240     10F6  3465               	retlw	101	;'e'
  3241     10F7  3473               	retlw	115	;'s'
  3242     10F8  3465               	retlw	101	;'e'
  3243     10F9  3474               	retlw	116	;'t'
  3244     10FA  3469               	retlw	105	;'i'
  3245     10FB  346E               	retlw	110	;'n'
  3246     10FC  3467               	retlw	103	;'g'
  3247     10FD  3420               	retlw	32	;' '
  3248     10FE  3445               	retlw	69	;'E'
  3249     10FF  3453               	retlw	83	;'S'
  3250     1100  3443               	retlw	67	;'C'
  3251     1101  3473               	retlw	115	;'s'
  3252     1102  340D               	retlw	13
  3253     1103  340A               	retlw	10
  3254     1104  3400               	retlw	0
  3255                           
  3256                           	psect	stringtext14
  3257     1105                     __pstringtext14:
  3258     1105                     STR_3:
  3259     1105  3445               	retlw	69	;'E'
  3260     1106  3453               	retlw	83	;'S'
  3261     1107  3443               	retlw	67	;'C'
  3262     1108  3420               	retlw	32	;' '
  3263     1109  3444               	retlw	68	;'D'
  3264     110A  3469               	retlw	105	;'i'
  3265     110B  3473               	retlw	115	;'s'
  3266     110C  3461               	retlw	97	;'a'
  3267     110D  3462               	retlw	98	;'b'
  3268     110E  346C               	retlw	108	;'l'
  3269     110F  3465               	retlw	101	;'e'
  3270     1110  3464               	retlw	100	;'d'
  3271     1111  340D               	retlw	13
  3272     1112  340A               	retlw	10
  3273     1113  3400               	retlw	0
  3274                           
  3275                           	psect	stringtext15
  3276     1114                     __pstringtext15:
  3277     1114                     STR_2:
  3278     1114  3445               	retlw	69	;'E'
  3279     1115  3453               	retlw	83	;'S'
  3280     1116  3443               	retlw	67	;'C'
  3281     1117  3420               	retlw	32	;' '
  3282     1118  3445               	retlw	69	;'E'
  3283     1119  346E               	retlw	110	;'n'
  3284     111A  3461               	retlw	97	;'a'
  3285     111B  3462               	retlw	98	;'b'
  3286     111C  346C               	retlw	108	;'l'
  3287     111D  3465               	retlw	101	;'e'
  3288     111E  3464               	retlw	100	;'d'
  3289     111F  340D               	retlw	13
  3290     1120  340A               	retlw	10
  3291     1121  3400               	retlw	0
  3292                           
  3293                           	psect	stringtext16
  3294     1122                     __pstringtext16:
  3295     1122                     STR_1:
  3296     1122  3452               	retlw	82	;'R'
  3297     1123  3465               	retlw	101	;'e'
  3298     1124  3461               	retlw	97	;'a'
  3299     1125  3464               	retlw	100	;'d'
  3300     1126  3479               	retlw	121	;'y'
  3301     1127  340D               	retlw	13
  3302     1128  340A               	retlw	10
  3303     1129  3400               	retlw	0
  3304                           
  3305                           	psect	stringtext17
  3306     112A                     __pstringtext17:
  3307     112A                     STR_6:
  3308     112A  3425               	retlw	37	;'%'
  3309     112B  3475               	retlw	117	;'u'
  3310     112C  3400               	retlw	0
  3311                           
  3312                           	psect	stringtext18
  3313     0000                     __pstringtext18:
  3314                           
  3315                           	psect	cinit
  3316     004C                     start_initialization:	
  3317                           ; #config settings
  3318                           
  3319     004C                     __initialization:
  3320                           
  3321                           ; Initialize objects allocated to BANK2
  3322     004C  30F8               	movlw	low __pidataBANK2
  3323     004D  0084               	movwf	4
  3324     004E  3087               	movlw	(high __pidataBANK2)| (0+128)
  3325     004F  0085               	movwf	5
  3326     0050  3048               	movlw	low __pdataBANK2
  3327     0051  0086               	movwf	6
  3328     0052  3001               	movlw	high __pdataBANK2
  3329     0053  0087               	movwf	7
  3330     0054  3008               	movlw	8
  3331     0055  318D  25C8  3180   	fcall	init_ram
  3332                           
  3333                           ; Clear objects allocated to COMMON
  3334     0058  01F9               	clrf	__pbssCOMMON& (0+127)
  3335     0059  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  3336     005A  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  3337     005B  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  3338     005C  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  3339                           
  3340                           ; Clear objects allocated to BANK0
  3341     005D  3069               	movlw	low __pbssBANK0
  3342     005E  0084               	movwf	4
  3343     005F  3000               	movlw	high __pbssBANK0
  3344     0060  0085               	movwf	5
  3345     0061  3007               	movlw	7
  3346     0062  318D  25C2  3180   	fcall	clear_ram0
  3347                           
  3348                           ; Clear objects allocated to BANK1
  3349     0065  30A0               	movlw	low __pbssBANK1
  3350     0066  0084               	movwf	4
  3351     0067  3000               	movlw	high __pbssBANK1
  3352     0068  0085               	movwf	5
  3353     0069  3048               	movlw	72
  3354     006A  318D  25C2  3180   	fcall	clear_ram0
  3355                           
  3356                           ; Clear objects allocated to BANK2
  3357     006D  3020               	movlw	low __pbssBANK2
  3358     006E  0084               	movwf	4
  3359     006F  3001               	movlw	high __pbssBANK2
  3360     0070  0085               	movwf	5
  3361     0071  3028               	movlw	40
  3362     0072  318D  25C2  3180   	fcall	clear_ram0
  3363     0075                     end_of_initialization:	
  3364                           ;End of C runtime variable initialization code
  3365                           
  3366     0075                     __end_of__initialization:
  3367     0075  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3368     0076  0020               	movlb	0
  3369     0077  318F  2FD9         	ljmp	_main	;jump to C main() function
  3370                           
  3371                           	psect	bssCOMMON
  3372     0079                     __pbssCOMMON:
  3373     0079                     _eusartRxTail:
  3374     0079                     	ds	1
  3375     007A                     _eusartRxHead:
  3376     007A                     	ds	1
  3377     007B                     _eusartTxBufferRemaining:
  3378     007B                     	ds	1
  3379     007C                     _eusartTxTail:
  3380     007C                     	ds	1
  3381     007D                     _eusartTxHead:
  3382     007D                     	ds	1
  3383                           
  3384                           	psect	bssBANK0
  3385     0069                     __pbssBANK0:
  3386     0069                     _BAT_LEVEL:
  3387     0069                     	ds	2
  3388     006B                     _INT_InterruptHandler:
  3389     006B                     	ds	2
  3390     006D                     _flags:
  3391     006D                     	ds	1
  3392     006E                     APC220_Receiver_Interrupt@index:
  3393     006E                     	ds	1
  3394     006F                     _eusartRxCount:
  3395     006F                     	ds	1
  3396                           
  3397                           	psect	bssBANK1
  3398     00A0                     __pbssBANK1:
  3399     00A0                     _eusartRxStatusBuffer:
  3400     00A0                     	ds	16
  3401     00B0                     _i2c1Status:
  3402     00B0                     	ds	14
  3403     00BE                     _IMU_Data:
  3404     00BE                     	ds	12
  3405     00CA                     _eusartTxBuffer:
  3406     00CA                     	ds	8
  3407     00D2                     _Flags:
  3408     00D2                     	ds	3
  3409     00D5                     _cmd:
  3410     00D5                     	ds	3
  3411     00D8                     _width:
  3412     00D8                     	ds	2
  3413     00DA                     _prec:
  3414     00DA                     	ds	2
  3415     00DC                     _EUSART_OverrunErrorHandler:
  3416     00DC                     	ds	2
  3417     00DE                     _EUSART_FramingErrorHandler:
  3418     00DE                     	ds	2
  3419     00E0                     _EUSART_RxCompleteInterruptHandler:
  3420     00E0                     	ds	2
  3421     00E2                     _EUSART_TxCompleteInterruptHandler:
  3422     00E2                     	ds	2
  3423     00E4                     _eusartRxLastError:
  3424     00E4                     	ds	2
  3425     00E6                     _I2C1_Callback:
  3426     00E6                     	ds	2
  3427                           
  3428                           	psect	bssBANK2
  3429     0120                     __pbssBANK2:
  3430     0120                     _dbuf:
  3431     0120                     	ds	32
  3432     0140                     _eusartRxBuffer:
  3433     0140                     	ds	8
  3434                           
  3435                           	psect	dataBANK2
  3436     0148                     __pdataBANK2:
  3437     0148                     _ESC_Setting:
  3438     0148                     	ds	8
  3439                           
  3440                           	psect	inittext
  3441     0DC8                     init_ram:
  3442     0DC8  00FE               	movwf	btemp
  3443     0DC9                     initloop:
  3444     0DC9  0012               	moviw fsr0++
  3445     0DCA  001E               	movwi fsr1++
  3446     0DCB  0BFE               	decfsz	btemp,f
  3447     0DCC  2DC9               	goto	initloop
  3448     0DCD  3400               	retlw	0
  3449                           
  3450                           	psect	clrtext
  3451     0DC2                     clear_ram0:	
  3452                           ;	Called with FSR0 containing the base address, and
  3453                           ;	WREG with the size to clear
  3454                           
  3455     0DC2  0064               	clrwdt	;clear the watchdog before getting into this loop
  3456     0DC3                     clrloop0:
  3457     0DC3  0180               	clrf	0	;clear RAM location pointed to by FSR
  3458     0DC4  3101               	addfsr 0,1
  3459     0DC5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3460     0DC6  2DC3               	goto	clrloop0	;have we reached the end yet?
  3461     0DC7  3400               	retlw	0	;all done for this memory range, return
  3462                           
  3463                           	psect	cstackCOMMON
  3464     0070                     __pcstackCOMMON:
  3465     0070                     ?_I2C1_Initialize:
  3466     0070                     ?_I2C1_EVENT_IDLE:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475     0070                     ?_I2C1_EVENT_TX:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478     0070                     ?_I2C1_EVENT_RX:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481     0070                     ?_I2C1_EVENT_NACK:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484     0070                     ?_I2C1_EVENT_ERROR:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487     0070                     ?_I2C1_EVENT_STOP:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490     0070                     ?_I2C1_EVENT_RESET:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493     0070                     ?_I2C1_InterruptsEnable:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496     0070                     ?_I2C1_EventHandler:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499     0070                     ?_I2C1_ErrorEventHandler:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502     0070                     ?_I2C1_InterruptClear:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505     0070                     ?_I2C1_ErrorInterruptClear:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508     0070                     ?_I2C1_StatusFlagsClear:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511     0070                     ?_I2C1_IsAddr:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514     0070                     ?_I2C1_IsNack:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517     0070                     ?_I2C1_IsData:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520     0070                     ?_I2C1_DataTransmit:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523     0070                     ?_I2C1_RestartEnable:	
  3524                           ; 1 bytes @ 0x0
  3525                           
  3526     0070                     ?_I2C1_IsRxBufFull:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529     0070                     ?_I2C1_DataReceive:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532     0070                     ?_I2C1_AckSend:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535     0070                     ?_I2C1_RestartDisable:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538     0070                     ?_I2C1_NackSend:	
  3539                           ; 1 bytes @ 0x0
  3540                           
  3541     0070                     ?_I2C1_ReceiveEnable:	
  3542                           ; 1 bytes @ 0x0
  3543                           
  3544     0070                     ?_I2C1_StopSend:	
  3545                           ; 1 bytes @ 0x0
  3546                           
  3547     0070                     ?_I2C1_BusReset:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550     0070                     ?_PIN_MANAGER_Initialize:	
  3551                           ; 1 bytes @ 0x0
  3552                           
  3553     0070                     ?_TMR2_Initialize:	
  3554                           ; 1 bytes @ 0x0
  3555                           
  3556     0070                     ?_EUSART_Initialize:	
  3557                           ; 1 bytes @ 0x0
  3558                           
  3559     0070                     ?_EUSART_Read:	
  3560                           ; 1 bytes @ 0x0
  3561                           
  3562     0070                     ?_EUSART_IsTxReady:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565     0070                     ?_EUSART_TransmitEnable:	
  3566                           ; 1 bytes @ 0x0
  3567                           
  3568     0070                     ?_EUSART_ReceiveISR:	
  3569                           ; 1 bytes @ 0x0
  3570                           
  3571     0070                     ?_EUSART_TransmitISR:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580     0070                     ?_SYSTEM_STARTUP:	
  3581                           ; 1 bytes @ 0x0
  3582                           
  3583     0070                     ?_SYSTEM_UPDATE:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586     0070                     ?_APC220_Receiver_Interrupt:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589     0070                     ?_ADC_Initialize:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592     0070                     ?_I2C1_ISR:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595     0070                     ?_I2C1_ERROR_ISR:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598     0070                     ?_I2C1_Close:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601     0070                     ?_PWM3_Initialize:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604     0070                     ?_PWM4_Initialize:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607     0070                     ?_INTERRUPT_Initialize:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610     0070                     ?_INTERRUPT_InterruptManager:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613     0070                     ?_CLOCK_Initialize:	
  3614                           ; 1 bytes @ 0x0
  3615                           
  3616     0070                     ?_SYSTEM_Initialize:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619     0070                     ?_EUSART_Enable:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622     0070                     ?_EUSART_ReceiveEnable:	
  3623                           ; 1 bytes @ 0x0
  3624                           
  3625     0070                     ?_EUSART_TransmitInterruptEnable:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628     0070                     ?_EUSART_ReceiveInterruptEnable:	
  3629                           ; 1 bytes @ 0x0
  3630                           
  3631     0070                     ?_putch:	
  3632                           ; 1 bytes @ 0x0
  3633                           
  3634     0070                     ?_main:	
  3635                           ; 1 bytes @ 0x0
  3636                           
  3637     0070                     ?i1___awmod:	
  3638                           ; 2 bytes @ 0x0
  3639                           
  3640     0070                     I2C1_EVENT_RX@retEventState:	
  3641                           ; 2 bytes @ 0x0
  3642                           
  3643     0070                     I2C1_EVENT_NACK@retEventState:	
  3644                           ; 1 bytes @ 0x0
  3645                           
  3646     0070                     I2C1_EVENT_ERROR@retEventState:	
  3647                           ; 1 bytes @ 0x0
  3648                           
  3649     0070                     I2C1_DataTransmit@data:	
  3650                           ; 1 bytes @ 0x0
  3651                           
  3652     0070                     EUSART_Read@tempRxTail:	
  3653                           ; 1 bytes @ 0x0
  3654                           
  3655     0070                     EUSART_TransmitISR@tempTxTail:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658     0070                     i1___awmod@divisor:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661     0070                     ??_I2C1_EVENT_IDLE:	
  3662                           ; 2 bytes @ 0x0
  3663                           
  3664     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667     0070                     ??_I2C1_EVENT_RX:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670     0070                     ??_I2C1_EVENT_NACK:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673     0070                     ??_I2C1_EVENT_ERROR:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676     0070                     ??_I2C1_EVENT_STOP:	
  3677                           ; 1 bytes @ 0x0
  3678                           
  3679     0070                     ??_I2C1_EVENT_RESET:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682     0070                     ??_I2C1_InterruptClear:	
  3683                           ; 1 bytes @ 0x0
  3684                           
  3685     0070                     ??_I2C1_ErrorInterruptClear:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688     0070                     ??_I2C1_StatusFlagsClear:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691     0070                     ??_I2C1_IsAddr:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694     0070                     ??_I2C1_IsNack:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697     0070                     ??_I2C1_IsData:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700     0070                     ??_I2C1_DataTransmit:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703     0070                     ??_I2C1_RestartEnable:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706     0070                     ??_I2C1_IsRxBufFull:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709     0070                     ??_I2C1_DataReceive:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712     0070                     ??_I2C1_AckSend:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715     0070                     ??_I2C1_RestartDisable:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718     0070                     ??_I2C1_NackSend:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721     0070                     ??_I2C1_ReceiveEnable:	
  3722                           ; 1 bytes @ 0x0
  3723                           
  3724     0070                     ??_I2C1_StopSend:	
  3725                           ; 1 bytes @ 0x0
  3726                           
  3727     0070                     ??_I2C1_BusReset:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730     0070                     ??_EUSART_Read:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733     0070                     ??_EUSART_TransmitISR:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  3737                           ; 1 bytes @ 0x0
  3738                           
  3739     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  3740                           ; 1 bytes @ 0x0
  3741                           
  3742     0070                     ??_I2C1_Close:	
  3743                           ; 1 bytes @ 0x0
  3744                           
  3745                           
  3746                           ; 1 bytes @ 0x0
  3747     0070                     	ds	1
  3748     0071                     I2C1_EVENT_TX@retEventState:
  3749     0071                     EUSART_Read@readValue:	
  3750                           ; 1 bytes @ 0x1
  3751                           
  3752     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:	
  3753                           ; 1 bytes @ 0x1
  3754                           
  3755     0071                     ??_I2C1_EVENT_TX:	
  3756                           ; 1 bytes @ 0x1
  3757                           
  3758                           
  3759                           ; 1 bytes @ 0x1
  3760     0071                     	ds	1
  3761     0072                     i1___awmod@dividend:
  3762     0072                     ??_I2C1_EventHandler:	
  3763                           ; 2 bytes @ 0x2
  3764                           
  3765     0072                     ??_I2C1_ErrorEventHandler:	
  3766                           ; 1 bytes @ 0x2
  3767                           
  3768                           
  3769                           ; 1 bytes @ 0x2
  3770     0072                     	ds	2
  3771     0074                     i1___awmod@counter:
  3772     0074                     ??_I2C1_ISR:	
  3773                           ; 1 bytes @ 0x4
  3774                           
  3775     0074                     ??_I2C1_ERROR_ISR:	
  3776                           ; 1 bytes @ 0x4
  3777                           
  3778     0074                     ??i1___awmod:	
  3779                           ; 1 bytes @ 0x4
  3780                           
  3781                           
  3782                           ; 1 bytes @ 0x4
  3783     0074                     	ds	1
  3784     0075                     i1___awmod@sign:
  3785                           
  3786                           ; 1 bytes @ 0x5
  3787     0075                     	ds	1
  3788     0076                     APC220_Receiver_Interrupt@msg:
  3789     0076                     ??_APC220_Receiver_Interrupt:	
  3790                           ; 1 bytes @ 0x6
  3791                           
  3792                           
  3793                           ; 1 bytes @ 0x6
  3794     0076                     	ds	1
  3795     0077                     EUSART_ReceiveISR@regValue:
  3796     0077                     ??_EUSART_ReceiveISR:	
  3797                           ; 1 bytes @ 0x7
  3798                           
  3799                           
  3800                           ; 1 bytes @ 0x7
  3801     0077                     	ds	1
  3802     0078                     EUSART_ReceiveISR@tempRxHead:
  3803                           
  3804                           ; 1 bytes @ 0x8
  3805     0078                     	ds	1
  3806     0079                     ??_INTERRUPT_InterruptManager:
  3807                           
  3808                           	psect	cstackBANK0
  3809     0020                     __pcstackBANK0:	
  3810                           ; 1 bytes @ 0x9
  3811                           
  3812     0020                     ?_INT_SetInterruptHandler:
  3813     0020                     ?_INT_IMU_SetInterruptHandler:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816     0020                     ?_EUSART_Write:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819     0020                     ?_EUSART_RxCompleteCallbackRegister:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822     0020                     ?_EUSART_FramingErrorCallbackRegister:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825     0020                     ?_EUSART_OverrunErrorCallbackRegister:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828     0020                     ?_make16:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831     0020                     ?_ADC_GetConversion:	
  3832                           ; 2 bytes @ 0x0
  3833                           
  3834     0020                     ?___awdiv:	
  3835                           ; 2 bytes @ 0x0
  3836                           
  3837     0020                     ?___awmod:	
  3838                           ; 2 bytes @ 0x0
  3839                           
  3840     0020                     ?___lwdiv:	
  3841                           ; 2 bytes @ 0x0
  3842                           
  3843     0020                     ?___lwmod:	
  3844                           ; 2 bytes @ 0x0
  3845                           
  3846     0020                     EUSART_Write@txData:	
  3847                           ; 2 bytes @ 0x0
  3848                           
  3849     0020                     make16@Right:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852     0020                     INT_SetInterruptHandler@InterruptHandler:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855     0020                     INT_IMU_SetInterruptHandler@InterruptHandler:	
  3856                           ; 2 bytes @ 0x0
  3857                           
  3858     0020                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  3859                           ; 2 bytes @ 0x0
  3860                           
  3861     0020                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  3862                           ; 2 bytes @ 0x0
  3863                           
  3864     0020                     EUSART_RxCompleteCallbackRegister@callbackHandler:	
  3865                           ; 2 bytes @ 0x0
  3866                           
  3867     0020                     ___awdiv@divisor:	
  3868                           ; 2 bytes @ 0x0
  3869                           
  3870     0020                     ___awmod@divisor:	
  3871                           ; 2 bytes @ 0x0
  3872                           
  3873     0020                     ___lwdiv@divisor:	
  3874                           ; 2 bytes @ 0x0
  3875                           
  3876     0020                     ___lwmod@divisor:	
  3877                           ; 2 bytes @ 0x0
  3878                           
  3879     0020                     ??_I2C1_Initialize:	
  3880                           ; 2 bytes @ 0x0
  3881                           
  3882     0020                     ??_I2C1_InterruptsEnable:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885     0020                     ??_TMR2_Initialize:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888     0020                     ??_EUSART_IsTxReady:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891     0020                     ??_EUSART_TransmitEnable:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894     0020                     ??_ADC_Initialize:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897     0020                     ??_PWM3_Initialize:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900     0020                     ??_PWM4_Initialize:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903     0020                     ??_CLOCK_Initialize:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906     0020                     ??_EUSART_Enable:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909     0020                     ??_EUSART_ReceiveEnable:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912     0020                     ??_EUSART_TransmitInterruptEnable:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915     0020                     ??_EUSART_ReceiveInterruptEnable:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918                           
  3919                           ; 1 bytes @ 0x0
  3920     0020                     	ds	1
  3921     0021                     EUSART_Write@tempTxHead:
  3922     0021                     ??_EUSART_Write:	
  3923                           ; 1 bytes @ 0x1
  3924                           
  3925                           
  3926                           ; 1 bytes @ 0x1
  3927     0021                     	ds	1
  3928     0022                     putch@txData:
  3929     0022                     ___awdiv@dividend:	
  3930                           ; 1 bytes @ 0x2
  3931                           
  3932     0022                     ___awmod@dividend:	
  3933                           ; 2 bytes @ 0x2
  3934                           
  3935     0022                     ___lwdiv@dividend:	
  3936                           ; 2 bytes @ 0x2
  3937                           
  3938     0022                     ___lwmod@dividend:	
  3939                           ; 2 bytes @ 0x2
  3940                           
  3941     0022                     ??_INT_SetInterruptHandler:	
  3942                           ; 2 bytes @ 0x2
  3943                           
  3944     0022                     ??_PIN_MANAGER_Initialize:	
  3945                           ; 1 bytes @ 0x2
  3946                           
  3947     0022                     ??_EUSART_Initialize:	
  3948                           ; 1 bytes @ 0x2
  3949                           
  3950     0022                     ??_INT_IMU_SetInterruptHandler:	
  3951                           ; 1 bytes @ 0x2
  3952                           
  3953     0022                     ??_EUSART_RxCompleteCallbackRegister:	
  3954                           ; 1 bytes @ 0x2
  3955                           
  3956     0022                     ??_EUSART_FramingErrorCallbackRegister:	
  3957                           ; 1 bytes @ 0x2
  3958                           
  3959     0022                     ??_EUSART_OverrunErrorCallbackRegister:	
  3960                           ; 1 bytes @ 0x2
  3961                           
  3962     0022                     ??_make16:	
  3963                           ; 1 bytes @ 0x2
  3964                           
  3965     0022                     ??_ADC_GetConversion:	
  3966                           ; 1 bytes @ 0x2
  3967                           
  3968     0022                     ??_INTERRUPT_Initialize:	
  3969                           ; 1 bytes @ 0x2
  3970                           
  3971     0022                     ??_SYSTEM_Initialize:	
  3972                           ; 1 bytes @ 0x2
  3973                           
  3974     0022                     ??_putch:	
  3975                           ; 1 bytes @ 0x2
  3976                           
  3977                           
  3978                           ; 1 bytes @ 0x2
  3979     0022                     	ds	1
  3980     0023                     ?_fputc:
  3981     0023                     ADC_GetConversion@channel:	
  3982                           ; 2 bytes @ 0x3
  3983                           
  3984     0023                     fputc@c:	
  3985                           ; 1 bytes @ 0x3
  3986                           
  3987                           
  3988                           ; 2 bytes @ 0x3
  3989     0023                     	ds	1
  3990     0024                     ___awdiv@counter:
  3991     0024                     ___awmod@counter:	
  3992                           ; 1 bytes @ 0x4
  3993                           
  3994     0024                     ___lwmod@counter:	
  3995                           ; 1 bytes @ 0x4
  3996                           
  3997     0024                     ___lwdiv@quotient:	
  3998                           ; 1 bytes @ 0x4
  3999                           
  4000     0024                     ??___awdiv:	
  4001                           ; 2 bytes @ 0x4
  4002                           
  4003     0024                     ??___awmod:	
  4004                           ; 1 bytes @ 0x4
  4005                           
  4006     0024                     ??___lwdiv:	
  4007                           ; 1 bytes @ 0x4
  4008                           
  4009     0024                     ??___lwmod:	
  4010                           ; 1 bytes @ 0x4
  4011                           
  4012                           
  4013                           ; 1 bytes @ 0x4
  4014     0024                     	ds	1
  4015     0025                     ___awdiv@sign:
  4016     0025                     ___awmod@sign:	
  4017                           ; 1 bytes @ 0x5
  4018                           
  4019     0025                     make16@result:	
  4020                           ; 1 bytes @ 0x5
  4021                           
  4022     0025                     fputc@fp:	
  4023                           ; 2 bytes @ 0x5
  4024                           
  4025                           
  4026                           ; 2 bytes @ 0x5
  4027     0025                     	ds	1
  4028     0026                     ?_abs:
  4029     0026                     ___lwdiv@counter:	
  4030                           ; 2 bytes @ 0x6
  4031                           
  4032     0026                     ___awdiv@quotient:	
  4033                           ; 1 bytes @ 0x6
  4034                           
  4035     0026                     abs@a:	
  4036                           ; 2 bytes @ 0x6
  4037                           
  4038                           
  4039                           ; 2 bytes @ 0x6
  4040     0026                     	ds	1
  4041     0027                     make16@Left:
  4042     0027                     ??_fputc:	
  4043                           ; 1 bytes @ 0x7
  4044                           
  4045                           
  4046                           ; 1 bytes @ 0x7
  4047     0027                     	ds	1
  4048     0028                     ?_PWM3_LoadDutyValue:
  4049     0028                     ?_PWM4_LoadDutyValue:	
  4050                           ; 1 bytes @ 0x8
  4051                           
  4052     0028                     PWM3_LoadDutyValue@dutyValue:	
  4053                           ; 1 bytes @ 0x8
  4054                           
  4055     0028                     PWM4_LoadDutyValue@dutyValue:	
  4056                           ; 2 bytes @ 0x8
  4057                           
  4058     0028                     ??_abs:	
  4059                           ; 2 bytes @ 0x8
  4060                           
  4061                           
  4062                           ; 1 bytes @ 0x8
  4063     0028                     	ds	2
  4064     002A                     ??_PWM3_LoadDutyValue:
  4065     002A                     ??_PWM4_LoadDutyValue:	
  4066                           ; 1 bytes @ 0xA
  4067                           
  4068                           
  4069                           ; 1 bytes @ 0xA
  4070     002A                     	ds	2
  4071     002C                     ?_vfpfcnvrt:
  4072     002C                     vfpfcnvrt@fp:	
  4073                           ; 1 bytes @ 0xC
  4074                           
  4075                           
  4076                           ; 2 bytes @ 0xC
  4077     002C                     	ds	2
  4078     002E                     vfpfcnvrt@fmt:
  4079                           
  4080                           ; 1 bytes @ 0xE
  4081     002E                     	ds	1
  4082     002F                     vfpfcnvrt@ap:
  4083                           
  4084                           ; 1 bytes @ 0xF
  4085     002F                     	ds	1
  4086     0030                     ??_vfpfcnvrt:
  4087                           
  4088                           ; 1 bytes @ 0x10
  4089     0030                     	ds	4
  4090     0034                     vfpfcnvrt@done:
  4091                           
  4092                           ; 1 bytes @ 0x14
  4093     0034                     	ds	1
  4094     0035                     vfpfcnvrt@cp:
  4095                           
  4096                           ; 2 bytes @ 0x15
  4097     0035                     	ds	2
  4098     0037                     vfpfcnvrt@convarg:
  4099                           
  4100                           ; 4 bytes @ 0x17
  4101     0037                     	ds	4
  4102     003B                     vfpfcnvrt@c:
  4103                           
  4104                           ; 1 bytes @ 0x1B
  4105     003B                     	ds	1
  4106     003C                     ?_vfprintf:
  4107     003C                     vfprintf@fp:	
  4108                           ; 2 bytes @ 0x1C
  4109                           
  4110                           
  4111                           ; 2 bytes @ 0x1C
  4112     003C                     	ds	2
  4113     003E                     vfprintf@fmt:
  4114                           
  4115                           ; 2 bytes @ 0x1E
  4116     003E                     	ds	2
  4117     0040                     vfprintf@ap:
  4118                           
  4119                           ; 1 bytes @ 0x20
  4120     0040                     	ds	1
  4121     0041                     ??_vfprintf:
  4122                           
  4123                           ; 1 bytes @ 0x21
  4124     0041                     	ds	1
  4125     0042                     vfprintf@cfmt:
  4126                           
  4127                           ; 2 bytes @ 0x22
  4128     0042                     	ds	2
  4129     0044                     ?_printf:
  4130     0044                     printf@fmt:	
  4131                           ; 2 bytes @ 0x24
  4132                           
  4133                           
  4134                           ; 2 bytes @ 0x24
  4135     0044                     	ds	14
  4136     0052                     printf@ap:
  4137     0052                     ??_printf:	
  4138                           ; 1 bytes @ 0x32
  4139                           
  4140                           
  4141                           ; 1 bytes @ 0x32
  4142     0052                     	ds	1
  4143     0053                     ?_ESC_Programming:
  4144     0053                     ESC_Programming@settings:	
  4145                           ; 1 bytes @ 0x33
  4146                           
  4147     0053                     ??_SYSTEM_STARTUP:	
  4148                           ; 1 bytes @ 0x33
  4149                           
  4150                           
  4151                           ; 1 bytes @ 0x33
  4152     0053                     	ds	1
  4153     0054                     ??_ESC_Programming:
  4154                           
  4155                           ; 1 bytes @ 0x34
  4156     0054                     	ds	2
  4157     0056                     ESC_Programming@c:
  4158                           
  4159                           ; 2 bytes @ 0x36
  4160     0056                     	ds	2
  4161     0058                     ESC_Programming@c_1783:
  4162                           
  4163                           ; 2 bytes @ 0x38
  4164     0058                     	ds	2
  4165     005A                     ESC_Programming@i:
  4166                           
  4167                           ; 1 bytes @ 0x3A
  4168     005A                     	ds	1
  4169     005B                     SYSTEM_UPDATE@ax:
  4170     005B                     ??_SYSTEM_UPDATE:	
  4171                           ; 2 bytes @ 0x3B
  4172                           
  4173                           
  4174                           ; 1 bytes @ 0x3B
  4175     005B                     	ds	2
  4176     005D                     SYSTEM_UPDATE@ay:
  4177                           
  4178                           ; 2 bytes @ 0x3D
  4179     005D                     	ds	2
  4180     005F                     SYSTEM_UPDATE@az:
  4181                           
  4182                           ; 2 bytes @ 0x3F
  4183     005F                     	ds	2
  4184     0061                     SYSTEM_UPDATE@x:
  4185                           
  4186                           ; 2 bytes @ 0x41
  4187     0061                     	ds	2
  4188     0063                     SYSTEM_UPDATE@y:
  4189                           
  4190                           ; 2 bytes @ 0x43
  4191     0063                     	ds	2
  4192     0065                     SYSTEM_UPDATE@z:
  4193                           
  4194                           ; 2 bytes @ 0x45
  4195     0065                     	ds	2
  4196     0067                     ??_main:
  4197                           
  4198                           ; 1 bytes @ 0x47
  4199     0067                     	ds	2
  4200                           
  4201                           	psect	maintext
  4202     0FD9                     __pmaintext:	
  4203 ;;
  4204 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4205 ;;
  4206 ;; *************** function _main *****************
  4207 ;; Defined at:
  4208 ;;		line 56 in file "main.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  2  845[None  ] int 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0, pclath, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : B1F/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;Total ram usage:        2 bytes
  4227 ;; Hardware stack levels required when called: 15
  4228 ;; This function calls:
  4229 ;;		_ADC_GetConversion
  4230 ;;		_PWM3_LoadDutyValue
  4231 ;;		_PWM4_LoadDutyValue
  4232 ;;		_SYSTEM_Initialize
  4233 ;;		_SYSTEM_STARTUP
  4234 ;;		_SYSTEM_UPDATE
  4235 ;; This function is called by:
  4236 ;;		Startup code after reset
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240     0FD9                     _main:	
  4241                           ;psect for function _main
  4242                           
  4243     0FD9                     l3679:	
  4244                           ;incstack = 0
  4245                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  4246                           
  4247                           
  4248                           ;main.c: 57:     SYSTEM_Initialize();
  4249     0FD9  318F  273E  318F   	fcall	_SYSTEM_Initialize
  4250     0FDC                     l846:	
  4251                           ;main.c: 60:     while(1){
  4252                           
  4253                           
  4254                           ;main.c: 61:         BAT_LEVEL = (ADC_GetConversion(BAT_SENSE)>>6);
  4255     0FDC  3002               	movlw	2
  4256     0FDD  318F  2795  318F   	fcall	_ADC_GetConversion
  4257     0FE0  0020               	movlb	0	; select bank0
  4258     0FE1  0820               	movf	?_ADC_GetConversion,w
  4259     0FE2  00E7               	movwf	??_main
  4260     0FE3  0821               	movf	?_ADC_GetConversion+1,w
  4261     0FE4  00E8               	movwf	??_main+1
  4262     0FE5  3006               	movlw	6
  4263     0FE6                     u2415:
  4264     0FE6  36E8               	lsrf	??_main+1,f
  4265     0FE7  0CE7               	rrf	??_main,f
  4266     0FE8  0B89               	decfsz	9,f
  4267     0FE9  2FE6               	goto	u2415
  4268     0FEA  0867               	movf	??_main,w
  4269     0FEB  00E9               	movwf	_BAT_LEVEL
  4270     0FEC  0868               	movf	??_main+1,w
  4271     0FED  00EA               	movwf	_BAT_LEVEL+1
  4272                           
  4273                           ;main.c: 63:         PWM3_LoadDutyValue(BAT_LEVEL);
  4274     0FEE  086A               	movf	_BAT_LEVEL+1,w
  4275     0FEF  00A9               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4276     0FF0  0869               	movf	_BAT_LEVEL,w
  4277     0FF1  00A8               	movwf	PWM3_LoadDutyValue@dutyValue
  4278     0FF2  318E  26DA  318F   	fcall	_PWM3_LoadDutyValue
  4279                           
  4280                           ;main.c: 64:         PWM4_LoadDutyValue(BAT_LEVEL);
  4281     0FF5  0020               	movlb	0	; select bank0
  4282     0FF6  086A               	movf	_BAT_LEVEL+1,w
  4283     0FF7  00A9               	movwf	PWM4_LoadDutyValue@dutyValue+1
  4284     0FF8  0869               	movf	_BAT_LEVEL,w
  4285     0FF9  00A8               	movwf	PWM4_LoadDutyValue@dutyValue
  4286     0FFA  318E  26F2  318F   	fcall	_PWM4_LoadDutyValue
  4287     0FFD  2FDC               	goto	l846
  4288     0FFE  3180  284A         	ljmp	start
  4289     1000                     __end_of_main:
  4290                           
  4291                           	psect	text1
  4292     01E9                     __ptext1:	
  4293 ;; *************** function _SYSTEM_UPDATE *****************
  4294 ;; Defined at:
  4295 ;;		line 116 in file "main.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  z               2   69[BANK0 ] short 
  4300 ;;  y               2   67[BANK0 ] short 
  4301 ;;  x               2   65[BANK0 ] short 
  4302 ;;  az              2   63[BANK0 ] short 
  4303 ;;  ay              2   61[BANK0 ] short 
  4304 ;;  ax              2   59[BANK0 ] short 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;Total ram usage:       12 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 14
  4321 ;; This function calls:
  4322 ;;		_ADC_GetConversion
  4323 ;;		_ESC_Programming
  4324 ;;		_PWM3_LoadDutyValue
  4325 ;;		_PWM4_LoadDutyValue
  4326 ;;		_make16
  4327 ;;		_printf
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333     01E9                     _SYSTEM_UPDATE:	
  4334                           ;psect for function _SYSTEM_UPDATE
  4335                           
  4336     01E9                     l3479:	
  4337                           ;incstack = 0
  4338                           ; Regs used in _SYSTEM_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4339                           
  4340                           
  4341                           ;main.c: 117:     if(Flags.UART_Data){
  4342     01E9  0021               	movlb	1	; select bank1
  4343     01EA  0852               	movf	_Flags^(0+128),w
  4344     01EB  1903               	btfsc	3,2
  4345     01EC  29EE               	goto	u2181
  4346     01ED  29EF               	goto	u2180
  4347     01EE                     u2181:
  4348     01EE  2A86               	goto	l3507
  4349     01EF                     u2180:
  4350     01EF  2A69               	goto	l3503
  4351     01F0                     l3483:
  4352                           
  4353                           ;main.c: 120:                 PWM3_LoadDutyValue(make16(cmd[2],cmd[1]));
  4354     01F0  0856               	movf	(_cmd^(0+128)+1),w
  4355     01F1  0020               	movlb	0	; select bank0
  4356     01F2  00A0               	movwf	make16@Right
  4357     01F3  0021               	movlb	1	; select bank1
  4358     01F4  0857               	movf	(_cmd^(0+128)+2),w
  4359     01F5  318E  26B3  3181   	fcall	_make16
  4360     01F8  0020               	movlb	0	; select bank0
  4361     01F9  0821               	movf	?_make16+1,w
  4362     01FA  00A9               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4363     01FB  0820               	movf	?_make16,w
  4364     01FC  00A8               	movwf	PWM3_LoadDutyValue@dutyValue
  4365     01FD  318E  26DA  3181   	fcall	_PWM3_LoadDutyValue
  4366                           
  4367                           ;main.c: 121:                 break;
  4368     0200  2A83               	goto	l3505
  4369     0201                     l3485:
  4370                           
  4371                           ;main.c: 123:                 PWM4_LoadDutyValue(make16(cmd[2],cmd[1]));
  4372     0201  0856               	movf	(_cmd^(0+128)+1),w
  4373     0202  0020               	movlb	0	; select bank0
  4374     0203  00A0               	movwf	make16@Right
  4375     0204  0021               	movlb	1	; select bank1
  4376     0205  0857               	movf	(_cmd^(0+128)+2),w
  4377     0206  318E  26B3  3181   	fcall	_make16
  4378     0209  0020               	movlb	0	; select bank0
  4379     020A  0821               	movf	?_make16+1,w
  4380     020B  00A9               	movwf	PWM4_LoadDutyValue@dutyValue+1
  4381     020C  0820               	movf	?_make16,w
  4382     020D  00A8               	movwf	PWM4_LoadDutyValue@dutyValue
  4383     020E  318E  26F2  3181   	fcall	_PWM4_LoadDutyValue
  4384                           
  4385                           ;main.c: 124:                 break;
  4386     0211  2A83               	goto	l3505
  4387     0212                     l864:	
  4388                           ;main.c: 126:                 do { LATCbits.LATC4 = 1; } while(0);
  4389                           
  4390     0212  0022               	movlb	2	; select bank2
  4391     0213  160E               	bsf	14,4	;volatile
  4392     0214                     l3487:
  4393                           
  4394                           ;main.c: 127:     printf("ESC Enabled\r\n");
  4395     0214  3014               	movlw	low (STR_2| (0+32768))
  4396     0215  0020               	movlb	0	; select bank0
  4397     0216  00C4               	movwf	printf@fmt
  4398     0217  3091               	movlw	high (STR_2| (0+32768))
  4399     0218  00C5               	movwf	printf@fmt+1
  4400     0219  318E  2680  3181   	fcall	_printf
  4401                           
  4402                           ;main.c: 128:                 break;
  4403     021C  2A83               	goto	l3505
  4404     021D                     l867:	
  4405                           ;main.c: 130:                 do { LATCbits.LATC4 = 0; } while(0);
  4406                           
  4407     021D  0022               	movlb	2	; select bank2
  4408     021E  120E               	bcf	14,4	;volatile
  4409     021F                     l3489:
  4410                           
  4411                           ;main.c: 131:     printf("ESC Disabled\r\n");
  4412     021F  3005               	movlw	low (STR_3| (0+32768))
  4413     0220  0020               	movlb	0	; select bank0
  4414     0221  00C4               	movwf	printf@fmt
  4415     0222  3091               	movlw	high (STR_3| (0+32768))
  4416     0223  00C5               	movwf	printf@fmt+1
  4417     0224  318E  2680  3181   	fcall	_printf
  4418                           
  4419                           ;main.c: 132:                 break;
  4420     0227  2A83               	goto	l3505
  4421     0228                     l3491:
  4422                           
  4423                           ;main.c: 134:                 printf("ESC Programming Start\r\n");
  4424     0228  3052               	movlw	low (STR_4| (0+32768))
  4425     0229  0020               	movlb	0	; select bank0
  4426     022A  00C4               	movwf	printf@fmt
  4427     022B  3090               	movlw	high (STR_4| (0+32768))
  4428     022C  00C5               	movwf	printf@fmt+1
  4429     022D  318E  2680  3181   	fcall	_printf
  4430                           
  4431                           ;main.c: 135:     ESC_Programming(ESC_Setting);
  4432     0230  3048               	movlw	(low (_ESC_Setting| (0+256)))& (0+255)
  4433     0231  0020               	movlb	0	; select bank0
  4434     0232  00D3               	movwf	ESC_Programming@settings
  4435     0233  3183  2311  3181   	fcall	_ESC_Programming
  4436                           
  4437                           ;main.c: 136:     printf("ESC Programming Complete\r\n");
  4438     0236  301C               	movlw	low (STR_5| (0+32768))
  4439     0237  0020               	movlb	0	; select bank0
  4440     0238  00C4               	movwf	printf@fmt
  4441     0239  3090               	movlw	high (STR_5| (0+32768))
  4442     023A  00C5               	movwf	printf@fmt+1
  4443     023B  318E  2680  3181   	fcall	_printf
  4444                           
  4445                           ;main.c: 137:     break;
  4446     023E  2A83               	goto	l3505
  4447     023F                     l3493:
  4448                           
  4449                           ;main.c: 139:                 printf("%u",BAT_LEVEL);
  4450     023F  302A               	movlw	low (STR_6| (0+32768))
  4451     0240  0020               	movlb	0	; select bank0
  4452     0241  00C4               	movwf	printf@fmt
  4453     0242  3091               	movlw	high (STR_6| (0+32768))
  4454     0243  00C5               	movwf	printf@fmt+1
  4455     0244  086A               	movf	_BAT_LEVEL+1,w
  4456     0245  00C7               	movwf	?_printf+3
  4457     0246  0869               	movf	_BAT_LEVEL,w
  4458     0247  00C6               	movwf	?_printf+2
  4459     0248  318E  2680  3181   	fcall	_printf
  4460                           
  4461                           ;main.c: 140:                 break;
  4462     024B  2A83               	goto	l3505
  4463     024C                     l871:	
  4464                           ;main.c: 141:    case 'I':
  4465                           
  4466                           
  4467                           ;main.c: 142:     (INTCONbits.INTE = 1);
  4468     024C  160B               	bsf	11,4	;volatile
  4469     024D                     l3495:
  4470                           
  4471                           ;main.c: 143:     printf("IMU Stream Enabled\r\n");
  4472     024D  3080               	movlw	low (STR_7| (0+32768))
  4473     024E  0020               	movlb	0	; select bank0
  4474     024F  00C4               	movwf	printf@fmt
  4475     0250  3090               	movlw	high (STR_7| (0+32768))
  4476     0251  00C5               	movwf	printf@fmt+1
  4477     0252  318E  2680  3181   	fcall	_printf
  4478                           
  4479                           ;main.c: 144:     break;
  4480     0255  2A83               	goto	l3505
  4481     0256                     l872:	
  4482                           ;main.c: 145:    case 'i':
  4483                           
  4484                           
  4485                           ;main.c: 146:     (INTCONbits.INTE = 0);
  4486     0256  120B               	bcf	11,4	;volatile
  4487     0257                     l3497:
  4488                           
  4489                           ;main.c: 147:     printf("IMU Stream Disabled\r\n");
  4490     0257  306A               	movlw	low (STR_8| (0+32768))
  4491     0258  0020               	movlb	0	; select bank0
  4492     0259  00C4               	movwf	printf@fmt
  4493     025A  3090               	movlw	high (STR_8| (0+32768))
  4494     025B  00C5               	movwf	printf@fmt+1
  4495     025C  318E  2680  3181   	fcall	_printf
  4496                           
  4497                           ;main.c: 148:     break;
  4498     025F  2A83               	goto	l3505
  4499     0260                     l3499:
  4500                           
  4501                           ;main.c: 150:     printf("CMD not Recognized\r\n");
  4502     0260  3095               	movlw	low (STR_9| (0+32768))
  4503     0261  0020               	movlb	0	; select bank0
  4504     0262  00C4               	movwf	printf@fmt
  4505     0263  3090               	movlw	high (STR_9| (0+32768))
  4506     0264  00C5               	movwf	printf@fmt+1
  4507     0265  318E  2680  3181   	fcall	_printf
  4508                           
  4509                           ;main.c: 151:                 break;
  4510     0268  2A83               	goto	l3505
  4511     0269                     l3503:
  4512     0269  0855               	movf	_cmd^(0+128),w
  4513                           
  4514                           ; Switch size 1, requested type "simple"
  4515                           ; Number of cases is 8, Range of values is 66 to 105
  4516                           ; switch strategies available:
  4517                           ; Name         Instructions Cycles
  4518                           ; simple_byte           25    13 (average)
  4519                           ; direct_byte           89     9 (fixed)
  4520                           ; jumptable            263     9 (fixed)
  4521                           ;	Chosen strategy is simple_byte
  4522     026A  3A42               	xorlw	66	; case 66
  4523     026B  1903               	skipnz
  4524     026C  2A3F               	goto	l3493
  4525     026D  3A07               	xorlw	7	; case 69
  4526     026E  1903               	skipnz
  4527     026F  2A12               	goto	l864
  4528     0270  3A0C               	xorlw	12	; case 73
  4529     0271  1903               	skipnz
  4530     0272  2A4C               	goto	l871
  4531     0273  3A05               	xorlw	5	; case 76
  4532     0274  1903               	skipnz
  4533     0275  29F0               	goto	l3483
  4534     0276  3A1C               	xorlw	28	; case 80
  4535     0277  1903               	skipnz
  4536     0278  2A28               	goto	l3491
  4537     0279  3A02               	xorlw	2	; case 82
  4538     027A  1903               	skipnz
  4539     027B  2A01               	goto	l3485
  4540     027C  3A37               	xorlw	55	; case 101
  4541     027D  1903               	skipnz
  4542     027E  2A1D               	goto	l867
  4543     027F  3A0C               	xorlw	12	; case 105
  4544     0280  1903               	skipnz
  4545     0281  2A56               	goto	l872
  4546     0282  2A60               	goto	l3499
  4547     0283                     l3505:
  4548                           
  4549                           ;main.c: 153:         Flags.UART_Data = 0;
  4550     0283  0021               	movlb	1	; select bank1
  4551     0284  01D2               	clrf	_Flags^(0+128)
  4552                           
  4553                           ;main.c: 154:     }
  4554     0285  2B10               	goto	l878
  4555     0286                     l3507:
  4556     0286  0853               	movf	(_Flags^(0+128)+1),w
  4557     0287  1903               	btfsc	3,2
  4558     0288  2A8A               	goto	u2191
  4559     0289  2A8B               	goto	u2190
  4560     028A                     u2191:
  4561     028A  2B00               	goto	l3515
  4562     028B                     u2190:
  4563     028B                     l3509:
  4564                           
  4565                           ;main.c: 160:         int16_t ax = (int16_t) make16(IMU_Data.accel[0],IMU_Data.accel[1])
      +                          ;
  4566     028B  083F               	movf	(_IMU_Data^(0+128)+1),w
  4567     028C  0020               	movlb	0	; select bank0
  4568     028D  00A0               	movwf	make16@Right
  4569     028E  0021               	movlb	1	; select bank1
  4570     028F  083E               	movf	_IMU_Data^(0+128),w
  4571     0290  318E  26B3  3181   	fcall	_make16
  4572     0293  0020               	movlb	0	; select bank0
  4573     0294  0821               	movf	?_make16+1,w
  4574     0295  00DC               	movwf	SYSTEM_UPDATE@ax+1
  4575     0296  0820               	movf	?_make16,w
  4576     0297  00DB               	movwf	SYSTEM_UPDATE@ax
  4577                           
  4578                           ;main.c: 161:         int16_t ay = (int16_t) make16(IMU_Data.accel[2],IMU_Data.accel[3])
      +                          ;
  4579     0298  0021               	movlb	1	; select bank1
  4580     0299  0841               	movf	(_IMU_Data^(0+128)+3),w
  4581     029A  0020               	movlb	0	; select bank0
  4582     029B  00A0               	movwf	make16@Right
  4583     029C  0021               	movlb	1	; select bank1
  4584     029D  0840               	movf	(_IMU_Data^(0+128)+2),w
  4585     029E  318E  26B3  3181   	fcall	_make16
  4586     02A1  0020               	movlb	0	; select bank0
  4587     02A2  0821               	movf	?_make16+1,w
  4588     02A3  00DE               	movwf	SYSTEM_UPDATE@ay+1
  4589     02A4  0820               	movf	?_make16,w
  4590     02A5  00DD               	movwf	SYSTEM_UPDATE@ay
  4591                           
  4592                           ;main.c: 162:         int16_t az = (int16_t) make16(IMU_Data.accel[4],IMU_Data.accel[5])
      +                          ;
  4593     02A6  0021               	movlb	1	; select bank1
  4594     02A7  0843               	movf	(_IMU_Data^(0+128)+5),w
  4595     02A8  0020               	movlb	0	; select bank0
  4596     02A9  00A0               	movwf	make16@Right
  4597     02AA  0021               	movlb	1	; select bank1
  4598     02AB  0842               	movf	(_IMU_Data^(0+128)+4),w
  4599     02AC  318E  26B3  3181   	fcall	_make16
  4600     02AF  0020               	movlb	0	; select bank0
  4601     02B0  0821               	movf	?_make16+1,w
  4602     02B1  00E0               	movwf	SYSTEM_UPDATE@az+1
  4603     02B2  0820               	movf	?_make16,w
  4604     02B3  00DF               	movwf	SYSTEM_UPDATE@az
  4605                           
  4606                           ;main.c: 163:         int16_t x = (int16_t) make16(IMU_Data.gyro[0],IMU_Data.gyro[1]);
  4607     02B4  0021               	movlb	1	; select bank1
  4608     02B5  0845               	movf	(_IMU_Data^(0+128)+7),w
  4609     02B6  0020               	movlb	0	; select bank0
  4610     02B7  00A0               	movwf	make16@Right
  4611     02B8  0021               	movlb	1	; select bank1
  4612     02B9  0844               	movf	(_IMU_Data^(0+128)+6),w
  4613     02BA  318E  26B3  3181   	fcall	_make16
  4614     02BD  0020               	movlb	0	; select bank0
  4615     02BE  0821               	movf	?_make16+1,w
  4616     02BF  00E2               	movwf	SYSTEM_UPDATE@x+1
  4617     02C0  0820               	movf	?_make16,w
  4618     02C1  00E1               	movwf	SYSTEM_UPDATE@x
  4619                           
  4620                           ;main.c: 164:         int16_t y = (int16_t) make16(IMU_Data.gyro[2],IMU_Data.gyro[3]);
  4621     02C2  0021               	movlb	1	; select bank1
  4622     02C3  0847               	movf	(_IMU_Data^(0+128)+9),w
  4623     02C4  0020               	movlb	0	; select bank0
  4624     02C5  00A0               	movwf	make16@Right
  4625     02C6  0021               	movlb	1	; select bank1
  4626     02C7  0846               	movf	(_IMU_Data^(0+128)+8),w
  4627     02C8  318E  26B3  3181   	fcall	_make16
  4628     02CB  0020               	movlb	0	; select bank0
  4629     02CC  0821               	movf	?_make16+1,w
  4630     02CD  00E4               	movwf	SYSTEM_UPDATE@y+1
  4631     02CE  0820               	movf	?_make16,w
  4632     02CF  00E3               	movwf	SYSTEM_UPDATE@y
  4633                           
  4634                           ;main.c: 165:         int16_t z = (int16_t) make16(IMU_Data.gyro[4],IMU_Data.gyro[5]);
  4635     02D0  0021               	movlb	1	; select bank1
  4636     02D1  0849               	movf	(_IMU_Data^(0+128)+11),w
  4637     02D2  0020               	movlb	0	; select bank0
  4638     02D3  00A0               	movwf	make16@Right
  4639     02D4  0021               	movlb	1	; select bank1
  4640     02D5  0848               	movf	(_IMU_Data^(0+128)+10),w
  4641     02D6  318E  26B3  3181   	fcall	_make16
  4642     02D9  0020               	movlb	0	; select bank0
  4643     02DA  0821               	movf	?_make16+1,w
  4644     02DB  00E6               	movwf	SYSTEM_UPDATE@z+1
  4645     02DC  0820               	movf	?_make16,w
  4646     02DD  00E5               	movwf	SYSTEM_UPDATE@z
  4647     02DE                     l3511:
  4648                           
  4649                           ;main.c: 167:         printf("%d,%d,%d,%d,%d,%d",x,y,z,ax,ay,az);
  4650     02DE  30E3               	movlw	low (STR_10| (0+32768))
  4651     02DF  00C4               	movwf	printf@fmt
  4652     02E0  3090               	movlw	high (STR_10| (0+32768))
  4653     02E1  00C5               	movwf	printf@fmt+1
  4654     02E2  0862               	movf	SYSTEM_UPDATE@x+1,w
  4655     02E3  00C7               	movwf	?_printf+3
  4656     02E4  0861               	movf	SYSTEM_UPDATE@x,w
  4657     02E5  00C6               	movwf	?_printf+2
  4658     02E6  0864               	movf	SYSTEM_UPDATE@y+1,w
  4659     02E7  00C9               	movwf	?_printf+5
  4660     02E8  0863               	movf	SYSTEM_UPDATE@y,w
  4661     02E9  00C8               	movwf	?_printf+4
  4662     02EA  0866               	movf	SYSTEM_UPDATE@z+1,w
  4663     02EB  00CB               	movwf	?_printf+7
  4664     02EC  0865               	movf	SYSTEM_UPDATE@z,w
  4665     02ED  00CA               	movwf	?_printf+6
  4666     02EE  085C               	movf	SYSTEM_UPDATE@ax+1,w
  4667     02EF  00CD               	movwf	?_printf+9
  4668     02F0  085B               	movf	SYSTEM_UPDATE@ax,w
  4669     02F1  00CC               	movwf	?_printf+8
  4670     02F2  085E               	movf	SYSTEM_UPDATE@ay+1,w
  4671     02F3  00CF               	movwf	?_printf+11
  4672     02F4  085D               	movf	SYSTEM_UPDATE@ay,w
  4673     02F5  00CE               	movwf	?_printf+10
  4674     02F6  0860               	movf	SYSTEM_UPDATE@az+1,w
  4675     02F7  00D1               	movwf	?_printf+13
  4676     02F8  085F               	movf	SYSTEM_UPDATE@az,w
  4677     02F9  00D0               	movwf	?_printf+12
  4678     02FA  318E  2680  3181   	fcall	_printf
  4679     02FD                     l3513:
  4680                           
  4681                           ;main.c: 168:         Flags.IMU_Data = 0;
  4682     02FD  0021               	movlb	1	; select bank1
  4683     02FE  01D3               	clrf	(_Flags^(0+128)+1)
  4684                           
  4685                           ;main.c: 169:     }
  4686     02FF  2B10               	goto	l878
  4687     0300                     l3515:
  4688     0300  0854               	movf	(_Flags^(0+128)+2),w
  4689     0301  1903               	btfsc	3,2
  4690     0302  2B04               	goto	u2201
  4691     0303  2B05               	goto	u2200
  4692     0304                     u2201:
  4693     0304  2B10               	goto	l878
  4694     0305                     u2200:
  4695     0305                     l3517:
  4696                           
  4697                           ;main.c: 171:         BAT_LEVEL = ADC_GetConversion(BAT_SENSE);
  4698     0305  3002               	movlw	2
  4699     0306  318F  2795  3181   	fcall	_ADC_GetConversion
  4700     0309  0020               	movlb	0	; select bank0
  4701     030A  0821               	movf	?_ADC_GetConversion+1,w
  4702     030B  00EA               	movwf	_BAT_LEVEL+1
  4703     030C  0820               	movf	?_ADC_GetConversion,w
  4704     030D  00E9               	movwf	_BAT_LEVEL
  4705     030E                     l3519:
  4706                           
  4707                           ;main.c: 172:         Flags.BAT_Data = 0;
  4708     030E  0021               	movlb	1	; select bank1
  4709     030F  01D4               	clrf	(_Flags^(0+128)+2)
  4710     0310                     l878:
  4711     0310  0008               	return
  4712     0311                     __end_of_SYSTEM_UPDATE:
  4713                           
  4714                           	psect	text2
  4715     0EB3                     __ptext2:	
  4716 ;; *************** function _make16 *****************
  4717 ;; Defined at:
  4718 ;;		line 233 in file "main.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  Left            1    wreg     unsigned char 
  4721 ;;  Right           1    0[BANK0 ] unsigned char 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  Left            1    7[BANK0 ] unsigned char 
  4724 ;;  result          2    5[BANK0 ] unsigned short 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  2    0[BANK0 ] unsigned short 
  4727 ;; Registers used:
  4728 ;;		wreg
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4736 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;Total ram usage:        8 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 7
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_SYSTEM_UPDATE
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748     0EB3                     _make16:	
  4749                           ;psect for function _make16
  4750                           
  4751                           
  4752                           ;incstack = 0
  4753                           ; Regs used in _make16: [wreg]
  4754                           ;make16@Left stored from wreg
  4755     0EB3  0020               	movlb	0	; select bank0
  4756     0EB4  00A7               	movwf	make16@Left
  4757     0EB5                     l3327:
  4758                           
  4759                           ;main.c: 234:     uint16_t result = ((uint16_t) Left ) << 8;
  4760     0EB5  0827               	movf	make16@Left,w
  4761     0EB6  00A2               	movwf	??_make16
  4762     0EB7  01A3               	clrf	??_make16+1
  4763     0EB8  0822               	movf	??_make16,w
  4764     0EB9  00A3               	movwf	??_make16+1
  4765     0EBA  01A2               	clrf	??_make16
  4766     0EBB  0822               	movf	??_make16,w
  4767     0EBC  00A5               	movwf	make16@result
  4768     0EBD  0823               	movf	??_make16+1,w
  4769     0EBE  00A6               	movwf	make16@result+1
  4770                           
  4771                           ;main.c: 235:     return result | Right;
  4772     0EBF  0825               	movf	make16@result,w
  4773     0EC0  0420               	iorwf	make16@Right,w
  4774     0EC1  00A0               	movwf	?_make16
  4775     0EC2  0826               	movf	make16@result+1,w
  4776     0EC3  00A1               	movwf	?_make16+1
  4777     0EC4                     l906:
  4778     0EC4  0008               	return
  4779     0EC5                     __end_of_make16:
  4780                           
  4781                           	psect	text3
  4782     0311                     __ptext3:	
  4783 ;; *************** function _ESC_Programming *****************
  4784 ;; Defined at:
  4785 ;;		line 195 in file "main.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  settings        1   51[BANK0 ] PTR unsigned char 
  4788 ;;		 -> ESC_Setting(8), 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  c               2   56[BANK0 ] int 
  4791 ;;  c               2   54[BANK0 ] int 
  4792 ;;  i               1   58[BANK0 ] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4802 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;Total ram usage:        8 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 13
  4809 ;; This function calls:
  4810 ;;		_PWM3_LoadDutyValue
  4811 ;;		_PWM4_LoadDutyValue
  4812 ;;		_printf
  4813 ;; This function is called by:
  4814 ;;		_SYSTEM_UPDATE
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818     0311                     _ESC_Programming:	
  4819                           ;psect for function _ESC_Programming
  4820                           
  4821     0311                     l3331:	
  4822                           ;incstack = 0
  4823                           ; Regs used in _ESC_Programming: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4824                           
  4825                           
  4826                           ;main.c: 197:     printf("Reseting ESCs\r\n");
  4827     0311  30F5               	movlw	low (STR_11| (0+32768))
  4828     0312  0020               	movlb	0	; select bank0
  4829     0313  00C4               	movwf	printf@fmt
  4830     0314  3090               	movlw	high (STR_11| (0+32768))
  4831     0315  00C5               	movwf	printf@fmt+1
  4832     0316  318E  2680  3183   	fcall	_printf
  4833     0319                     l3333:
  4834     0319  0022               	movlb	2	; select bank2
  4835     031A  120E               	bcf	14,4	;volatile
  4836     031B                     l3335:
  4837                           
  4838                           ;main.c: 199:  _delay((unsigned long)((2000)*(16000000/4000.0)));
  4839     031B  3029               	movlw	41
  4840     031C  0020               	movlb	0	; select bank0
  4841     031D  00D5               	movwf	??_ESC_Programming+1
  4842     031E  3096               	movlw	150
  4843     031F  00D4               	movwf	??_ESC_Programming
  4844     0320  307F               	movlw	127
  4845     0321                     u2427:
  4846     0321  0B89               	decfsz	9,f
  4847     0322  2B21               	goto	u2427
  4848     0323  0BD4               	decfsz	??_ESC_Programming,f
  4849     0324  2B21               	goto	u2427
  4850     0325  0BD5               	decfsz	??_ESC_Programming+1,f
  4851     0326  2B21               	goto	u2427
  4852     0327                     l3337:
  4853                           
  4854                           ;main.c: 201:  PWM3_LoadDutyValue(0xFFFF);
  4855     0327  30FF               	movlw	255
  4856     0328  0020               	movlb	0	; select bank0
  4857     0329  00A8               	movwf	PWM3_LoadDutyValue@dutyValue
  4858     032A  30FF               	movlw	255
  4859     032B  00A9               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4860     032C  318E  26DA  3183   	fcall	_PWM3_LoadDutyValue
  4861     032F                     l3339:
  4862                           
  4863                           ;main.c: 202:  PWM4_LoadDutyValue(0xFFFF);
  4864     032F  30FF               	movlw	255
  4865     0330  0020               	movlb	0	; select bank0
  4866     0331  00A8               	movwf	PWM4_LoadDutyValue@dutyValue
  4867     0332  30FF               	movlw	255
  4868     0333  00A9               	movwf	PWM4_LoadDutyValue@dutyValue+1
  4869     0334  318E  26F2  3183   	fcall	_PWM4_LoadDutyValue
  4870     0337                     l3341:
  4871                           
  4872                           ;main.c: 203:  _delay((unsigned long)((100)*(16000000/4000.0)));
  4873     0337  3003               	movlw	3
  4874     0338  0020               	movlb	0	; select bank0
  4875     0339  00D5               	movwf	??_ESC_Programming+1
  4876     033A  3008               	movlw	8
  4877     033B  00D4               	movwf	??_ESC_Programming
  4878     033C  3077               	movlw	119
  4879     033D                     u2437:
  4880     033D  0B89               	decfsz	9,f
  4881     033E  2B3D               	goto	u2437
  4882     033F  0BD4               	decfsz	??_ESC_Programming,f
  4883     0340  2B3D               	goto	u2437
  4884     0341  0BD5               	decfsz	??_ESC_Programming+1,f
  4885     0342  2B3D               	goto	u2437
  4886                           
  4887                           ;main.c: 204:     printf("Powering on ESCs\r\n");
  4888     0343  30BE               	movlw	low (STR_12| (0+32768))
  4889     0344  0020               	movlb	0	; select bank0
  4890     0345  00C4               	movwf	printf@fmt
  4891     0346  3090               	movlw	high (STR_12| (0+32768))
  4892     0347  00C5               	movwf	printf@fmt+1
  4893     0348  318E  2680  3183   	fcall	_printf
  4894     034B                     l3343:
  4895     034B  0022               	movlb	2	; select bank2
  4896     034C  160E               	bsf	14,4	;volatile
  4897     034D                     l3345:
  4898                           
  4899                           ;main.c: 207:  _delay((unsigned long)((2000)*(16000000/4000.0)));
  4900     034D  3029               	movlw	41
  4901     034E  0020               	movlb	0	; select bank0
  4902     034F  00D5               	movwf	??_ESC_Programming+1
  4903     0350  3096               	movlw	150
  4904     0351  00D4               	movwf	??_ESC_Programming
  4905     0352  307F               	movlw	127
  4906     0353                     u2447:
  4907     0353  0B89               	decfsz	9,f
  4908     0354  2B53               	goto	u2447
  4909     0355  0BD4               	decfsz	??_ESC_Programming,f
  4910     0356  2B53               	goto	u2447
  4911     0357  0BD5               	decfsz	??_ESC_Programming+1,f
  4912     0358  2B53               	goto	u2447
  4913     0359                     l3347:
  4914                           
  4915                           ;main.c: 209:     printf("Entering Programming Mode\r\n");
  4916     0359  3000               	movlw	low (STR_13| (0+32768))
  4917     035A  0020               	movlb	0	; select bank0
  4918     035B  00C4               	movwf	printf@fmt
  4919     035C  3090               	movlw	high (STR_13| (0+32768))
  4920     035D  00C5               	movwf	printf@fmt+1
  4921     035E  318E  2680  3183   	fcall	_printf
  4922                           
  4923                           ;main.c: 210:  _delay((unsigned long)((2000)*(16000000/4000.0)));
  4924     0361  3029               	movlw	41
  4925     0362  0020               	movlb	0	; select bank0
  4926     0363  00D5               	movwf	??_ESC_Programming+1
  4927     0364  3096               	movlw	150
  4928     0365  00D4               	movwf	??_ESC_Programming
  4929     0366  307F               	movlw	127
  4930     0367                     u2457:
  4931     0367  0B89               	decfsz	9,f
  4932     0368  2B67               	goto	u2457
  4933     0369  0BD4               	decfsz	??_ESC_Programming,f
  4934     036A  2B67               	goto	u2457
  4935     036B  0BD5               	decfsz	??_ESC_Programming+1,f
  4936     036C  2B67               	goto	u2457
  4937     036D                     l3349:
  4938                           
  4939                           ;main.c: 212:  for (uint8_t i = 0; i < 8;i++){
  4940     036D  0020               	movlb	0	; select bank0
  4941     036E  01DA               	clrf	ESC_Programming@i
  4942     036F                     l3355:
  4943                           
  4944                           ;main.c: 213:         printf("Programming Parameter %u\r\n",i);
  4945     036F  3037               	movlw	low (STR_14| (0+32768))
  4946     0370  00C4               	movwf	printf@fmt
  4947     0371  3090               	movlw	high (STR_14| (0+32768))
  4948     0372  00C5               	movwf	printf@fmt+1
  4949     0373  085A               	movf	ESC_Programming@i,w
  4950     0374  00D4               	movwf	??_ESC_Programming
  4951     0375  01D5               	clrf	??_ESC_Programming+1
  4952     0376  0854               	movf	??_ESC_Programming,w
  4953     0377  00C6               	movwf	?_printf+2
  4954     0378  0855               	movf	??_ESC_Programming+1,w
  4955     0379  00C7               	movwf	?_printf+3
  4956     037A  318E  2680  3183   	fcall	_printf
  4957     037D                     l3357:
  4958                           
  4959                           ;main.c: 215:         for (int c=0;c<i;c++)
  4960     037D  0020               	movlb	0	; select bank0
  4961     037E  01D6               	clrf	ESC_Programming@c
  4962     037F  01D7               	clrf	ESC_Programming@c+1
  4963     0380  2B93               	goto	l897
  4964     0381                     l3359:
  4965                           
  4966                           ;main.c: 216:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  4967     0381  3015               	movlw	21
  4968     0382  0020               	movlb	0	; select bank0
  4969     0383  00D5               	movwf	??_ESC_Programming+1
  4970     0384  304B               	movlw	75
  4971     0385  00D4               	movwf	??_ESC_Programming
  4972     0386  30BE               	movlw	190
  4973     0387                     u2467:
  4974     0387  0B89               	decfsz	9,f
  4975     0388  2B87               	goto	u2467
  4976     0389  0BD4               	decfsz	??_ESC_Programming,f
  4977     038A  2B87               	goto	u2467
  4978     038B  0BD5               	decfsz	??_ESC_Programming+1,f
  4979     038C  2B87               	goto	u2467
  4980     038D  0000               	nop
  4981     038E  3001               	movlw	1
  4982     038F  0020               	movlb	0	; select bank0
  4983     0390  07D6               	addwf	ESC_Programming@c,f
  4984     0391  3000               	movlw	0
  4985     0392  3DD7               	addwfc	ESC_Programming@c+1,f
  4986     0393                     l897:
  4987     0393  0857               	movf	ESC_Programming@c+1,w
  4988     0394  3A80               	xorlw	128
  4989     0395  00D4               	movwf	??_ESC_Programming
  4990     0396  3080               	movlw	128
  4991     0397  0254               	subwf	??_ESC_Programming,w
  4992     0398  1D03               	skipz
  4993     0399  2B9C               	goto	u2055
  4994     039A  085A               	movf	ESC_Programming@i,w
  4995     039B  0256               	subwf	ESC_Programming@c,w
  4996     039C                     u2055:
  4997     039C  1C03               	skipc
  4998     039D  2B9F               	goto	u2051
  4999     039E  2BA0               	goto	u2050
  5000     039F                     u2051:
  5001     039F  2B81               	goto	l3359
  5002     03A0                     u2050:
  5003     03A0                     l3361:
  5004                           
  5005                           ;main.c: 217:   PWM3_LoadDutyValue(0x0000);
  5006     03A0  3000               	movlw	0
  5007     03A1  0020               	movlb	0	; select bank0
  5008     03A2  00A8               	movwf	PWM3_LoadDutyValue@dutyValue
  5009     03A3  00A9               	movwf	PWM3_LoadDutyValue@dutyValue+1
  5010     03A4  318E  26DA  3183   	fcall	_PWM3_LoadDutyValue
  5011                           
  5012                           ;main.c: 218:   PWM4_LoadDutyValue(0x0000);
  5013     03A7  3000               	movlw	0
  5014     03A8  0020               	movlb	0	; select bank0
  5015     03A9  00A8               	movwf	PWM4_LoadDutyValue@dutyValue
  5016     03AA  00A9               	movwf	PWM4_LoadDutyValue@dutyValue+1
  5017     03AB  318E  26F2  3183   	fcall	_PWM4_LoadDutyValue
  5018     03AE                     l3363:
  5019                           
  5020                           ;main.c: 220:         for (int c=0;c<settings[i];c++)
  5021     03AE  0020               	movlb	0	; select bank0
  5022     03AF  01D8               	clrf	ESC_Programming@c_1783
  5023     03B0  01D9               	clrf	ESC_Programming@c_1783+1
  5024     03B1  2BC4               	goto	l3367
  5025     03B2                     l3365:
  5026                           
  5027                           ;main.c: 221:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  5028     03B2  3015               	movlw	21
  5029     03B3  0020               	movlb	0	; select bank0
  5030     03B4  00D5               	movwf	??_ESC_Programming+1
  5031     03B5  304B               	movlw	75
  5032     03B6  00D4               	movwf	??_ESC_Programming
  5033     03B7  30BE               	movlw	190
  5034     03B8                     u2477:
  5035     03B8  0B89               	decfsz	9,f
  5036     03B9  2BB8               	goto	u2477
  5037     03BA  0BD4               	decfsz	??_ESC_Programming,f
  5038     03BB  2BB8               	goto	u2477
  5039     03BC  0BD5               	decfsz	??_ESC_Programming+1,f
  5040     03BD  2BB8               	goto	u2477
  5041     03BE  0000               	nop
  5042     03BF  3001               	movlw	1
  5043     03C0  0020               	movlb	0	; select bank0
  5044     03C1  07D8               	addwf	ESC_Programming@c_1783,f
  5045     03C2  3000               	movlw	0
  5046     03C3  3DD9               	addwfc	ESC_Programming@c_1783+1,f
  5047     03C4                     l3367:
  5048     03C4  0853               	movf	ESC_Programming@settings,w
  5049     03C5  075A               	addwf	ESC_Programming@i,w
  5050     03C6  0086               	movwf	6
  5051     03C7  3001               	movlw	1	; select bank2/3
  5052     03C8  0087               	movwf	7
  5053     03C9  0859               	movf	ESC_Programming@c_1783+1,w
  5054     03CA  3A80               	xorlw	128
  5055     03CB  00D4               	movwf	??_ESC_Programming
  5056     03CC  3080               	movlw	128
  5057     03CD  0254               	subwf	??_ESC_Programming,w
  5058     03CE  1D03               	skipz
  5059     03CF  2BD2               	goto	u2065
  5060     03D0  0801               	movf	1,w
  5061     03D1  0258               	subwf	ESC_Programming@c_1783,w
  5062     03D2                     u2065:
  5063     03D2  1C03               	skipc
  5064     03D3  2BD5               	goto	u2061
  5065     03D4  2BD6               	goto	u2060
  5066     03D5                     u2061:
  5067     03D5  2BB2               	goto	l3365
  5068     03D6                     u2060:
  5069     03D6                     l3369:
  5070                           
  5071                           ;main.c: 222:   PWM3_LoadDutyValue(0xFFFF);
  5072     03D6  30FF               	movlw	255
  5073     03D7  0020               	movlb	0	; select bank0
  5074     03D8  00A8               	movwf	PWM3_LoadDutyValue@dutyValue
  5075     03D9  30FF               	movlw	255
  5076     03DA  00A9               	movwf	PWM3_LoadDutyValue@dutyValue+1
  5077     03DB  318E  26DA  3183   	fcall	_PWM3_LoadDutyValue
  5078                           
  5079                           ;main.c: 223:   PWM4_LoadDutyValue(0xFFFF);
  5080     03DE  30FF               	movlw	255
  5081     03DF  0020               	movlb	0	; select bank0
  5082     03E0  00A8               	movwf	PWM4_LoadDutyValue@dutyValue
  5083     03E1  30FF               	movlw	255
  5084     03E2  00A9               	movwf	PWM4_LoadDutyValue@dutyValue+1
  5085     03E3  318E  26F2  3183   	fcall	_PWM4_LoadDutyValue
  5086     03E6                     l3371:
  5087                           
  5088                           ;main.c: 224:  }
  5089     03E6  3001               	movlw	1
  5090     03E7  0020               	movlb	0	; select bank0
  5091     03E8  07DA               	addwf	ESC_Programming@i,f
  5092     03E9                     l3373:
  5093     03E9  3008               	movlw	8
  5094     03EA  025A               	subwf	ESC_Programming@i,w
  5095     03EB  1C03               	skipc
  5096     03EC  2BEE               	goto	u2071
  5097     03ED  2BEF               	goto	u2070
  5098     03EE                     u2071:
  5099     03EE  2B6F               	goto	l3355
  5100     03EF                     u2070:
  5101     03EF                     l3375:
  5102                           
  5103                           ;main.c: 226:  _delay((unsigned long)((1000)*(16000000/4000.0)));
  5104     03EF  3015               	movlw	21
  5105     03F0  0020               	movlb	0	; select bank0
  5106     03F1  00D5               	movwf	??_ESC_Programming+1
  5107     03F2  304B               	movlw	75
  5108     03F3  00D4               	movwf	??_ESC_Programming
  5109     03F4  30BE               	movlw	190
  5110     03F5                     u2487:
  5111     03F5  0B89               	decfsz	9,f
  5112     03F6  2BF5               	goto	u2487
  5113     03F7  0BD4               	decfsz	??_ESC_Programming,f
  5114     03F8  2BF5               	goto	u2487
  5115     03F9  0BD5               	decfsz	??_ESC_Programming+1,f
  5116     03FA  2BF5               	goto	u2487
  5117     03FB  0000               	nop
  5118     03FC                     l3377:
  5119                           
  5120                           ;main.c: 227:  PWM3_LoadDutyValue(0x0000);
  5121     03FC  3000               	movlw	0
  5122     03FD  0020               	movlb	0	; select bank0
  5123     03FE  00A8               	movwf	PWM3_LoadDutyValue@dutyValue
  5124     03FF  00A9               	movwf	PWM3_LoadDutyValue@dutyValue+1
  5125     0400  318E  26DA  3183   	fcall	_PWM3_LoadDutyValue
  5126     0403                     l3379:
  5127                           
  5128                           ;main.c: 228:  PWM4_LoadDutyValue(0x0000);
  5129     0403  3000               	movlw	0
  5130     0404  0020               	movlb	0	; select bank0
  5131     0405  00A8               	movwf	PWM4_LoadDutyValue@dutyValue
  5132     0406  00A9               	movwf	PWM4_LoadDutyValue@dutyValue+1
  5133     0407  318E  26F2  3183   	fcall	_PWM4_LoadDutyValue
  5134                           
  5135                           ;main.c: 229:  _delay((unsigned long)((2000)*(16000000/4000.0)));
  5136     040A  3029               	movlw	41
  5137     040B  0020               	movlb	0	; select bank0
  5138     040C  00D5               	movwf	??_ESC_Programming+1
  5139     040D  3096               	movlw	150
  5140     040E  00D4               	movwf	??_ESC_Programming
  5141     040F  307F               	movlw	127
  5142     0410                     u2497:
  5143     0410  0B89               	decfsz	9,f
  5144     0411  2C10               	goto	u2497
  5145     0412  0BD4               	decfsz	??_ESC_Programming,f
  5146     0413  2C10               	goto	u2497
  5147     0414  0BD5               	decfsz	??_ESC_Programming+1,f
  5148     0415  2C10               	goto	u2497
  5149     0416                     l903:
  5150     0416  0008               	return
  5151     0417                     __end_of_ESC_Programming:
  5152                           
  5153                           	psect	text4
  5154     0EF2                     __ptext4:	
  5155 ;; *************** function _PWM4_LoadDutyValue *****************
  5156 ;; Defined at:
  5157 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm4.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  dutyValue       2    8[BANK0 ] unsigned short 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;Total ram usage:        4 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; Hardware stack levels required when called: 7
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_main
  5182 ;;		_SYSTEM_UPDATE
  5183 ;;		_ESC_Programming
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187     0EF2                     _PWM4_LoadDutyValue:	
  5188                           ;psect for function _PWM4_LoadDutyValue
  5189                           
  5190     0EF2                     l3063:	
  5191                           ;incstack = 0
  5192                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  5193                           
  5194                           
  5195                           ;mcc_generated_files/pwm/src/pwm4.c: 63:  void PWM4_LoadDutyValue(uint16_t dutyValue);mc
      +                          c_generated_files/pwm/src/pwm4.c: 64:  {;mcc_generated_files/pwm/src/pwm4.c: 66:      PW
      +                          M4DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
  5196     0EF2  0020               	movlb	0	; select bank0
  5197     0EF3  0829               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  5198     0EF4  00AB               	movwf	??_PWM4_LoadDutyValue+1
  5199     0EF5  0828               	movf	PWM4_LoadDutyValue@dutyValue,w
  5200     0EF6  00AA               	movwf	??_PWM4_LoadDutyValue
  5201     0EF7  36AB               	lsrf	??_PWM4_LoadDutyValue+1,f
  5202     0EF8  0CAA               	rrf	??_PWM4_LoadDutyValue,f
  5203     0EF9  36AB               	lsrf	??_PWM4_LoadDutyValue+1,f
  5204     0EFA  0CAA               	rrf	??_PWM4_LoadDutyValue,f
  5205     0EFB  082A               	movf	??_PWM4_LoadDutyValue,w
  5206     0EFC  002C               	movlb	12	; select bank12
  5207     0EFD  009B               	movwf	27	;volatile
  5208                           
  5209                           ;mcc_generated_files/pwm/src/pwm4.c: 69:      PWM4DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
  5210     0EFE  0020               	movlb	0	; select bank0
  5211     0EFF  0828               	movf	PWM4_LoadDutyValue@dutyValue,w
  5212     0F00  3903               	andlw	3
  5213     0F01  00AA               	movwf	??_PWM4_LoadDutyValue
  5214     0F02  3006               	movlw	6
  5215     0F03                     u1855:
  5216     0F03  35AA               	lslf	??_PWM4_LoadDutyValue,f
  5217     0F04  0B89               	decfsz	9,f
  5218     0F05  2F03               	goto	u1855
  5219     0F06  082A               	movf	??_PWM4_LoadDutyValue,w
  5220     0F07  002C               	movlb	12	; select bank12
  5221     0F08  009A               	movwf	26	;volatile
  5222     0F09                     l330:
  5223     0F09  0008               	return
  5224     0F0A                     __end_of_PWM4_LoadDutyValue:
  5225                           
  5226                           	psect	text5
  5227     0EDA                     __ptext5:	
  5228 ;; *************** function _PWM3_LoadDutyValue *****************
  5229 ;; Defined at:
  5230 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm3.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  dutyValue       2    8[BANK0 ] unsigned short 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1    wreg      void 
  5237 ;; Registers used:
  5238 ;;		wreg, status,2, status,0
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5247 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;Total ram usage:        4 bytes
  5249 ;; Hardware stack levels used: 1
  5250 ;; Hardware stack levels required when called: 7
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_main
  5255 ;;		_SYSTEM_UPDATE
  5256 ;;		_ESC_Programming
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260     0EDA                     _PWM3_LoadDutyValue:	
  5261                           ;psect for function _PWM3_LoadDutyValue
  5262                           
  5263     0EDA                     l3061:	
  5264                           ;incstack = 0
  5265                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5266                           
  5267                           
  5268                           ;mcc_generated_files/pwm/src/pwm3.c: 63:  void PWM3_LoadDutyValue(uint16_t dutyValue);mc
      +                          c_generated_files/pwm/src/pwm3.c: 64:  {;mcc_generated_files/pwm/src/pwm3.c: 66:      PW
      +                          M3DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
  5269     0EDA  0020               	movlb	0	; select bank0
  5270     0EDB  0829               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5271     0EDC  00AB               	movwf	??_PWM3_LoadDutyValue+1
  5272     0EDD  0828               	movf	PWM3_LoadDutyValue@dutyValue,w
  5273     0EDE  00AA               	movwf	??_PWM3_LoadDutyValue
  5274     0EDF  36AB               	lsrf	??_PWM3_LoadDutyValue+1,f
  5275     0EE0  0CAA               	rrf	??_PWM3_LoadDutyValue,f
  5276     0EE1  36AB               	lsrf	??_PWM3_LoadDutyValue+1,f
  5277     0EE2  0CAA               	rrf	??_PWM3_LoadDutyValue,f
  5278     0EE3  082A               	movf	??_PWM3_LoadDutyValue,w
  5279     0EE4  002C               	movlb	12	; select bank12
  5280     0EE5  0098               	movwf	24	;volatile
  5281                           
  5282                           ;mcc_generated_files/pwm/src/pwm3.c: 69:      PWM3DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
  5283     0EE6  0020               	movlb	0	; select bank0
  5284     0EE7  0828               	movf	PWM3_LoadDutyValue@dutyValue,w
  5285     0EE8  3903               	andlw	3
  5286     0EE9  00AA               	movwf	??_PWM3_LoadDutyValue
  5287     0EEA  3006               	movlw	6
  5288     0EEB                     u1845:
  5289     0EEB  35AA               	lslf	??_PWM3_LoadDutyValue,f
  5290     0EEC  0B89               	decfsz	9,f
  5291     0EED  2EEB               	goto	u1845
  5292     0EEE  082A               	movf	??_PWM3_LoadDutyValue,w
  5293     0EEF  002C               	movlb	12	; select bank12
  5294     0EF0  0097               	movwf	23	;volatile
  5295     0EF1                     l316:
  5296     0EF1  0008               	return
  5297     0EF2                     __end_of_PWM3_LoadDutyValue:
  5298                           
  5299                           	psect	text6
  5300     0F95                     __ptext6:	
  5301 ;; *************** function _ADC_GetConversion *****************
  5302 ;; Defined at:
  5303 ;;		line 98 in file "mcc_generated_files/adc/src/adc.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  channel         1    wreg     enum E4170
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  channel         1    3[BANK0 ] enum E4170
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  2    0[BANK0 ] unsigned short 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;Total ram usage:        4 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 7
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_main
  5328 ;;		_SYSTEM_UPDATE
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332     0F95                     _ADC_GetConversion:	
  5333                           ;psect for function _ADC_GetConversion
  5334                           
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5338                           ;ADC_GetConversion@channel stored from wreg
  5339     0F95  0020               	movlb	0	; select bank0
  5340     0F96  00A3               	movwf	ADC_GetConversion@channel
  5341     0F97                     l3149:
  5342                           
  5343                           ;mcc_generated_files/adc/src/adc.c: 98: adc_result_t ADC_GetConversion(adc_channel_t cha
      +                          nnel);mcc_generated_files/adc/src/adc.c: 99: {;mcc_generated_files/adc/src/adc.c: 101:  
      +                             ADCON0bits.CHS = channel;
  5344     0F97  0823               	movf	ADC_GetConversion@channel,w
  5345     0F98  00A2               	movwf	??_ADC_GetConversion
  5346     0F99  0DA2               	rlf	??_ADC_GetConversion,f
  5347     0F9A  0DA2               	rlf	??_ADC_GetConversion,f
  5348     0F9B  0021               	movlb	1	; select bank1
  5349     0F9C  081D               	movf	29,w	;volatile
  5350     0F9D  0020               	movlb	0	; select bank0
  5351     0F9E  0622               	xorwf	??_ADC_GetConversion,w
  5352     0F9F  3983               	andlw	-125
  5353     0FA0  0622               	xorwf	??_ADC_GetConversion,w
  5354     0FA1  0021               	movlb	1	; select bank1
  5355     0FA2  009D               	movwf	29	;volatile
  5356     0FA3                     l3151:
  5357                           
  5358                           ;mcc_generated_files/adc/src/adc.c: 104:     ADCON0bits.ADON = 1;
  5359     0FA3  141D               	bsf	29,0	;volatile
  5360     0FA4                     l3153:
  5361                           
  5362                           ;mcc_generated_files/adc/src/adc.c: 107:     _delay((unsigned long)((5)*(16000000/400000
      +                          0.0)));
  5363     0FA4  3006               	movlw	6
  5364     0FA5                     u2507:
  5365     0FA5  0B89               	decfsz	9,f
  5366     0FA6  2FA5               	goto	u2507
  5367     0FA7  3200               	nop2
  5368     0FA8                     l3155:
  5369                           
  5370                           ;mcc_generated_files/adc/src/adc.c: 110:     ADCON0bits.GO_nDONE = 1;
  5371     0FA8  0021               	movlb	1	; select bank1
  5372     0FA9  149D               	bsf	29,1	;volatile
  5373     0FAA                     l34:	
  5374                           ;mcc_generated_files/adc/src/adc.c: 114:     {;mcc_generated_files/adc/src/adc.c: 115:  
      +                             }
  5375                           
  5376                           
  5377                           ;mcc_generated_files/adc/src/adc.c: 113:     while (ADCON0bits.GO_nDONE)
  5378     0FAA  189D               	btfsc	29,1	;volatile
  5379     0FAB  2FAD               	goto	u1981
  5380     0FAC  2FAE               	goto	u1980
  5381     0FAD                     u1981:
  5382     0FAD  2FAA               	goto	l34
  5383     0FAE                     u1980:
  5384     0FAE                     l3157:
  5385                           
  5386                           ;mcc_generated_files/adc/src/adc.c: 118:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
  5387     0FAE  081C               	movf	28,w	;volatile
  5388     0FAF  0020               	movlb	0	; select bank0
  5389     0FB0  00A1               	movwf	?_ADC_GetConversion+1
  5390     0FB1  0021               	movlb	1	; select bank1
  5391     0FB2  081B               	movf	27,w	;volatile
  5392     0FB3  0020               	movlb	0	; select bank0
  5393     0FB4  00A0               	movwf	?_ADC_GetConversion
  5394     0FB5                     l37:
  5395     0FB5  0008               	return
  5396     0FB6                     __end_of_ADC_GetConversion:
  5397                           
  5398                           	psect	text7
  5399     0741                     __ptext7:	
  5400 ;; *************** function _SYSTEM_STARTUP *****************
  5401 ;; Defined at:
  5402 ;;		line 82 in file "main.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;		None
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;Total ram usage:        2 bytes
  5421 ;; Hardware stack levels used: 1
  5422 ;; Hardware stack levels required when called: 13
  5423 ;; This function calls:
  5424 ;;		_EUSART_Enable
  5425 ;;		_EUSART_ReceiveEnable
  5426 ;;		_EUSART_ReceiveInterruptEnable
  5427 ;;		_EUSART_RxCompleteCallbackRegister
  5428 ;;		_EUSART_TransmitEnable
  5429 ;;		_EUSART_TransmitInterruptEnable
  5430 ;;		_printf
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436     0741                     _SYSTEM_STARTUP:	
  5437                           ;psect for function _SYSTEM_STARTUP
  5438                           
  5439     0741                     l3459:	
  5440                           ;incstack = 0
  5441                           ; Regs used in _SYSTEM_STARTUP: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5442                           
  5443                           
  5444                           ;main.c: 84:     (INTCONbits.GIE = 0);
  5445     0741  138B               	bcf	11,7	;volatile
  5446                           
  5447                           ;main.c: 85:     (INTCONbits.PEIE = 0);
  5448     0742  130B               	bcf	11,6	;volatile
  5449     0743                     l3461:
  5450                           
  5451                           ;main.c: 88:     EUSART_Enable();
  5452     0743  318D  2569  3187   	fcall	_EUSART_Enable
  5453     0746                     l3463:
  5454                           
  5455                           ;main.c: 89:  EUSART_RxCompleteCallbackRegister(APC220_Receiver_Interrupt);
  5456     0746  30CF               	movlw	low _APC220_Receiver_Interrupt
  5457     0747  0020               	movlb	0	; select bank0
  5458     0748  00A0               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler
  5459     0749  3007               	movlw	high _APC220_Receiver_Interrupt
  5460     074A  00A1               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler+1
  5461     074B  318E  2671  3187   	fcall	_EUSART_RxCompleteCallbackRegister
  5462     074E                     l3465:
  5463                           
  5464                           ;main.c: 90:  EUSART_ReceiveInterruptEnable();
  5465     074E  318D  256F  3187   	fcall	_EUSART_ReceiveInterruptEnable
  5466     0751                     l3467:
  5467                           
  5468                           ;main.c: 91:  EUSART_ReceiveEnable();
  5469     0751  318D  256C  3187   	fcall	_EUSART_ReceiveEnable
  5470     0754                     l3469:
  5471                           
  5472                           ;main.c: 93:     EUSART_TransmitInterruptEnable();
  5473     0754  318D  2575  3187   	fcall	_EUSART_TransmitInterruptEnable
  5474     0757                     l3471:
  5475                           
  5476                           ;main.c: 94:  EUSART_TransmitEnable();
  5477     0757  318D  2572  3187   	fcall	_EUSART_TransmitEnable
  5478     075A                     l3473:
  5479                           
  5480                           ;main.c: 107:     (INTCONbits.GIE = 1);
  5481     075A  178B               	bsf	11,7	;volatile
  5482     075B                     l3475:
  5483                           
  5484                           ;main.c: 108:     (INTCONbits.PEIE = 1);
  5485     075B  170B               	bsf	11,6	;volatile
  5486                           
  5487                           ;main.c: 111:  _delay((unsigned long)((1000)*(16000000/4000.0)));
  5488     075C  3015               	movlw	21
  5489     075D  0020               	movlb	0	; select bank0
  5490     075E  00D4               	movwf	??_SYSTEM_STARTUP+1
  5491     075F  304B               	movlw	75
  5492     0760  00D3               	movwf	??_SYSTEM_STARTUP
  5493     0761  30BE               	movlw	190
  5494     0762                     u2517:
  5495     0762  0B89               	decfsz	9,f
  5496     0763  2F62               	goto	u2517
  5497     0764  0BD3               	decfsz	??_SYSTEM_STARTUP,f
  5498     0765  2F62               	goto	u2517
  5499     0766  0BD4               	decfsz	??_SYSTEM_STARTUP+1,f
  5500     0767  2F62               	goto	u2517
  5501     0768  0000               	nop
  5502     0769                     l3477:
  5503                           
  5504                           ;main.c: 112:  printf("Ready\r\n");
  5505     0769  3022               	movlw	low (STR_1| (0+32768))
  5506     076A  0020               	movlb	0	; select bank0
  5507     076B  00C4               	movwf	printf@fmt
  5508     076C  3091               	movlw	high (STR_1| (0+32768))
  5509     076D  00C5               	movwf	printf@fmt+1
  5510     076E  318E  2680  3187   	fcall	_printf
  5511     0771                     l855:
  5512     0771  0008               	return
  5513     0772                     __end_of_SYSTEM_STARTUP:
  5514                           
  5515                           	psect	text8
  5516     0E80                     __ptext8:	
  5517 ;; *************** function _printf *****************
  5518 ;; Defined at:
  5519 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  5522 ;;		 -> STR_14(27), STR_13(28), STR_12(19), STR_11(16), 
  5523 ;;		 -> STR_10(18), STR_9(21), STR_8(22), STR_7(21), 
  5524 ;;		 -> STR_6(3), STR_5(27), STR_4(24), STR_3(15), 
  5525 ;;		 -> STR_2(14), STR_1(8), 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  ret             2    0        int 
  5528 ;;  ap              1   50[BANK0 ] PTR void [1]
  5529 ;;		 -> ?_printf(2), 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  2   36[BANK0 ] int 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5539 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;Total ram usage:       15 bytes
  5544 ;; Hardware stack levels used: 1
  5545 ;; Hardware stack levels required when called: 12
  5546 ;; This function calls:
  5547 ;;		_vfprintf
  5548 ;; This function is called by:
  5549 ;;		_SYSTEM_STARTUP
  5550 ;;		_SYSTEM_UPDATE
  5551 ;;		_ESC_Programming
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555     0E80                     _printf:	
  5556                           ;psect for function _printf
  5557                           
  5558     0E80                     l3097:	
  5559                           ;incstack = 0
  5560                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5561                           
  5562     0E80  3046               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5563     0E81  0020               	movlb	0	; select bank0
  5564     0E82  00D2               	movwf	printf@ap
  5565     0E83                     l3099:
  5566     0E83  3000               	movlw	0
  5567     0E84  00BC               	movwf	vfprintf@fp
  5568     0E85  00BD               	movwf	vfprintf@fp+1
  5569     0E86  0845               	movf	printf@fmt+1,w
  5570     0E87  00BF               	movwf	vfprintf@fmt+1
  5571     0E88  0844               	movf	printf@fmt,w
  5572     0E89  00BE               	movwf	vfprintf@fmt
  5573     0E8A  3052               	movlw	(low (printf@ap| 0))& (0+255)
  5574     0E8B  00C0               	movwf	vfprintf@ap
  5575     0E8C  318F  2777  318E   	fcall	_vfprintf
  5576     0E8F                     l1437:
  5577     0E8F  0008               	return
  5578     0E90                     __end_of_printf:
  5579                           
  5580                           	psect	text9
  5581     0F77                     __ptext9:	
  5582 ;; *************** function _vfprintf *****************
  5583 ;; Defined at:
  5584 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  5587 ;;		 -> NULL(0), 
  5588 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  5589 ;;		 -> STR_14(27), STR_13(28), STR_12(19), STR_11(16), 
  5590 ;;		 -> STR_10(18), STR_9(21), STR_8(22), STR_7(21), 
  5591 ;;		 -> STR_6(3), STR_5(27), STR_4(24), STR_3(15), 
  5592 ;;		 -> STR_2(14), STR_1(8), 
  5593 ;;  ap              1   32[BANK0 ] PTR PTR void 
  5594 ;;		 -> printf@ap(1), 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  cfmt            2   34[BANK0 ] PTR unsigned char 
  5597 ;;		 -> STR_14(27), STR_13(28), STR_12(19), STR_11(16), 
  5598 ;;		 -> STR_10(18), STR_9(21), STR_8(22), STR_7(21), 
  5599 ;;		 -> STR_6(3), STR_5(27), STR_4(24), STR_3(15), 
  5600 ;;		 -> STR_2(14), STR_1(8), 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  2   28[BANK0 ] int 
  5603 ;; Registers used:
  5604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5610 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;Total ram usage:        8 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; Hardware stack levels required when called: 11
  5617 ;; This function calls:
  5618 ;;		_vfpfcnvrt
  5619 ;; This function is called by:
  5620 ;;		_printf
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624     0F77                     _vfprintf:	
  5625                           ;psect for function _vfprintf
  5626                           
  5627     0F77                     l2951:	
  5628                           ;incstack = 0
  5629                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5630                           
  5631                           
  5632                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5633     0F77  0020               	movlb	0	; select bank0
  5634     0F78  083F               	movf	vfprintf@fmt+1,w
  5635     0F79  00C3               	movwf	vfprintf@cfmt+1
  5636     0F7A  083E               	movf	vfprintf@fmt,w
  5637     0F7B  00C2               	movwf	vfprintf@cfmt
  5638                           
  5639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5640     0F7C  2F88               	goto	l2955
  5641     0F7D                     l2953:
  5642                           
  5643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5644     0F7D  083D               	movf	vfprintf@fp+1,w
  5645     0F7E  00AD               	movwf	vfpfcnvrt@fp+1
  5646     0F7F  083C               	movf	vfprintf@fp,w
  5647     0F80  00AC               	movwf	vfpfcnvrt@fp
  5648     0F81  3042               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5649     0F82  00AE               	movwf	vfpfcnvrt@fmt
  5650     0F83  0840               	movf	vfprintf@ap,w
  5651     0F84  00AF               	movwf	vfpfcnvrt@ap
  5652     0F85  3180  2079  318F   	fcall	_vfpfcnvrt
  5653     0F88                     l2955:
  5654                           
  5655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5656     0F88  0020               	movlb	0	; select bank0
  5657     0F89  0842               	movf	vfprintf@cfmt,w
  5658     0F8A  0084               	movwf	4
  5659     0F8B  0843               	movf	vfprintf@cfmt+1,w
  5660     0F8C  0085               	movwf	5
  5661     0F8D  0012               	moviw fsr0++
  5662     0F8E  1D03               	btfss	3,2
  5663     0F8F  2F91               	goto	u1781
  5664     0F90  2F92               	goto	u1780
  5665     0F91                     u1781:
  5666     0F91  2F7D               	goto	l2953
  5667     0F92                     u1780:
  5668     0F92                     l2957:
  5669                           
  5670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5671     0F92  01BC               	clrf	?_vfprintf
  5672     0F93  01BD               	clrf	?_vfprintf+1
  5673     0F94                     l1494:
  5674     0F94  0008               	return
  5675     0F95                     __end_of_vfprintf:
  5676                           
  5677                           	psect	text10
  5678     0079                     __ptext10:	
  5679 ;; *************** function _vfpfcnvrt *****************
  5680 ;; Defined at:
  5681 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  5684 ;;		 -> NULL(0), 
  5685 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  5686 ;;		 -> vfprintf@cfmt(2), 
  5687 ;;  ap              1   15[BANK0 ] PTR PTR void 
  5688 ;;		 -> printf@ap(1), 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  convarg         4   23[BANK0 ] struct .
  5691 ;;  cp              2   21[BANK0 ] PTR unsigned char 
  5692 ;;		 -> STR_14(27), STR_13(28), STR_12(19), STR_11(16), 
  5693 ;;		 -> STR_10(18), STR_9(21), STR_8(22), STR_7(21), 
  5694 ;;		 -> STR_6(3), STR_5(27), STR_4(24), STR_3(15), 
  5695 ;;		 -> STR_2(14), STR_1(8), 
  5696 ;;  c               1   27[BANK0 ] unsigned char 
  5697 ;;  done            1   20[BANK0 ] _Bool 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;Total ram usage:       16 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 10
  5714 ;; This function calls:
  5715 ;;		___awdiv
  5716 ;;		___awmod
  5717 ;;		___lwdiv
  5718 ;;		___lwmod
  5719 ;;		_abs
  5720 ;;		_fputc
  5721 ;; This function is called by:
  5722 ;;		_vfprintf
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726     0079                     _vfpfcnvrt:	
  5727                           ;psect for function _vfpfcnvrt
  5728                           
  5729     0079                     l2841:	
  5730                           ;incstack = 0
  5731                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5732                           
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5735     0079  0020               	movlb	0	; select bank0
  5736     007A  082E               	movf	vfpfcnvrt@fmt,w
  5737     007B  0086               	movwf	6
  5738     007C  0187               	clrf	7
  5739     007D  3F40               	moviw [0]fsr1
  5740     007E  00B0               	movwf	??_vfpfcnvrt
  5741     007F  3F41               	moviw [1]fsr1
  5742     0080  00B1               	movwf	??_vfpfcnvrt+1
  5743     0081  0830               	movf	??_vfpfcnvrt,w
  5744     0082  0084               	movwf	4
  5745     0083  0831               	movf	??_vfpfcnvrt+1,w
  5746     0084  0085               	movwf	5
  5747     0085  0012               	moviw fsr0++
  5748     0086  3A25               	xorlw	37
  5749     0087  1D03               	btfss	3,2
  5750     0088  288A               	goto	u1641
  5751     0089  288B               	goto	u1640
  5752     008A                     u1641:
  5753     008A  29CE               	goto	l2911
  5754     008B                     u1640:
  5755     008B                     l2843:
  5756                           
  5757                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5758     008B  082E               	movf	vfpfcnvrt@fmt,w
  5759     008C  0086               	movwf	6
  5760     008D  0187               	clrf	7
  5761     008E  3001               	movlw	1
  5762     008F  0781               	addwf	1,f
  5763     0090  3141               	addfsr 1,1
  5764     0091  1803               	skipnc
  5765     0092  0A81               	incf	1,f
  5766     0093                     l2845:
  5767                           
  5768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5769     0093  0021               	movlb	1	; select bank1
  5770     0094  01D8               	clrf	_width^(0+128)
  5771     0095  01D9               	clrf	(_width+1)^(0+128)
  5772     0096  3000               	movlw	0
  5773     0097  0020               	movlb	0	; select bank0
  5774     0098  00ED               	movwf	_flags
  5775     0099                     l2847:
  5776                           
  5777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5778     0099  30FF               	movlw	255
  5779     009A  0021               	movlb	1	; select bank1
  5780     009B  00DA               	movwf	_prec^(0+128)
  5781     009C  30FF               	movlw	255
  5782     009D  00DB               	movwf	(_prec^(0+128)+1)
  5783     009E                     l2849:
  5784                           
  5785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5786     009E  0020               	movlb	0	; select bank0
  5787     009F  082E               	movf	vfpfcnvrt@fmt,w
  5788     00A0  0086               	movwf	6
  5789     00A1  0187               	clrf	7
  5790     00A2  3F40               	moviw [0]fsr1
  5791     00A3  00B5               	movwf	vfpfcnvrt@cp
  5792     00A4  3F41               	moviw [1]fsr1
  5793     00A5  00B6               	movwf	vfpfcnvrt@cp+1
  5794     00A6                     l2851:
  5795                           
  5796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5797     00A6  0835               	movf	vfpfcnvrt@cp,w
  5798     00A7  0084               	movwf	4
  5799     00A8  0836               	movf	vfpfcnvrt@cp+1,w
  5800     00A9  0085               	movwf	5
  5801     00AA  0012               	moviw fsr0++
  5802     00AB  3A64               	xorlw	100
  5803     00AC  1903               	btfsc	3,2
  5804     00AD  28AF               	goto	u1651
  5805     00AE  28B0               	goto	u1650
  5806     00AF                     u1651:
  5807     00AF  28BA               	goto	l2855
  5808     00B0                     u1650:
  5809     00B0                     l2853:
  5810     00B0  0835               	movf	vfpfcnvrt@cp,w
  5811     00B1  0084               	movwf	4
  5812     00B2  0836               	movf	vfpfcnvrt@cp+1,w
  5813     00B3  0085               	movwf	5
  5814     00B4  0012               	moviw fsr0++
  5815     00B5  3A69               	xorlw	105
  5816     00B6  1D03               	btfss	3,2
  5817     00B7  28B9               	goto	u1661
  5818     00B8  28BA               	goto	u1660
  5819     00B9                     u1661:
  5820     00B9  2946               	goto	l2883
  5821     00BA                     u1660:
  5822     00BA                     l2855:
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5825     00BA  082F               	movf	vfpfcnvrt@ap,w
  5826     00BB  0086               	movwf	6
  5827     00BC  0187               	clrf	7
  5828     00BD  0801               	movf	1,w
  5829     00BE  0084               	movwf	4
  5830     00BF  0185               	clrf	5
  5831     00C0  3002               	movlw	2
  5832     00C1  0781               	addwf	1,f
  5833     00C2  3F00               	moviw [0]fsr0
  5834     00C3  00B7               	movwf	vfpfcnvrt@convarg
  5835     00C4  3F01               	moviw [1]fsr0
  5836     00C5  00B8               	movwf	vfpfcnvrt@convarg+1
  5837     00C6                     l2857:
  5838                           
  5839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5840     00C6  0835               	movf	vfpfcnvrt@cp,w
  5841     00C7  3E01               	addlw	1
  5842     00C8  00B0               	movwf	??_vfpfcnvrt
  5843     00C9  3000               	movlw	0
  5844     00CA  3D36               	addwfc	vfpfcnvrt@cp+1,w
  5845     00CB  00B1               	movwf	??_vfpfcnvrt+1
  5846     00CC  082E               	movf	vfpfcnvrt@fmt,w
  5847     00CD  0086               	movwf	6
  5848     00CE  0187               	clrf	7
  5849     00CF  0830               	movf	??_vfpfcnvrt,w
  5850     00D0  3FC0               	movwi [0]fsr1
  5851     00D1  0831               	movf	??_vfpfcnvrt+1,w
  5852     00D2  3FC1               	movwi [1]fsr1
  5853     00D3                     l2859:
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  5856     00D3  3020               	movlw	32
  5857     00D4  00BB               	movwf	vfpfcnvrt@c
  5858     00D5                     l2861:
  5859                           
  5860                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  5861     00D5  1BB8               	btfsc	vfpfcnvrt@convarg+1,7
  5862     00D6  28D8               	goto	u1671
  5863     00D7  28DA               	goto	u1670
  5864     00D8                     u1671:
  5865     00D8  3001               	movlw	1
  5866     00D9  28DB               	goto	u1680
  5867     00DA                     u1670:
  5868     00DA  3000               	movlw	0
  5869     00DB                     u1680:
  5870     00DB  00B4               	movwf	vfpfcnvrt@done
  5871     00DC                     l2863:
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  5874     00DC  3001               	movlw	1
  5875     00DD  02BB               	subwf	vfpfcnvrt@c,f
  5876     00DE  083B               	movf	vfpfcnvrt@c,w
  5877     00DF  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5878     00E0  0086               	movwf	6
  5879     00E1  3001               	movlw	1	; select bank2/3
  5880     00E2  0087               	movwf	7
  5881     00E3  300A               	movlw	10
  5882     00E4  00A0               	movwf	___awmod@divisor
  5883     00E5  3000               	movlw	0
  5884     00E6  00A1               	movwf	___awmod@divisor+1
  5885     00E7  0838               	movf	vfpfcnvrt@convarg+1,w
  5886     00E8  00A3               	movwf	___awmod@dividend+1
  5887     00E9  0837               	movf	vfpfcnvrt@convarg,w
  5888     00EA  00A2               	movwf	___awmod@dividend
  5889     00EB  3185  252B  3180   	fcall	___awmod
  5890     00EE  0020               	movlb	0	; select bank0
  5891     00EF  0821               	movf	?___awmod+1,w
  5892     00F0  00A7               	movwf	abs@a+1
  5893     00F1  0820               	movf	?___awmod,w
  5894     00F2  00A6               	movwf	abs@a
  5895     00F3  318E  26A1  3180   	fcall	_abs
  5896     00F6  0020               	movlb	0	; select bank0
  5897     00F7  0826               	movf	?_abs,w
  5898     00F8  3E30               	addlw	48
  5899     00F9  0081               	movwf	1
  5900     00FA                     l2865:
  5901                           
  5902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  5903     00FA  300A               	movlw	10
  5904     00FB  00A0               	movwf	___awdiv@divisor
  5905     00FC  3000               	movlw	0
  5906     00FD  00A1               	movwf	___awdiv@divisor+1
  5907     00FE  0838               	movf	vfpfcnvrt@convarg+1,w
  5908     00FF  00A3               	movwf	___awdiv@dividend+1
  5909     0100  0837               	movf	vfpfcnvrt@convarg,w
  5910     0101  00A2               	movwf	___awdiv@dividend
  5911     0102  3184  2475  3180   	fcall	___awdiv
  5912     0105  0020               	movlb	0	; select bank0
  5913     0106  0821               	movf	?___awdiv+1,w
  5914     0107  00B8               	movwf	vfpfcnvrt@convarg+1
  5915     0108  0820               	movf	?___awdiv,w
  5916     0109  00B7               	movwf	vfpfcnvrt@convarg
  5917     010A                     l2867:
  5918                           
  5919                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  5920     010A  0837               	movf	vfpfcnvrt@convarg,w
  5921     010B  0438               	iorwf	vfpfcnvrt@convarg+1,w
  5922     010C  1903               	btfsc	3,2
  5923     010D  290F               	goto	u1691
  5924     010E  2910               	goto	u1690
  5925     010F                     u1691:
  5926     010F  2915               	goto	l2871
  5927     0110                     u1690:
  5928     0110                     l2869:
  5929     0110  083B               	movf	vfpfcnvrt@c,w
  5930     0111  1D03               	btfss	3,2
  5931     0112  2914               	goto	u1701
  5932     0113  2915               	goto	u1700
  5933     0114                     u1701:
  5934     0114  28DC               	goto	l2863
  5935     0115                     u1700:
  5936     0115                     l2871:
  5937                           
  5938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  5939     0115  083B               	movf	vfpfcnvrt@c,w
  5940     0116  1903               	btfsc	3,2
  5941     0117  2919               	goto	u1711
  5942     0118  291A               	goto	u1710
  5943     0119                     u1711:
  5944     0119  293F               	goto	l2881
  5945     011A                     u1710:
  5946     011A                     l2873:
  5947     011A  0834               	movf	vfpfcnvrt@done,w
  5948     011B  1903               	btfsc	3,2
  5949     011C  291E               	goto	u1721
  5950     011D  291F               	goto	u1720
  5951     011E                     u1721:
  5952     011E  293F               	goto	l2881
  5953     011F                     u1720:
  5954     011F                     l2875:
  5955                           
  5956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  5957     011F  3001               	movlw	1
  5958     0120  02BB               	subwf	vfpfcnvrt@c,f
  5959     0121  083B               	movf	vfpfcnvrt@c,w
  5960     0122  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5961     0123  0086               	movwf	6
  5962     0124  3001               	movlw	1	; select bank2/3
  5963     0125  0087               	movwf	7
  5964     0126  302D               	movlw	45
  5965     0127  0081               	movwf	1
  5966     0128  293F               	goto	l2881
  5967     0129                     l2877:
  5968                           
  5969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  5970     0129  083B               	movf	vfpfcnvrt@c,w
  5971     012A  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5972     012B  0086               	movwf	6
  5973     012C  3001               	movlw	1	; select bank2/3
  5974     012D  0087               	movwf	7
  5975     012E  0801               	movf	1,w
  5976     012F  00B0               	movwf	??_vfpfcnvrt
  5977     0130  01B1               	clrf	??_vfpfcnvrt+1
  5978     0131  0830               	movf	??_vfpfcnvrt,w
  5979     0132  00A3               	movwf	fputc@c
  5980     0133  0831               	movf	??_vfpfcnvrt+1,w
  5981     0134  00A4               	movwf	fputc@c+1
  5982     0135  082D               	movf	vfpfcnvrt@fp+1,w
  5983     0136  00A6               	movwf	fputc@fp+1
  5984     0137  082C               	movf	vfpfcnvrt@fp,w
  5985     0138  00A5               	movwf	fputc@fp
  5986     0139  3184  2417  3180   	fcall	_fputc
  5987     013C                     l2879:
  5988     013C  3001               	movlw	1
  5989     013D  0020               	movlb	0	; select bank0
  5990     013E  07BB               	addwf	vfpfcnvrt@c,f
  5991     013F                     l2881:
  5992                           
  5993                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  5994     013F  3020               	movlw	32
  5995     0140  063B               	xorwf	vfpfcnvrt@c,w
  5996     0141  1D03               	btfss	3,2
  5997     0142  2944               	goto	u1731
  5998     0143  2945               	goto	u1730
  5999     0144                     u1731:
  6000     0144  2929               	goto	l2877
  6001     0145                     u1730:
  6002     0145  29E8               	goto	l1475
  6003     0146                     l2883:
  6004     0146  0835               	movf	vfpfcnvrt@cp,w
  6005     0147  0084               	movwf	4
  6006     0148  0836               	movf	vfpfcnvrt@cp+1,w
  6007     0149  0085               	movwf	5
  6008     014A  0012               	moviw fsr0++
  6009     014B  3A75               	xorlw	117
  6010     014C  1D03               	btfss	3,2
  6011     014D  294F               	goto	u1741
  6012     014E  2950               	goto	u1740
  6013     014F                     u1741:
  6014     014F  29C4               	goto	l2907
  6015     0150                     u1740:
  6016     0150                     l2885:
  6017                           
  6018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  6019     0150  082F               	movf	vfpfcnvrt@ap,w
  6020     0151  0086               	movwf	6
  6021     0152  0187               	clrf	7
  6022     0153  0801               	movf	1,w
  6023     0154  0084               	movwf	4
  6024     0155  0185               	clrf	5
  6025     0156  3002               	movlw	2
  6026     0157  0781               	addwf	1,f
  6027     0158  3F00               	moviw [0]fsr0
  6028     0159  00B7               	movwf	vfpfcnvrt@convarg
  6029     015A  3F01               	moviw [1]fsr0
  6030     015B  00B8               	movwf	vfpfcnvrt@convarg+1
  6031     015C                     l2887:
  6032                           
  6033                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  6034     015C  0835               	movf	vfpfcnvrt@cp,w
  6035     015D  3E01               	addlw	1
  6036     015E  00B0               	movwf	??_vfpfcnvrt
  6037     015F  3000               	movlw	0
  6038     0160  3D36               	addwfc	vfpfcnvrt@cp+1,w
  6039     0161  00B1               	movwf	??_vfpfcnvrt+1
  6040     0162  082E               	movf	vfpfcnvrt@fmt,w
  6041     0163  0086               	movwf	6
  6042     0164  0187               	clrf	7
  6043     0165  0830               	movf	??_vfpfcnvrt,w
  6044     0166  3FC0               	movwi [0]fsr1
  6045     0167  0831               	movf	??_vfpfcnvrt+1,w
  6046     0168  3FC1               	movwi [1]fsr1
  6047                           
  6048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  6049     0169  29BB               	goto	l2905
  6050     016A                     l1480:	
  6051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
  6052                           
  6053                           
  6054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  6055     016A  3020               	movlw	32
  6056     016B  00BB               	movwf	vfpfcnvrt@c
  6057     016C                     l2889:
  6058                           
  6059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  6060     016C  3001               	movlw	1
  6061     016D  02BB               	subwf	vfpfcnvrt@c,f
  6062     016E  083B               	movf	vfpfcnvrt@c,w
  6063     016F  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6064     0170  0086               	movwf	6
  6065     0171  3001               	movlw	1	; select bank2/3
  6066     0172  0087               	movwf	7
  6067     0173  300A               	movlw	10
  6068     0174  00A0               	movwf	___lwmod@divisor
  6069     0175  3000               	movlw	0
  6070     0176  00A1               	movwf	___lwmod@divisor+1
  6071     0177  0838               	movf	vfpfcnvrt@convarg+1,w
  6072     0178  00A3               	movwf	___lwmod@dividend+1
  6073     0179  0837               	movf	vfpfcnvrt@convarg,w
  6074     017A  00A2               	movwf	___lwmod@dividend
  6075     017B  3187  270E  3180   	fcall	___lwmod
  6076     017E  0020               	movlb	0	; select bank0
  6077     017F  0820               	movf	?___lwmod,w
  6078     0180  3E30               	addlw	48
  6079     0181  0081               	movwf	1
  6080     0182                     l2891:
  6081                           
  6082                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  6083     0182  300A               	movlw	10
  6084     0183  00A0               	movwf	___lwdiv@divisor
  6085     0184  3000               	movlw	0
  6086     0185  00A1               	movwf	___lwdiv@divisor+1
  6087     0186  0838               	movf	vfpfcnvrt@convarg+1,w
  6088     0187  00A3               	movwf	___lwdiv@dividend+1
  6089     0188  0837               	movf	vfpfcnvrt@convarg,w
  6090     0189  00A2               	movwf	___lwdiv@dividend
  6091     018A  3186  2665  3180   	fcall	___lwdiv
  6092     018D  0020               	movlb	0	; select bank0
  6093     018E  0821               	movf	?___lwdiv+1,w
  6094     018F  00B8               	movwf	vfpfcnvrt@convarg+1
  6095     0190  0820               	movf	?___lwdiv,w
  6096     0191  00B7               	movwf	vfpfcnvrt@convarg
  6097     0192                     l2893:
  6098                           
  6099                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  6100     0192  0837               	movf	vfpfcnvrt@convarg,w
  6101     0193  0438               	iorwf	vfpfcnvrt@convarg+1,w
  6102     0194  1903               	btfsc	3,2
  6103     0195  2997               	goto	u1751
  6104     0196  2998               	goto	u1750
  6105     0197                     u1751:
  6106     0197  29B4               	goto	l2901
  6107     0198                     u1750:
  6108     0198                     l2895:
  6109     0198  083B               	movf	vfpfcnvrt@c,w
  6110     0199  1D03               	btfss	3,2
  6111     019A  299C               	goto	u1761
  6112     019B  299D               	goto	u1760
  6113     019C                     u1761:
  6114     019C  296C               	goto	l2889
  6115     019D                     u1760:
  6116     019D  29B4               	goto	l2901
  6117     019E                     l2897:
  6118                           
  6119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  6120     019E  083B               	movf	vfpfcnvrt@c,w
  6121     019F  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6122     01A0  0086               	movwf	6
  6123     01A1  3001               	movlw	1	; select bank2/3
  6124     01A2  0087               	movwf	7
  6125     01A3  0801               	movf	1,w
  6126     01A4  00B0               	movwf	??_vfpfcnvrt
  6127     01A5  01B1               	clrf	??_vfpfcnvrt+1
  6128     01A6  0830               	movf	??_vfpfcnvrt,w
  6129     01A7  00A3               	movwf	fputc@c
  6130     01A8  0831               	movf	??_vfpfcnvrt+1,w
  6131     01A9  00A4               	movwf	fputc@c+1
  6132     01AA  082D               	movf	vfpfcnvrt@fp+1,w
  6133     01AB  00A6               	movwf	fputc@fp+1
  6134     01AC  082C               	movf	vfpfcnvrt@fp,w
  6135     01AD  00A5               	movwf	fputc@fp
  6136     01AE  3184  2417  3180   	fcall	_fputc
  6137     01B1                     l2899:
  6138     01B1  3001               	movlw	1
  6139     01B2  0020               	movlb	0	; select bank0
  6140     01B3  07BB               	addwf	vfpfcnvrt@c,f
  6141     01B4                     l2901:
  6142                           
  6143                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  6144     01B4  3020               	movlw	32
  6145     01B5  063B               	xorwf	vfpfcnvrt@c,w
  6146     01B6  1D03               	btfss	3,2
  6147     01B7  29B9               	goto	u1771
  6148     01B8  29BA               	goto	u1770
  6149     01B9                     u1771:
  6150     01B9  299E               	goto	l2897
  6151     01BA                     u1770:
  6152     01BA  29E8               	goto	l1475
  6153     01BB                     l2905:
  6154     01BB  0835               	movf	vfpfcnvrt@cp,w
  6155     01BC  0084               	movwf	4
  6156     01BD  0836               	movf	vfpfcnvrt@cp+1,w
  6157     01BE  0085               	movwf	5
  6158     01BF  0800               	movf	0,w	;code access
  6159                           
  6160                           ; Switch size 1, requested type "simple"
  6161                           ; Number of cases is 1, Range of values is 117 to 117
  6162                           ; switch strategies available:
  6163                           ; Name         Instructions Cycles
  6164                           ; simple_byte            4     3 (average)
  6165                           ; direct_byte           11     9 (fixed)
  6166                           ; jumptable            263     9 (fixed)
  6167                           ;	Chosen strategy is simple_byte
  6168     01C0  3A75               	xorlw	117	; case 117
  6169     01C1  1903               	skipnz
  6170     01C2  296A               	goto	l1480
  6171     01C3  29C4               	goto	l2907
  6172     01C4                     l2907:
  6173                           
  6174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6175     01C4  0020               	movlb	0	; select bank0
  6176     01C5  082E               	movf	vfpfcnvrt@fmt,w
  6177     01C6  0086               	movwf	6
  6178     01C7  0187               	clrf	7
  6179     01C8  3001               	movlw	1
  6180     01C9  0781               	addwf	1,f
  6181     01CA  3141               	addfsr 1,1
  6182     01CB  1803               	skipnc
  6183     01CC  0A81               	incf	1,f
  6184     01CD  29E8               	goto	l1475
  6185     01CE                     l2911:
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6188     01CE  082E               	movf	vfpfcnvrt@fmt,w
  6189     01CF  0086               	movwf	6
  6190     01D0  0187               	clrf	7
  6191     01D1  3F40               	moviw [0]fsr1
  6192     01D2  00B0               	movwf	??_vfpfcnvrt
  6193     01D3  3F41               	moviw [1]fsr1
  6194     01D4  00B1               	movwf	??_vfpfcnvrt+1
  6195     01D5  0830               	movf	??_vfpfcnvrt,w
  6196     01D6  0084               	movwf	4
  6197     01D7  0831               	movf	??_vfpfcnvrt+1,w
  6198     01D8  0085               	movwf	5
  6199     01D9  0800               	movf	0,w	;code access
  6200     01DA  00B2               	movwf	??_vfpfcnvrt+2
  6201     01DB  01B3               	clrf	??_vfpfcnvrt+3
  6202     01DC  0832               	movf	??_vfpfcnvrt+2,w
  6203     01DD  00A3               	movwf	fputc@c
  6204     01DE  0833               	movf	??_vfpfcnvrt+3,w
  6205     01DF  00A4               	movwf	fputc@c+1
  6206     01E0  082D               	movf	vfpfcnvrt@fp+1,w
  6207     01E1  00A6               	movwf	fputc@fp+1
  6208     01E2  082C               	movf	vfpfcnvrt@fp,w
  6209     01E3  00A5               	movwf	fputc@fp
  6210     01E4  3184  2417  3180   	fcall	_fputc
  6211     01E7  29C4               	goto	l2907
  6212     01E8                     l1475:
  6213     01E8  0008               	return
  6214     01E9                     __end_of_vfpfcnvrt:
  6215                           
  6216                           	psect	text11
  6217     0417                     __ptext11:	
  6218 ;; *************** function _fputc *****************
  6219 ;; Defined at:
  6220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  c               2    3[BANK0 ] int 
  6223 ;;  fp              2    5[BANK0 ] PTR struct _IO_FILE
  6224 ;;		 -> NULL(0), 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  2    3[BANK0 ] int 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6236 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;Total ram usage:        9 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 9
  6243 ;; This function calls:
  6244 ;;		_putch
  6245 ;; This function is called by:
  6246 ;;		_vfpfcnvrt
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250     0417                     _fputc:	
  6251                           ;psect for function _fputc
  6252                           
  6253     0417                     l2803:	
  6254                           ;incstack = 0
  6255                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6256                           
  6257     0417  0020               	movlb	0	; select bank0
  6258     0418  0825               	movf	fputc@fp,w
  6259     0419  0426               	iorwf	fputc@fp+1,w
  6260     041A  1903               	btfsc	3,2
  6261     041B  2C1D               	goto	u1591
  6262     041C  2C1E               	goto	u1590
  6263     041D                     u1591:
  6264     041D  2C24               	goto	l2807
  6265     041E                     u1590:
  6266     041E                     l2805:
  6267     041E  0825               	movf	fputc@fp,w
  6268     041F  0426               	iorwf	fputc@fp+1,w
  6269     0420  1D03               	btfss	3,2
  6270     0421  2C23               	goto	u1601
  6271     0422  2C24               	goto	u1600
  6272     0423                     u1601:
  6273     0423  2C29               	goto	l2809
  6274     0424                     u1600:
  6275     0424                     l2807:
  6276     0424  0823               	movf	fputc@c,w
  6277     0425  318E  2690  3184   	fcall	_putch
  6278     0428  2C74               	goto	l1513
  6279     0429                     l2809:
  6280     0429  0825               	movf	fputc@fp,w
  6281     042A  0086               	movwf	6
  6282     042B  0826               	movf	fputc@fp+1,w
  6283     042C  0087               	movwf	7
  6284     042D  3149               	addfsr 1,9
  6285     042E  0016               	moviw fsr1++
  6286     042F  0401               	iorwf	1,w
  6287     0430  1903               	btfsc	3,2
  6288     0431  2C33               	goto	u1611
  6289     0432  2C34               	goto	u1610
  6290     0433                     u1611:
  6291     0433  2C54               	goto	l2813
  6292     0434                     u1610:
  6293     0434                     l2811:
  6294     0434  0825               	movf	fputc@fp,w
  6295     0435  0086               	movwf	6
  6296     0436  0826               	movf	fputc@fp+1,w
  6297     0437  0087               	movwf	7
  6298     0438  3149               	addfsr 1,9
  6299     0439  3F40               	moviw [0]fsr1
  6300     043A  00A7               	movwf	??_fputc
  6301     043B  3F41               	moviw [1]fsr1
  6302     043C  00A8               	movwf	??_fputc+1
  6303     043D  0825               	movf	fputc@fp,w
  6304     043E  0086               	movwf	6
  6305     043F  0826               	movf	fputc@fp+1,w
  6306     0440  0087               	movwf	7
  6307     0441  3142               	addfsr 1,2
  6308     0442  3F40               	moviw [0]fsr1
  6309     0443  00A9               	movwf	??_fputc+2
  6310     0444  3F41               	moviw [1]fsr1
  6311     0445  00AA               	movwf	??_fputc+3
  6312     0446  082A               	movf	??_fputc+3,w
  6313     0447  3A80               	xorlw	128
  6314     0448  00AB               	movwf	??_fputc+4
  6315     0449  0828               	movf	??_fputc+1,w
  6316     044A  3A80               	xorlw	128
  6317     044B  022B               	subwf	??_fputc+4,w
  6318     044C  1D03               	skipz
  6319     044D  2C50               	goto	u1625
  6320     044E  0827               	movf	??_fputc,w
  6321     044F  0229               	subwf	??_fputc+2,w
  6322     0450                     u1625:
  6323     0450  1803               	skipnc
  6324     0451  2C53               	goto	u1621
  6325     0452  2C54               	goto	u1620
  6326     0453                     u1621:
  6327     0453  2C74               	goto	l1513
  6328     0454                     u1620:
  6329     0454                     l2813:
  6330     0454  0020               	movlb	0	; select bank0
  6331     0455  0825               	movf	fputc@fp,w
  6332     0456  0086               	movwf	6
  6333     0457  0826               	movf	fputc@fp+1,w
  6334     0458  0087               	movwf	7
  6335     0459  3142               	addfsr 1,2
  6336     045A  0825               	movf	fputc@fp,w
  6337     045B  0084               	movwf	4
  6338     045C  0826               	movf	fputc@fp+1,w
  6339     045D  0085               	movwf	5
  6340     045E  3F00               	moviw [0]fsr0
  6341     045F  00A7               	movwf	??_fputc
  6342     0460  3F01               	moviw [1]fsr0
  6343     0461  00A8               	movwf	??_fputc+1
  6344     0462  3F40               	moviw [0]fsr1
  6345     0463  0727               	addwf	??_fputc,w
  6346     0464  0084               	movwf	4
  6347     0465  3F41               	moviw [1]fsr1
  6348     0466  3D28               	addwfc	??_fputc+1,w
  6349     0467  0085               	movwf	5
  6350     0468  0823               	movf	fputc@c,w
  6351     0469  0080               	movwf	0
  6352     046A                     l2815:
  6353     046A  0825               	movf	fputc@fp,w
  6354     046B  0086               	movwf	6
  6355     046C  0826               	movf	fputc@fp+1,w
  6356     046D  0087               	movwf	7
  6357     046E  3142               	addfsr 1,2
  6358     046F  3001               	movlw	1
  6359     0470  0781               	addwf	1,f
  6360     0471  3141               	addfsr 1,1
  6361     0472  1803               	skipnc
  6362     0473  0A81               	incf	1,f
  6363     0474                     l1513:
  6364     0474  0008               	return
  6365     0475                     __end_of_fputc:
  6366                           
  6367                           	psect	text12
  6368     0E90                     __ptext12:	
  6369 ;; *************** function _putch *****************
  6370 ;; Defined at:
  6371 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  txData          1    wreg     unsigned char 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  txData          1    2[BANK0 ] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;Total ram usage:        1 bytes
  6390 ;; Hardware stack levels used: 1
  6391 ;; Hardware stack levels required when called: 8
  6392 ;; This function calls:
  6393 ;;		_EUSART_IsTxReady
  6394 ;;		_EUSART_Write
  6395 ;; This function is called by:
  6396 ;;		_fputc
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400     0E90                     _putch:	
  6401                           ;psect for function _putch
  6402                           
  6403                           
  6404                           ;incstack = 0
  6405                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6406                           ;putch@txData stored from wreg
  6407     0E90  0020               	movlb	0	; select bank0
  6408     0E91  00A2               	movwf	putch@txData
  6409     0E92                     l2659:
  6410     0E92                     l2661:	
  6411                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
  6412                           
  6413                           
  6414                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
  6415     0E92  318D  25F3  318E   	fcall	_EUSART_IsTxReady
  6416     0E95  3A00               	xorlw	0
  6417     0E96  1903               	skipnz
  6418     0E97  2E99               	goto	u1261
  6419     0E98  2E9A               	goto	u1260
  6420     0E99                     u1261:
  6421     0E99  2E92               	goto	l2661
  6422     0E9A                     u1260:
  6423     0E9A                     l2663:
  6424                           
  6425                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
  6426     0E9A  0020               	movlb	0	; select bank0
  6427     0E9B  0822               	movf	putch@txData,w
  6428     0E9C  00A0               	movwf	EUSART_Write@txData
  6429     0E9D  318F  27B6  318E   	fcall	_EUSART_Write
  6430     0EA0                     l769:
  6431     0EA0  0008               	return
  6432     0EA1                     __end_of_putch:
  6433                           
  6434                           	psect	text13
  6435     0FB6                     __ptext13:	
  6436 ;; *************** function _EUSART_Write *****************
  6437 ;; Defined at:
  6438 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  txData          1    0[BANK0 ] unsigned char 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  tempTxHead      1    1[BANK0 ] unsigned char 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6452 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;Total ram usage:        2 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 7
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_putch
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466     0FB6                     _EUSART_Write:	
  6467                           ;psect for function _EUSART_Write
  6468                           
  6469     0FB6                     l2643:	
  6470                           ;incstack = 0
  6471                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  6472                           
  6473                           
  6474                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
  6475     0FB6  0021               	movlb	1	; select bank1
  6476     0FB7  1A11               	btfsc	17,4	;volatile
  6477     0FB8  2FBA               	goto	u1241
  6478     0FB9  2FBB               	goto	u1240
  6479     0FBA                     u1241:
  6480     0FBA  2FC0               	goto	l2647
  6481     0FBB                     u1240:
  6482     0FBB                     l2645:
  6483                           
  6484                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
  6485     0FBB  0020               	movlb	0	; select bank0
  6486     0FBC  0820               	movf	EUSART_Write@txData,w
  6487     0FBD  0023               	movlb	3	; select bank3
  6488     0FBE  009A               	movwf	26	;volatile
  6489                           
  6490                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
  6491     0FBF  2FD6               	goto	l748
  6492     0FC0                     l2647:
  6493     0FC0  087B               	movf	_eusartTxBufferRemaining,w	;volatile
  6494     0FC1  1903               	btfsc	3,2
  6495     0FC2  2FC4               	goto	u1251
  6496     0FC3  2FC5               	goto	u1250
  6497     0FC4                     u1251:
  6498     0FC4  2FD6               	goto	l748
  6499     0FC5                     u1250:
  6500     0FC5                     l2649:
  6501                           
  6502                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
  6503     0FC5  087D               	movf	_eusartTxHead,w
  6504     0FC6  3ECA               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6505     0FC7  0086               	movwf	6
  6506     0FC8  0187               	clrf	7
  6507     0FC9  0020               	movlb	0	; select bank0
  6508     0FCA  0820               	movf	EUSART_Write@txData,w
  6509     0FCB  0081               	movwf	1
  6510     0FCC                     l2651:
  6511                           
  6512                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
  6513     0FCC  087D               	movf	_eusartTxHead,w	;volatile
  6514     0FCD  3E01               	addlw	1
  6515     0FCE  3907               	andlw	7
  6516     0FCF  00A1               	movwf	EUSART_Write@tempTxHead
  6517     0FD0                     l2653:
  6518                           
  6519                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
  6520     0FD0  0821               	movf	EUSART_Write@tempTxHead,w
  6521     0FD1  00FD               	movwf	_eusartTxHead	;volatile
  6522     0FD2                     l2655:
  6523                           
  6524                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
  6525     0FD2  0021               	movlb	1	; select bank1
  6526     0FD3  1211               	bcf	17,4	;volatile
  6527     0FD4                     l2657:
  6528                           
  6529                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
  6530     0FD4  3001               	movlw	1
  6531     0FD5  02FB               	subwf	_eusartTxBufferRemaining,f	;volatile
  6532     0FD6                     l748:	
  6533                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
  6534                           
  6535                           
  6536                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
  6537     0FD6  0021               	movlb	1	; select bank1
  6538     0FD7  1611               	bsf	17,4	;volatile
  6539     0FD8                     l751:
  6540     0FD8  0008               	return
  6541     0FD9                     __end_of_EUSART_Write:
  6542                           
  6543                           	psect	text14
  6544     0DF3                     __ptext14:	
  6545 ;; *************** function _EUSART_IsTxReady *****************
  6546 ;; Defined at:
  6547 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;		None
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      _Bool 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;Total ram usage:        0 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 7
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_putch
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575     0DF3                     _EUSART_IsTxReady:	
  6576                           ;psect for function _EUSART_IsTxReady
  6577                           
  6578     0DF3                     l2639:	
  6579                           ;incstack = 0
  6580                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
  6581                           
  6582                           
  6583                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
  6584     0DF3  087B               	movf	_eusartTxBufferRemaining,w	;volatile
  6585     0DF4  1D03               	btfss	3,2
  6586     0DF5  2DF7               	goto	u1221
  6587     0DF6  2DF9               	goto	u1220
  6588     0DF7                     u1221:
  6589     0DF7  3001               	movlw	1
  6590     0DF8  2DFA               	goto	u1230
  6591     0DF9                     u1220:
  6592     0DF9  3000               	movlw	0
  6593     0DFA                     u1230:
  6594     0DFA                     l724:
  6595     0DFA  0008               	return
  6596     0DFB                     __end_of_EUSART_IsTxReady:
  6597                           
  6598                           	psect	text15
  6599     0EA1                     __ptext15:	
  6600 ;; *************** function _abs *****************
  6601 ;; Defined at:
  6602 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  a               2    6[BANK0 ] int 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  2    6[BANK0 ] int 
  6609 ;; Registers used:
  6610 ;;		wreg, status,2, status,0
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6616 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;Total ram usage:        4 bytes
  6621 ;; Hardware stack levels used: 1
  6622 ;; Hardware stack levels required when called: 7
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_vfpfcnvrt
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630     0EA1                     _abs:	
  6631                           ;psect for function _abs
  6632                           
  6633     0EA1                     l2819:	
  6634                           ;incstack = 0
  6635                           ; Regs used in _abs: [wreg+status,2+status,0]
  6636                           
  6637     0EA1  0020               	movlb	0	; select bank0
  6638     0EA2  1BA7               	btfsc	abs@a+1,7
  6639     0EA3  2EA5               	goto	u1631
  6640     0EA4  2EA6               	goto	u1630
  6641     0EA5                     u1631:
  6642     0EA5  2EA7               	goto	l2823
  6643     0EA6                     u1630:
  6644     0EA6                     l2821:
  6645     0EA6  2EB2               	goto	l1501
  6646     0EA7                     l2823:
  6647     0EA7  0926               	comf	abs@a,w
  6648     0EA8  00A8               	movwf	??_abs
  6649     0EA9  0927               	comf	abs@a+1,w
  6650     0EAA  00A9               	movwf	??_abs+1
  6651     0EAB  0AA8               	incf	??_abs,f
  6652     0EAC  1903               	skipnz
  6653     0EAD  0AA9               	incf	??_abs+1,f
  6654     0EAE  0828               	movf	??_abs,w
  6655     0EAF  00A6               	movwf	?_abs
  6656     0EB0  0829               	movf	??_abs+1,w
  6657     0EB1  00A7               	movwf	?_abs+1
  6658     0EB2                     l1501:
  6659     0EB2  0008               	return
  6660     0EB3                     __end_of_abs:
  6661                           
  6662                           	psect	text16
  6663     070E                     __ptext16:	
  6664 ;; *************** function ___lwmod *****************
  6665 ;; Defined at:
  6666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  divisor         2    0[BANK0 ] unsigned int 
  6669 ;;  dividend        2    2[BANK0 ] unsigned int 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  counter         1    4[BANK0 ] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  2    0[BANK0 ] unsigned int 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6684 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6685 ;;Total ram usage:        5 bytes
  6686 ;; Hardware stack levels used: 1
  6687 ;; Hardware stack levels required when called: 7
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_vfpfcnvrt
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695     070E                     ___lwmod:	
  6696                           ;psect for function ___lwmod
  6697                           
  6698     070E                     l2781:	
  6699                           ;incstack = 0
  6700                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6701                           
  6702     070E  0020               	movlb	0	; select bank0
  6703     070F  0820               	movf	___lwmod@divisor,w
  6704     0710  0421               	iorwf	___lwmod@divisor+1,w
  6705     0711  1903               	btfsc	3,2
  6706     0712  2F14               	goto	u1531
  6707     0713  2F15               	goto	u1530
  6708     0714                     u1531:
  6709     0714  2F3C               	goto	l2799
  6710     0715                     u1530:
  6711     0715                     l2783:
  6712     0715  3001               	movlw	1
  6713     0716  00A4               	movwf	___lwmod@counter
  6714     0717  2F1F               	goto	l2789
  6715     0718                     l2785:
  6716     0718  3001               	movlw	1
  6717     0719                     u1545:
  6718     0719  35A0               	lslf	___lwmod@divisor,f
  6719     071A  0DA1               	rlf	___lwmod@divisor+1,f
  6720     071B  0B89               	decfsz	9,f
  6721     071C  2F19               	goto	u1545
  6722     071D                     l2787:
  6723     071D  3001               	movlw	1
  6724     071E  07A4               	addwf	___lwmod@counter,f
  6725     071F                     l2789:
  6726     071F  1FA1               	btfss	___lwmod@divisor+1,7
  6727     0720  2F22               	goto	u1551
  6728     0721  2F23               	goto	u1550
  6729     0722                     u1551:
  6730     0722  2F18               	goto	l2785
  6731     0723                     u1550:
  6732     0723                     l2791:
  6733     0723  0821               	movf	___lwmod@divisor+1,w
  6734     0724  0223               	subwf	___lwmod@dividend+1,w
  6735     0725  1D03               	skipz
  6736     0726  2F29               	goto	u1565
  6737     0727  0820               	movf	___lwmod@divisor,w
  6738     0728  0222               	subwf	___lwmod@dividend,w
  6739     0729                     u1565:
  6740     0729  1C03               	skipc
  6741     072A  2F2C               	goto	u1561
  6742     072B  2F2D               	goto	u1560
  6743     072C                     u1561:
  6744     072C  2F31               	goto	l2795
  6745     072D                     u1560:
  6746     072D                     l2793:
  6747     072D  0820               	movf	___lwmod@divisor,w
  6748     072E  02A2               	subwf	___lwmod@dividend,f
  6749     072F  0821               	movf	___lwmod@divisor+1,w
  6750     0730  3BA3               	subwfb	___lwmod@dividend+1,f
  6751     0731                     l2795:
  6752     0731  3001               	movlw	1
  6753     0732                     u1575:
  6754     0732  36A1               	lsrf	___lwmod@divisor+1,f
  6755     0733  0CA0               	rrf	___lwmod@divisor,f
  6756     0734  0B89               	decfsz	9,f
  6757     0735  2F32               	goto	u1575
  6758     0736                     l2797:
  6759     0736  3001               	movlw	1
  6760     0737  02A4               	subwf	___lwmod@counter,f
  6761     0738  1D03               	btfss	3,2
  6762     0739  2F3B               	goto	u1581
  6763     073A  2F3C               	goto	u1580
  6764     073B                     u1581:
  6765     073B  2F23               	goto	l2791
  6766     073C                     u1580:
  6767     073C                     l2799:
  6768     073C  0823               	movf	___lwmod@dividend+1,w
  6769     073D  00A1               	movwf	?___lwmod+1
  6770     073E  0822               	movf	___lwmod@dividend,w
  6771     073F  00A0               	movwf	?___lwmod
  6772     0740                     l1264:
  6773     0740  0008               	return
  6774     0741                     __end_of___lwmod:
  6775                           
  6776                           	psect	text17
  6777     0665                     __ptext17:	
  6778 ;; *************** function ___lwdiv *****************
  6779 ;; Defined at:
  6780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  divisor         2    0[BANK0 ] unsigned int 
  6783 ;;  dividend        2    2[BANK0 ] unsigned int 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  quotient        2    4[BANK0 ] unsigned int 
  6786 ;;  counter         1    6[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  2    0[BANK0 ] unsigned int 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6796 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;Total ram usage:        7 bytes
  6801 ;; Hardware stack levels used: 1
  6802 ;; Hardware stack levels required when called: 7
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_vfpfcnvrt
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810     0665                     ___lwdiv:	
  6811                           ;psect for function ___lwdiv
  6812                           
  6813     0665                     l2755:	
  6814                           ;incstack = 0
  6815                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6816                           
  6817     0665  0020               	movlb	0	; select bank0
  6818     0666  01A4               	clrf	___lwdiv@quotient
  6819     0667  01A5               	clrf	___lwdiv@quotient+1
  6820     0668                     l2757:
  6821     0668  0820               	movf	___lwdiv@divisor,w
  6822     0669  0421               	iorwf	___lwdiv@divisor+1,w
  6823     066A  1903               	btfsc	3,2
  6824     066B  2E6D               	goto	u1461
  6825     066C  2E6E               	goto	u1460
  6826     066D                     u1461:
  6827     066D  2E9B               	goto	l2777
  6828     066E                     u1460:
  6829     066E                     l2759:
  6830     066E  3001               	movlw	1
  6831     066F  00A6               	movwf	___lwdiv@counter
  6832     0670  2E78               	goto	l2765
  6833     0671                     l2761:
  6834     0671  3001               	movlw	1
  6835     0672                     u1475:
  6836     0672  35A0               	lslf	___lwdiv@divisor,f
  6837     0673  0DA1               	rlf	___lwdiv@divisor+1,f
  6838     0674  0B89               	decfsz	9,f
  6839     0675  2E72               	goto	u1475
  6840     0676                     l2763:
  6841     0676  3001               	movlw	1
  6842     0677  07A6               	addwf	___lwdiv@counter,f
  6843     0678                     l2765:
  6844     0678  1FA1               	btfss	___lwdiv@divisor+1,7
  6845     0679  2E7B               	goto	u1481
  6846     067A  2E7C               	goto	u1480
  6847     067B                     u1481:
  6848     067B  2E71               	goto	l2761
  6849     067C                     u1480:
  6850     067C                     l2767:
  6851     067C  3001               	movlw	1
  6852     067D                     u1495:
  6853     067D  35A4               	lslf	___lwdiv@quotient,f
  6854     067E  0DA5               	rlf	___lwdiv@quotient+1,f
  6855     067F  0B89               	decfsz	9,f
  6856     0680  2E7D               	goto	u1495
  6857     0681  0821               	movf	___lwdiv@divisor+1,w
  6858     0682  0223               	subwf	___lwdiv@dividend+1,w
  6859     0683  1D03               	skipz
  6860     0684  2E87               	goto	u1505
  6861     0685  0820               	movf	___lwdiv@divisor,w
  6862     0686  0222               	subwf	___lwdiv@dividend,w
  6863     0687                     u1505:
  6864     0687  1C03               	skipc
  6865     0688  2E8A               	goto	u1501
  6866     0689  2E8B               	goto	u1500
  6867     068A                     u1501:
  6868     068A  2E90               	goto	l2773
  6869     068B                     u1500:
  6870     068B                     l2769:
  6871     068B  0820               	movf	___lwdiv@divisor,w
  6872     068C  02A2               	subwf	___lwdiv@dividend,f
  6873     068D  0821               	movf	___lwdiv@divisor+1,w
  6874     068E  3BA3               	subwfb	___lwdiv@dividend+1,f
  6875     068F                     l2771:
  6876     068F  1424               	bsf	___lwdiv@quotient,0
  6877     0690                     l2773:
  6878     0690  3001               	movlw	1
  6879     0691                     u1515:
  6880     0691  36A1               	lsrf	___lwdiv@divisor+1,f
  6881     0692  0CA0               	rrf	___lwdiv@divisor,f
  6882     0693  0B89               	decfsz	9,f
  6883     0694  2E91               	goto	u1515
  6884     0695                     l2775:
  6885     0695  3001               	movlw	1
  6886     0696  02A6               	subwf	___lwdiv@counter,f
  6887     0697  1D03               	btfss	3,2
  6888     0698  2E9A               	goto	u1521
  6889     0699  2E9B               	goto	u1520
  6890     069A                     u1521:
  6891     069A  2E7C               	goto	l2767
  6892     069B                     u1520:
  6893     069B                     l2777:
  6894     069B  0825               	movf	___lwdiv@quotient+1,w
  6895     069C  00A1               	movwf	?___lwdiv+1
  6896     069D  0824               	movf	___lwdiv@quotient,w
  6897     069E  00A0               	movwf	?___lwdiv
  6898     069F                     l1254:
  6899     069F  0008               	return
  6900     06A0                     __end_of___lwdiv:
  6901                           
  6902                           	psect	text18
  6903     052B                     __ptext18:	
  6904 ;; *************** function ___awmod *****************
  6905 ;; Defined at:
  6906 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  divisor         2    0[BANK0 ] int 
  6909 ;;  dividend        2    2[BANK0 ] int 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  sign            1    5[BANK0 ] unsigned char 
  6912 ;;  counter         1    4[BANK0 ] unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  2    0[BANK0 ] int 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        6 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; Hardware stack levels required when called: 7
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_vfpfcnvrt
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936     052B                     ___awmod:	
  6937                           ;psect for function ___awmod
  6938                           
  6939     052B                     l2717:	
  6940                           ;incstack = 0
  6941                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6942                           
  6943     052B  0020               	movlb	0	; select bank0
  6944     052C  01A5               	clrf	___awmod@sign
  6945     052D                     l2719:
  6946     052D  1FA3               	btfss	___awmod@dividend+1,7
  6947     052E  2D30               	goto	u1371
  6948     052F  2D31               	goto	u1370
  6949     0530                     u1371:
  6950     0530  2D38               	goto	l2725
  6951     0531                     u1370:
  6952     0531                     l2721:
  6953     0531  09A2               	comf	___awmod@dividend,f
  6954     0532  09A3               	comf	___awmod@dividend+1,f
  6955     0533  0AA2               	incf	___awmod@dividend,f
  6956     0534  1903               	skipnz
  6957     0535  0AA3               	incf	___awmod@dividend+1,f
  6958     0536                     l2723:
  6959     0536  3001               	movlw	1
  6960     0537  00A5               	movwf	___awmod@sign
  6961     0538                     l2725:
  6962     0538  1FA1               	btfss	___awmod@divisor+1,7
  6963     0539  2D3B               	goto	u1381
  6964     053A  2D3C               	goto	u1380
  6965     053B                     u1381:
  6966     053B  2D41               	goto	l2729
  6967     053C                     u1380:
  6968     053C                     l2727:
  6969     053C  09A0               	comf	___awmod@divisor,f
  6970     053D  09A1               	comf	___awmod@divisor+1,f
  6971     053E  0AA0               	incf	___awmod@divisor,f
  6972     053F  1903               	skipnz
  6973     0540  0AA1               	incf	___awmod@divisor+1,f
  6974     0541                     l2729:
  6975     0541  0820               	movf	___awmod@divisor,w
  6976     0542  0421               	iorwf	___awmod@divisor+1,w
  6977     0543  1903               	btfsc	3,2
  6978     0544  2D46               	goto	u1391
  6979     0545  2D47               	goto	u1390
  6980     0546                     u1391:
  6981     0546  2D6E               	goto	l2747
  6982     0547                     u1390:
  6983     0547                     l2731:
  6984     0547  3001               	movlw	1
  6985     0548  00A4               	movwf	___awmod@counter
  6986     0549  2D51               	goto	l2737
  6987     054A                     l2733:
  6988     054A  3001               	movlw	1
  6989     054B                     u1405:
  6990     054B  35A0               	lslf	___awmod@divisor,f
  6991     054C  0DA1               	rlf	___awmod@divisor+1,f
  6992     054D  0B89               	decfsz	9,f
  6993     054E  2D4B               	goto	u1405
  6994     054F                     l2735:
  6995     054F  3001               	movlw	1
  6996     0550  07A4               	addwf	___awmod@counter,f
  6997     0551                     l2737:
  6998     0551  1FA1               	btfss	___awmod@divisor+1,7
  6999     0552  2D54               	goto	u1411
  7000     0553  2D55               	goto	u1410
  7001     0554                     u1411:
  7002     0554  2D4A               	goto	l2733
  7003     0555                     u1410:
  7004     0555                     l2739:
  7005     0555  0821               	movf	___awmod@divisor+1,w
  7006     0556  0223               	subwf	___awmod@dividend+1,w
  7007     0557  1D03               	skipz
  7008     0558  2D5B               	goto	u1425
  7009     0559  0820               	movf	___awmod@divisor,w
  7010     055A  0222               	subwf	___awmod@dividend,w
  7011     055B                     u1425:
  7012     055B  1C03               	skipc
  7013     055C  2D5E               	goto	u1421
  7014     055D  2D5F               	goto	u1420
  7015     055E                     u1421:
  7016     055E  2D63               	goto	l2743
  7017     055F                     u1420:
  7018     055F                     l2741:
  7019     055F  0820               	movf	___awmod@divisor,w
  7020     0560  02A2               	subwf	___awmod@dividend,f
  7021     0561  0821               	movf	___awmod@divisor+1,w
  7022     0562  3BA3               	subwfb	___awmod@dividend+1,f
  7023     0563                     l2743:
  7024     0563  3001               	movlw	1
  7025     0564                     u1435:
  7026     0564  36A1               	lsrf	___awmod@divisor+1,f
  7027     0565  0CA0               	rrf	___awmod@divisor,f
  7028     0566  0B89               	decfsz	9,f
  7029     0567  2D64               	goto	u1435
  7030     0568                     l2745:
  7031     0568  3001               	movlw	1
  7032     0569  02A4               	subwf	___awmod@counter,f
  7033     056A  1D03               	btfss	3,2
  7034     056B  2D6D               	goto	u1441
  7035     056C  2D6E               	goto	u1440
  7036     056D                     u1441:
  7037     056D  2D55               	goto	l2739
  7038     056E                     u1440:
  7039     056E                     l2747:
  7040     056E  0825               	movf	___awmod@sign,w
  7041     056F  1903               	btfsc	3,2
  7042     0570  2D72               	goto	u1451
  7043     0571  2D73               	goto	u1450
  7044     0572                     u1451:
  7045     0572  2D78               	goto	l2751
  7046     0573                     u1450:
  7047     0573                     l2749:
  7048     0573  09A2               	comf	___awmod@dividend,f
  7049     0574  09A3               	comf	___awmod@dividend+1,f
  7050     0575  0AA2               	incf	___awmod@dividend,f
  7051     0576  1903               	skipnz
  7052     0577  0AA3               	incf	___awmod@dividend+1,f
  7053     0578                     l2751:
  7054     0578  0823               	movf	___awmod@dividend+1,w
  7055     0579  00A1               	movwf	?___awmod+1
  7056     057A  0822               	movf	___awmod@dividend,w
  7057     057B  00A0               	movwf	?___awmod
  7058     057C                     l1140:
  7059     057C  0008               	return
  7060     057D                     __end_of___awmod:
  7061                           
  7062                           	psect	text19
  7063     0475                     __ptext19:	
  7064 ;; *************** function ___awdiv *****************
  7065 ;; Defined at:
  7066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  divisor         2    0[BANK0 ] int 
  7069 ;;  dividend        2    2[BANK0 ] int 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  quotient        2    6[BANK0 ] int 
  7072 ;;  sign            1    5[BANK0 ] unsigned char 
  7073 ;;  counter         1    4[BANK0 ] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  2    0[BANK0 ] int 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;Total ram usage:        8 bytes
  7088 ;; Hardware stack levels used: 1
  7089 ;; Hardware stack levels required when called: 7
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_vfpfcnvrt
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097     0475                     ___awdiv:	
  7098                           ;psect for function ___awdiv
  7099                           
  7100     0475                     l2673:	
  7101                           ;incstack = 0
  7102                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7103                           
  7104     0475  0020               	movlb	0	; select bank0
  7105     0476  01A5               	clrf	___awdiv@sign
  7106     0477                     l2675:
  7107     0477  1FA1               	btfss	___awdiv@divisor+1,7
  7108     0478  2C7A               	goto	u1271
  7109     0479  2C7B               	goto	u1270
  7110     047A                     u1271:
  7111     047A  2C82               	goto	l2681
  7112     047B                     u1270:
  7113     047B                     l2677:
  7114     047B  09A0               	comf	___awdiv@divisor,f
  7115     047C  09A1               	comf	___awdiv@divisor+1,f
  7116     047D  0AA0               	incf	___awdiv@divisor,f
  7117     047E  1903               	skipnz
  7118     047F  0AA1               	incf	___awdiv@divisor+1,f
  7119     0480                     l2679:
  7120     0480  3001               	movlw	1
  7121     0481  00A5               	movwf	___awdiv@sign
  7122     0482                     l2681:
  7123     0482  1FA3               	btfss	___awdiv@dividend+1,7
  7124     0483  2C85               	goto	u1281
  7125     0484  2C86               	goto	u1280
  7126     0485                     u1281:
  7127     0485  2C8D               	goto	l2687
  7128     0486                     u1280:
  7129     0486                     l2683:
  7130     0486  09A2               	comf	___awdiv@dividend,f
  7131     0487  09A3               	comf	___awdiv@dividend+1,f
  7132     0488  0AA2               	incf	___awdiv@dividend,f
  7133     0489  1903               	skipnz
  7134     048A  0AA3               	incf	___awdiv@dividend+1,f
  7135     048B                     l2685:
  7136     048B  3001               	movlw	1
  7137     048C  06A5               	xorwf	___awdiv@sign,f
  7138     048D                     l2687:
  7139     048D  01A6               	clrf	___awdiv@quotient
  7140     048E  01A7               	clrf	___awdiv@quotient+1
  7141     048F                     l2689:
  7142     048F  0820               	movf	___awdiv@divisor,w
  7143     0490  0421               	iorwf	___awdiv@divisor+1,w
  7144     0491  1903               	btfsc	3,2
  7145     0492  2C94               	goto	u1291
  7146     0493  2C95               	goto	u1290
  7147     0494                     u1291:
  7148     0494  2CC2               	goto	l2709
  7149     0495                     u1290:
  7150     0495                     l2691:
  7151     0495  3001               	movlw	1
  7152     0496  00A4               	movwf	___awdiv@counter
  7153     0497  2C9F               	goto	l2697
  7154     0498                     l2693:
  7155     0498  3001               	movlw	1
  7156     0499                     u1305:
  7157     0499  35A0               	lslf	___awdiv@divisor,f
  7158     049A  0DA1               	rlf	___awdiv@divisor+1,f
  7159     049B  0B89               	decfsz	9,f
  7160     049C  2C99               	goto	u1305
  7161     049D                     l2695:
  7162     049D  3001               	movlw	1
  7163     049E  07A4               	addwf	___awdiv@counter,f
  7164     049F                     l2697:
  7165     049F  1FA1               	btfss	___awdiv@divisor+1,7
  7166     04A0  2CA2               	goto	u1311
  7167     04A1  2CA3               	goto	u1310
  7168     04A2                     u1311:
  7169     04A2  2C98               	goto	l2693
  7170     04A3                     u1310:
  7171     04A3                     l2699:
  7172     04A3  3001               	movlw	1
  7173     04A4                     u1325:
  7174     04A4  35A6               	lslf	___awdiv@quotient,f
  7175     04A5  0DA7               	rlf	___awdiv@quotient+1,f
  7176     04A6  0B89               	decfsz	9,f
  7177     04A7  2CA4               	goto	u1325
  7178     04A8  0821               	movf	___awdiv@divisor+1,w
  7179     04A9  0223               	subwf	___awdiv@dividend+1,w
  7180     04AA  1D03               	skipz
  7181     04AB  2CAE               	goto	u1335
  7182     04AC  0820               	movf	___awdiv@divisor,w
  7183     04AD  0222               	subwf	___awdiv@dividend,w
  7184     04AE                     u1335:
  7185     04AE  1C03               	skipc
  7186     04AF  2CB1               	goto	u1331
  7187     04B0  2CB2               	goto	u1330
  7188     04B1                     u1331:
  7189     04B1  2CB7               	goto	l2705
  7190     04B2                     u1330:
  7191     04B2                     l2701:
  7192     04B2  0820               	movf	___awdiv@divisor,w
  7193     04B3  02A2               	subwf	___awdiv@dividend,f
  7194     04B4  0821               	movf	___awdiv@divisor+1,w
  7195     04B5  3BA3               	subwfb	___awdiv@dividend+1,f
  7196     04B6                     l2703:
  7197     04B6  1426               	bsf	___awdiv@quotient,0
  7198     04B7                     l2705:
  7199     04B7  3001               	movlw	1
  7200     04B8                     u1345:
  7201     04B8  36A1               	lsrf	___awdiv@divisor+1,f
  7202     04B9  0CA0               	rrf	___awdiv@divisor,f
  7203     04BA  0B89               	decfsz	9,f
  7204     04BB  2CB8               	goto	u1345
  7205     04BC                     l2707:
  7206     04BC  3001               	movlw	1
  7207     04BD  02A4               	subwf	___awdiv@counter,f
  7208     04BE  1D03               	btfss	3,2
  7209     04BF  2CC1               	goto	u1351
  7210     04C0  2CC2               	goto	u1350
  7211     04C1                     u1351:
  7212     04C1  2CA3               	goto	l2699
  7213     04C2                     u1350:
  7214     04C2                     l2709:
  7215     04C2  0825               	movf	___awdiv@sign,w
  7216     04C3  1903               	btfsc	3,2
  7217     04C4  2CC6               	goto	u1361
  7218     04C5  2CC7               	goto	u1360
  7219     04C6                     u1361:
  7220     04C6  2CCC               	goto	l2713
  7221     04C7                     u1360:
  7222     04C7                     l2711:
  7223     04C7  09A6               	comf	___awdiv@quotient,f
  7224     04C8  09A7               	comf	___awdiv@quotient+1,f
  7225     04C9  0AA6               	incf	___awdiv@quotient,f
  7226     04CA  1903               	skipnz
  7227     04CB  0AA7               	incf	___awdiv@quotient+1,f
  7228     04CC                     l2713:
  7229     04CC  0827               	movf	___awdiv@quotient+1,w
  7230     04CD  00A1               	movwf	?___awdiv+1
  7231     04CE  0826               	movf	___awdiv@quotient,w
  7232     04CF  00A0               	movwf	?___awdiv
  7233     04D0                     l1127:
  7234     04D0  0008               	return
  7235     04D1                     __end_of___awdiv:
  7236                           
  7237                           	psect	text20
  7238     0D75                     __ptext20:	
  7239 ;; *************** function _EUSART_TransmitInterruptEnable *****************
  7240 ;; Defined at:
  7241 ;;		line 247 in file "mcc_generated_files/uart/src/eusart.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;		None
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		None
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;Total ram usage:        0 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 7
  7262 ;; This function calls:
  7263 ;;		Nothing
  7264 ;; This function is called by:
  7265 ;;		_SYSTEM_STARTUP
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269     0D75                     _EUSART_TransmitInterruptEnable:	
  7270                           ;psect for function _EUSART_TransmitInterruptEnable
  7271                           
  7272     0D75                     l3317:	
  7273                           ;incstack = 0
  7274                           ; Regs used in _EUSART_TransmitInterruptEnable: []
  7275                           
  7276                           
  7277                           ;mcc_generated_files/uart/src/eusart.c: 249:     PIE1bits.TXIE = 1;
  7278     0D75  0021               	movlb	1	; select bank1
  7279     0D76  1611               	bsf	17,4	;volatile
  7280     0D77                     l709:
  7281     0D77  0008               	return
  7282     0D78                     __end_of_EUSART_TransmitInterruptEnable:
  7283                           
  7284                           	psect	text21
  7285     0D72                     __ptext21:	
  7286 ;; *************** function _EUSART_TransmitEnable *****************
  7287 ;; Defined at:
  7288 ;;		line 190 in file "mcc_generated_files/uart/src/eusart.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;		None
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      void 
  7295 ;; Registers used:
  7296 ;;		None
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;Total ram usage:        0 bytes
  7307 ;; Hardware stack levels used: 1
  7308 ;; Hardware stack levels required when called: 7
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		_SYSTEM_STARTUP
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316     0D72                     _EUSART_TransmitEnable:	
  7317                           ;psect for function _EUSART_TransmitEnable
  7318                           
  7319     0D72                     l3313:	
  7320                           ;incstack = 0
  7321                           ; Regs used in _EUSART_TransmitEnable: []
  7322                           
  7323                           
  7324                           ;mcc_generated_files/uart/src/eusart.c: 192:     TX1STAbits.TXEN = 1;
  7325     0D72  0023               	movlb	3	; select bank3
  7326     0D73  169E               	bsf	30,5	;volatile
  7327     0D74                     l677:
  7328     0D74  0008               	return
  7329     0D75                     __end_of_EUSART_TransmitEnable:
  7330                           
  7331                           	psect	text22
  7332     0E71                     __ptext22:	
  7333 ;; *************** function _EUSART_RxCompleteCallbackRegister *****************
  7334 ;; Defined at:
  7335 ;;		line 446 in file "mcc_generated_files/uart/src/eusart.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
  7338 ;;		 -> APC220_Receiver_Interrupt(1), 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;Total ram usage:        2 bytes
  7355 ;; Hardware stack levels used: 1
  7356 ;; Hardware stack levels required when called: 7
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_SYSTEM_STARTUP
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364     0E71                     _EUSART_RxCompleteCallbackRegister:	
  7365                           ;psect for function _EUSART_RxCompleteCallbackRegister
  7366                           
  7367     0E71                     l3323:	
  7368                           ;incstack = 0
  7369                           ; Regs used in _EUSART_RxCompleteCallbackRegister: [wreg+status,2+status,0]
  7370                           
  7371                           
  7372                           ;mcc_generated_files/uart/src/eusart.c: 446: void EUSART_RxCompleteCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 447: {;mcc_generated_
      +                          files/uart/src/eusart.c: 448:     if(((void*)0) != callbackHandler)
  7373     0E71  0020               	movlb	0	; select bank0
  7374     0E72  0820               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler,w
  7375     0E73  0421               	iorwf	EUSART_RxCompleteCallbackRegister@callbackHandler+1,w
  7376     0E74  1903               	btfsc	3,2
  7377     0E75  2E77               	goto	u2041
  7378     0E76  2E78               	goto	u2040
  7379     0E77                     u2041:
  7380     0E77  2E7F               	goto	l787
  7381     0E78                     u2040:
  7382     0E78                     l3325:
  7383                           
  7384                           ;mcc_generated_files/uart/src/eusart.c: 449:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 450:        EUSART_RxCompleteInterruptHandler = callbackHandler;
  7385     0E78  0821               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler+1,w
  7386     0E79  0021               	movlb	1	; select bank1
  7387     0E7A  00E1               	movwf	(_EUSART_RxCompleteInterruptHandler+1)^(0+128)
  7388     0E7B  0020               	movlb	0	; select bank0
  7389     0E7C  0820               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler,w
  7390     0E7D  0021               	movlb	1	; select bank1
  7391     0E7E  00E0               	movwf	_EUSART_RxCompleteInterruptHandler^(0+128)
  7392     0E7F                     l787:
  7393     0E7F  0008               	return
  7394     0E80                     __end_of_EUSART_RxCompleteCallbackRegister:
  7395                           
  7396                           	psect	text23
  7397     0D6F                     __ptext23:	
  7398 ;; *************** function _EUSART_ReceiveInterruptEnable *****************
  7399 ;; Defined at:
  7400 ;;		line 258 in file "mcc_generated_files/uart/src/eusart.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		None
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;Total ram usage:        0 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 7
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_SYSTEM_STARTUP
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428     0D6F                     _EUSART_ReceiveInterruptEnable:	
  7429                           ;psect for function _EUSART_ReceiveInterruptEnable
  7430                           
  7431     0D6F                     l3319:	
  7432                           ;incstack = 0
  7433                           ; Regs used in _EUSART_ReceiveInterruptEnable: []
  7434                           
  7435                           
  7436                           ;mcc_generated_files/uart/src/eusart.c: 260:     PIE1bits.RCIE = 1;
  7437     0D6F  0021               	movlb	1	; select bank1
  7438     0D70  1691               	bsf	17,5	;volatile
  7439     0D71                     l715:
  7440     0D71  0008               	return
  7441     0D72                     __end_of_EUSART_ReceiveInterruptEnable:
  7442                           
  7443                           	psect	text24
  7444     0D6C                     __ptext24:	
  7445 ;; *************** function _EUSART_ReceiveEnable *****************
  7446 ;; Defined at:
  7447 ;;		line 200 in file "mcc_generated_files/uart/src/eusart.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;		None
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		None
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;Total ram usage:        0 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 7
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_SYSTEM_STARTUP
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475     0D6C                     _EUSART_ReceiveEnable:	
  7476                           ;psect for function _EUSART_ReceiveEnable
  7477                           
  7478     0D6C                     l3315:	
  7479                           ;incstack = 0
  7480                           ; Regs used in _EUSART_ReceiveEnable: []
  7481                           
  7482                           
  7483                           ;mcc_generated_files/uart/src/eusart.c: 202:     RC1STAbits.CREN = 1;
  7484     0D6C  0023               	movlb	3	; select bank3
  7485     0D6D  161D               	bsf	29,4	;volatile
  7486     0D6E                     l683:
  7487     0D6E  0008               	return
  7488     0D6F                     __end_of_EUSART_ReceiveEnable:
  7489                           
  7490                           	psect	text25
  7491     0D69                     __ptext25:	
  7492 ;; *************** function _EUSART_Enable *****************
  7493 ;; Defined at:
  7494 ;;		line 178 in file "mcc_generated_files/uart/src/eusart.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;		None
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		None
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;Total ram usage:        0 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; Hardware stack levels required when called: 7
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_SYSTEM_STARTUP
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522     0D69                     _EUSART_Enable:	
  7523                           ;psect for function _EUSART_Enable
  7524                           
  7525     0D69                     l3311:	
  7526                           ;incstack = 0
  7527                           ; Regs used in _EUSART_Enable: []
  7528                           
  7529                           
  7530                           ;mcc_generated_files/uart/src/eusart.c: 180:     RC1STAbits.SPEN = 1;
  7531     0D69  0023               	movlb	3	; select bank3
  7532     0D6A  179D               	bsf	29,7	;volatile
  7533     0D6B                     l671:
  7534     0D6B  0008               	return
  7535     0D6C                     __end_of_EUSART_Enable:
  7536                           
  7537                           	psect	text26
  7538     0F3E                     __ptext26:	
  7539 ;; *************** function _SYSTEM_Initialize *****************
  7540 ;; Defined at:
  7541 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;		None
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2, status,0, pclath, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;Total ram usage:        0 bytes
  7560 ;; Hardware stack levels used: 1
  7561 ;; Hardware stack levels required when called: 9
  7562 ;; This function calls:
  7563 ;;		_ADC_Initialize
  7564 ;;		_CLOCK_Initialize
  7565 ;;		_EUSART_Initialize
  7566 ;;		_I2C1_Initialize
  7567 ;;		_INTERRUPT_Initialize
  7568 ;;		_PIN_MANAGER_Initialize
  7569 ;;		_PWM3_Initialize
  7570 ;;		_PWM4_Initialize
  7571 ;;		_TMR2_Initialize
  7572 ;; This function is called by:
  7573 ;;		_main
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577     0F3E                     _SYSTEM_Initialize:	
  7578                           ;psect for function _SYSTEM_Initialize
  7579                           
  7580     0F3E                     l3397:	
  7581                           ;incstack = 0
  7582                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7583                           
  7584                           
  7585                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  7586     0F3E  318D  25FB  318F   	fcall	_CLOCK_Initialize
  7587     0F41                     l3399:
  7588                           
  7589                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  7590     0F41  3186  261B  318F   	fcall	_PIN_MANAGER_Initialize
  7591     0F44                     l3401:
  7592                           
  7593                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
  7594     0F44  318E  2636  318F   	fcall	_TMR2_Initialize
  7595                           
  7596                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  7597     0F47  318E  261F  318F   	fcall	_ADC_Initialize
  7598     0F4A                     l3403:
  7599                           
  7600                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  7601     0F4A  3186  26DA  318F   	fcall	_EUSART_Initialize
  7602     0F4D                     l3405:
  7603                           
  7604                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  7605     0F4D  318E  2662  318F   	fcall	_I2C1_Initialize
  7606                           
  7607                           ;mcc_generated_files/system/src/system.c: 47:     PWM3_Initialize();
  7608     0F50  318E  260D  318F   	fcall	_PWM3_Initialize
  7609                           
  7610                           ;mcc_generated_files/system/src/system.c: 48:     PWM4_Initialize();
  7611     0F53  318E  2616  318F   	fcall	_PWM4_Initialize
  7612                           
  7613                           ;mcc_generated_files/system/src/system.c: 49:     INTERRUPT_Initialize();
  7614     0F56  318E  262A  318F   	fcall	_INTERRUPT_Initialize
  7615     0F59                     l419:
  7616     0F59  0008               	return
  7617     0F5A                     __end_of_SYSTEM_Initialize:
  7618                           
  7619                           	psect	text27
  7620     0E36                     __ptext27:	
  7621 ;; *************** function _TMR2_Initialize *****************
  7622 ;; Defined at:
  7623 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;Total ram usage:        0 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 7
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_SYSTEM_Initialize
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651     0E36                     _TMR2_Initialize:	
  7652                           ;psect for function _TMR2_Initialize
  7653                           
  7654     0E36                     l3265:	
  7655                           ;incstack = 0
  7656                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7657                           
  7658                           
  7659                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xFF;
  7660     0E36  30FF               	movlw	255
  7661     0E37  0020               	movlb	0	; select bank0
  7662     0E38  009B               	movwf	27	;volatile
  7663     0E39                     l3267:
  7664                           
  7665                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
  7666     0E39  019A               	clrf	26	;volatile
  7667     0E3A                     l3269:
  7668                           
  7669                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
  7670     0E3A  3000               	movlw	0
  7671     0E3B  0021               	movlb	1	; select bank1
  7672     0E3C  00E8               	movwf	_TMR2_PeriodMatchCallback^(0+128)
  7673     0E3D  3000               	movlw	0
  7674     0E3E  00E9               	movwf	(_TMR2_PeriodMatchCallback^(0+128)+1)
  7675     0E3F                     l3271:
  7676                           
  7677                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
  7678     0E3F  0020               	movlb	0	; select bank0
  7679     0E40  1091               	bcf	17,1	;volatile
  7680     0E41                     l3273:
  7681                           
  7682                           ;mcc_generated_files/timer/src/tmr2.c: 53:     T2CON = (0 << 0x0)
  7683     0E41  3004               	movlw	4
  7684     0E42  009C               	movwf	28	;volatile
  7685     0E43                     l525:
  7686     0E43  0008               	return
  7687     0E44                     __end_of_TMR2_Initialize:
  7688                           
  7689                           	psect	text28
  7690     0E16                     __ptext28:	
  7691 ;; *************** function _PWM4_Initialize *****************
  7692 ;; Defined at:
  7693 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm4.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; Hardware stack levels required when called: 7
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_SYSTEM_Initialize
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721     0E16                     _PWM4_Initialize:	
  7722                           ;psect for function _PWM4_Initialize
  7723                           
  7724     0E16                     l3203:	
  7725                           ;incstack = 0
  7726                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
  7727                           
  7728                           
  7729                           ;mcc_generated_files/pwm/src/pwm4.c: 50:     PWM4CON = 0x80;
  7730     0E16  3080               	movlw	128
  7731     0E17  002C               	movlb	12	; select bank12
  7732     0E18  009C               	movwf	28	;volatile
  7733     0E19                     l3205:
  7734                           
  7735                           ;mcc_generated_files/pwm/src/pwm4.c: 53:     PWM4DCH = 0x0;
  7736     0E19  019B               	clrf	27	;volatile
  7737                           
  7738                           ;mcc_generated_files/pwm/src/pwm4.c: 56:     PWM4DCL = 0x0;
  7739     0E1A  019A               	clrf	26	;volatile
  7740     0E1B                     l3207:
  7741                           
  7742                           ;mcc_generated_files/pwm/src/pwm4.c: 59:     CCPTMRSbits.P4TSEL = 0x0;
  7743     0E1B  303F               	movlw	-193
  7744     0E1C  0025               	movlb	5	; select bank5
  7745     0E1D  059E               	andwf	30,f	;volatile
  7746     0E1E                     l327:
  7747     0E1E  0008               	return
  7748     0E1F                     __end_of_PWM4_Initialize:
  7749                           
  7750                           	psect	text29
  7751     0E0D                     __ptext29:	
  7752 ;; *************** function _PWM3_Initialize *****************
  7753 ;; Defined at:
  7754 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm3.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;		None
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      void 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2, status,0
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;Total ram usage:        0 bytes
  7773 ;; Hardware stack levels used: 1
  7774 ;; Hardware stack levels required when called: 7
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_SYSTEM_Initialize
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782     0E0D                     _PWM3_Initialize:	
  7783                           ;psect for function _PWM3_Initialize
  7784                           
  7785     0E0D                     l3197:	
  7786                           ;incstack = 0
  7787                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  7788                           
  7789                           
  7790                           ;mcc_generated_files/pwm/src/pwm3.c: 50:     PWM3CON = 0x80;
  7791     0E0D  3080               	movlw	128
  7792     0E0E  002C               	movlb	12	; select bank12
  7793     0E0F  0099               	movwf	25	;volatile
  7794     0E10                     l3199:
  7795                           
  7796                           ;mcc_generated_files/pwm/src/pwm3.c: 53:     PWM3DCH = 0x0;
  7797     0E10  0198               	clrf	24	;volatile
  7798                           
  7799                           ;mcc_generated_files/pwm/src/pwm3.c: 56:     PWM3DCL = 0x0;
  7800     0E11  0197               	clrf	23	;volatile
  7801     0E12                     l3201:
  7802                           
  7803                           ;mcc_generated_files/pwm/src/pwm3.c: 59:     CCPTMRSbits.P3TSEL = 0x0;
  7804     0E12  30CF               	movlw	-49
  7805     0E13  0025               	movlb	5	; select bank5
  7806     0E14  059E               	andwf	30,f	;volatile
  7807     0E15                     l313:
  7808     0E15  0008               	return
  7809     0E16                     __end_of_PWM3_Initialize:
  7810                           
  7811                           	psect	text30
  7812     061B                     __ptext30:	
  7813 ;; *************** function _PIN_MANAGER_Initialize *****************
  7814 ;; Defined at:
  7815 ;;		line 39 in file "mcc_generated_files/system/src/pins.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0, pclath, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; Hardware stack levels required when called: 8
  7836 ;; This function calls:
  7837 ;;		_INT_IMU_SetInterruptHandler
  7838 ;; This function is called by:
  7839 ;;		_SYSTEM_Initialize
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843     061B                     _PIN_MANAGER_Initialize:	
  7844                           ;psect for function _PIN_MANAGER_Initialize
  7845                           
  7846     061B                     l3217:	
  7847                           ;incstack = 0
  7848                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7849                           
  7850                           
  7851                           ;mcc_generated_files/system/src/pins.c: 44:     LATA = 0x0;
  7852     061B  0022               	movlb	2	; select bank2
  7853     061C  018C               	clrf	12	;volatile
  7854     061D                     l3219:
  7855                           
  7856                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x3;
  7857     061D  3003               	movlw	3
  7858     061E  008E               	movwf	14	;volatile
  7859     061F                     l3221:
  7860                           
  7861                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0xF;
  7862     061F  300F               	movlw	15
  7863     0620  0021               	movlb	1	; select bank1
  7864     0621  008C               	movwf	12	;volatile
  7865     0622                     l3223:
  7866                           
  7867                           ;mcc_generated_files/system/src/pins.c: 51:     TRISC = 0x27;
  7868     0622  3027               	movlw	39
  7869     0623  008E               	movwf	14	;volatile
  7870     0624                     l3225:
  7871                           
  7872                           ;mcc_generated_files/system/src/pins.c: 56:     ANSELA = 0x37;
  7873     0624  3037               	movlw	55
  7874     0625  0023               	movlb	3	; select bank3
  7875     0626  008C               	movwf	12	;volatile
  7876     0627                     l3227:
  7877                           
  7878                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELC = 0x8;
  7879     0627  3008               	movlw	8
  7880     0628  008E               	movwf	14	;volatile
  7881     0629                     l3229:
  7882                           
  7883                           ;mcc_generated_files/system/src/pins.c: 62:     WPUA = 0x3F;
  7884     0629  303F               	movlw	63
  7885     062A  0024               	movlb	4	; select bank4
  7886     062B  008C               	movwf	12	;volatile
  7887     062C                     l3231:
  7888                           
  7889                           ;mcc_generated_files/system/src/pins.c: 63:     WPUC = 0x3F;
  7890     062C  303F               	movlw	63
  7891     062D  008E               	movwf	14	;volatile
  7892     062E                     l3233:
  7893                           
  7894                           ;mcc_generated_files/system/src/pins.c: 64:     OPTION_REGbits.nWPUEN = 0x0;
  7895     062E  0021               	movlb	1	; select bank1
  7896     062F  1395               	bcf	21,7	;volatile
  7897                           
  7898                           ;mcc_generated_files/system/src/pins.c: 70:     ODCONA = 0x0;
  7899     0630  0025               	movlb	5	; select bank5
  7900     0631  018C               	clrf	12	;volatile
  7901                           
  7902                           ;mcc_generated_files/system/src/pins.c: 71:     ODCONC = 0x0;
  7903     0632  018E               	clrf	14	;volatile
  7904     0633                     l3235:
  7905                           
  7906                           ;mcc_generated_files/system/src/pins.c: 75:     SLRCONA = 0x37;
  7907     0633  3037               	movlw	55
  7908     0634  0026               	movlb	6	; select bank6
  7909     0635  008C               	movwf	12	;volatile
  7910     0636                     l3237:
  7911                           
  7912                           ;mcc_generated_files/system/src/pins.c: 76:     SLRCONC = 0x3F;
  7913     0636  303F               	movlw	63
  7914     0637  008E               	movwf	14	;volatile
  7915     0638                     l3239:
  7916                           
  7917                           ;mcc_generated_files/system/src/pins.c: 80:     INLVLA = 0x3F;
  7918     0638  303F               	movlw	63
  7919     0639  0027               	movlb	7	; select bank7
  7920     063A  008C               	movwf	12	;volatile
  7921     063B                     l3241:
  7922                           
  7923                           ;mcc_generated_files/system/src/pins.c: 81:     INLVLC = 0x3F;
  7924     063B  303F               	movlw	63
  7925     063C  008E               	movwf	14	;volatile
  7926     063D                     l3243:
  7927                           
  7928                           ;mcc_generated_files/system/src/pins.c: 86:     RXPPS = 0x15;
  7929     063D  3015               	movlw	21
  7930     063E  003C               	movlb	28	; select bank28
  7931     063F  00A4               	movwf	36	;volatile
  7932     0640                     l3245:
  7933                           
  7934                           ;mcc_generated_files/system/src/pins.c: 87:     RA5PPS = 14;
  7935     0640  300E               	movlw	14
  7936     0641  003D               	movlb	29	; select bank29
  7937     0642  0095               	movwf	21	;volatile
  7938     0643                     l3247:
  7939                           
  7940                           ;mcc_generated_files/system/src/pins.c: 88:     RA4PPS = 15;
  7941     0643  300F               	movlw	15
  7942     0644  0094               	movwf	20	;volatile
  7943     0645                     l3249:
  7944                           
  7945                           ;mcc_generated_files/system/src/pins.c: 89:     RC3PPS = 20;
  7946     0645  3014               	movlw	20
  7947     0646  00A3               	movwf	35	;volatile
  7948     0647                     l3251:
  7949                           
  7950                           ;mcc_generated_files/system/src/pins.c: 90:     SSPCLKPPS = 0x10;
  7951     0647  3010               	movlw	16
  7952     0648  003C               	movlb	28	; select bank28
  7953     0649  00A0               	movwf	32	;volatile
  7954     064A                     l3253:
  7955                           
  7956                           ;mcc_generated_files/system/src/pins.c: 91:     RC0PPS = 16;
  7957     064A  3010               	movlw	16
  7958     064B  003D               	movlb	29	; select bank29
  7959     064C  00A0               	movwf	32	;volatile
  7960     064D                     l3255:
  7961                           
  7962                           ;mcc_generated_files/system/src/pins.c: 92:     SSPDATPPS = 0x11;
  7963     064D  3011               	movlw	17
  7964     064E  003C               	movlb	28	; select bank28
  7965     064F  00A1               	movwf	33	;volatile
  7966     0650                     l3257:
  7967                           
  7968                           ;mcc_generated_files/system/src/pins.c: 93:     RC1PPS = 17;
  7969     0650  3011               	movlw	17
  7970     0651  003D               	movlb	29	; select bank29
  7971     0652  00A1               	movwf	33	;volatile
  7972                           
  7973                           ;mcc_generated_files/system/src/pins.c: 102:     IOCAP = 0x0;
  7974     0653  0027               	movlb	7	; select bank7
  7975     0654  0191               	clrf	17	;volatile
  7976                           
  7977                           ;mcc_generated_files/system/src/pins.c: 103:     IOCAN = 0x0;
  7978     0655  0192               	clrf	18	;volatile
  7979                           
  7980                           ;mcc_generated_files/system/src/pins.c: 104:     IOCAF = 0x0;
  7981     0656  0193               	clrf	19	;volatile
  7982     0657                     l3259:
  7983                           
  7984                           ;mcc_generated_files/system/src/pins.c: 105:     IOCCP = 0x4;
  7985     0657  3004               	movlw	4
  7986     0658  0097               	movwf	23	;volatile
  7987                           
  7988                           ;mcc_generated_files/system/src/pins.c: 106:     IOCCN = 0x0;
  7989     0659  0198               	clrf	24	;volatile
  7990                           
  7991                           ;mcc_generated_files/system/src/pins.c: 107:     IOCCF = 0x0;
  7992     065A  0199               	clrf	25	;volatile
  7993     065B                     l3261:
  7994                           
  7995                           ;mcc_generated_files/system/src/pins.c: 109:     INT_IMU_SetInterruptHandler(INT_IMU_Def
      +                          aultInterruptHandler);
  7996     065B  3000               	movlw	0
  7997     065C  0020               	movlb	0	; select bank0
  7998     065D  00A0               	movwf	INT_IMU_SetInterruptHandler@InterruptHandler
  7999     065E  3000               	movlw	0
  8000     065F  00A1               	movwf	INT_IMU_SetInterruptHandler@InterruptHandler+1
  8001     0660  318E  2604  3186   	fcall	_INT_IMU_SetInterruptHandler
  8002     0663                     l3263:
  8003                           
  8004                           ;mcc_generated_files/system/src/pins.c: 112:     INTCONbits.IOCIE = 1;
  8005     0663  158B               	bsf	11,3	;volatile
  8006     0664                     l492:
  8007     0664  0008               	return
  8008     0665                     __end_of_PIN_MANAGER_Initialize:
  8009                           
  8010                           	psect	text31
  8011     0E04                     __ptext31:	
  8012 ;; *************** function _INT_IMU_SetInterruptHandler *****************
  8013 ;; Defined at:
  8014 ;;		line 142 in file "mcc_generated_files/system/src/pins.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8017 ;;		 -> INT_IMU_DefaultInterruptHandler(1), 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  1    wreg      void 
  8022 ;; Registers used:
  8023 ;;		wreg
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;Total ram usage:        2 bytes
  8034 ;; Hardware stack levels used: 1
  8035 ;; Hardware stack levels required when called: 7
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_PIN_MANAGER_Initialize
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043     0E04                     _INT_IMU_SetInterruptHandler:	
  8044                           ;psect for function _INT_IMU_SetInterruptHandler
  8045                           
  8046     0E04                     l3067:	
  8047                           ;incstack = 0
  8048                           ; Regs used in _INT_IMU_SetInterruptHandler: [wreg]
  8049                           
  8050                           
  8051                           ;mcc_generated_files/system/src/pins.c: 143:     INT_IMU_InterruptHandler = InterruptHan
      +                          dler;
  8052     0E04  0020               	movlb	0	; select bank0
  8053     0E05  0821               	movf	INT_IMU_SetInterruptHandler@InterruptHandler+1,w
  8054     0E06  0021               	movlb	1	; select bank1
  8055     0E07  00EB               	movwf	(_INT_IMU_InterruptHandler+1)^(0+128)
  8056     0E08  0020               	movlb	0	; select bank0
  8057     0E09  0820               	movf	INT_IMU_SetInterruptHandler@InterruptHandler,w
  8058     0E0A  0021               	movlb	1	; select bank1
  8059     0E0B  00EA               	movwf	_INT_IMU_InterruptHandler^(0+128)
  8060     0E0C                     l503:
  8061     0E0C  0008               	return
  8062     0E0D                     __end_of_INT_IMU_SetInterruptHandler:
  8063                           
  8064                           	psect	text32
  8065     0E2A                     __ptext32:	
  8066 ;; *************** function _INTERRUPT_Initialize *****************
  8067 ;; Defined at:
  8068 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0, pclath, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used: 1
  8088 ;; Hardware stack levels required when called: 8
  8089 ;; This function calls:
  8090 ;;		_INT_SetInterruptHandler
  8091 ;; This function is called by:
  8092 ;;		_SYSTEM_Initialize
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096     0E2A                     _INTERRUPT_Initialize:	
  8097                           ;psect for function _INTERRUPT_Initialize
  8098                           
  8099     0E2A                     l3209:	
  8100                           ;incstack = 0
  8101                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8102                           
  8103                           
  8104                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  8105     0E2A  108B               	bcf	11,1	;volatile
  8106                           
  8107                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  8108     0E2B  0021               	movlb	1	; select bank1
  8109     0E2C  1715               	bsf	21,6	;volatile
  8110     0E2D                     l3211:
  8111                           
  8112                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  8113     0E2D  3000               	movlw	0
  8114     0E2E  0020               	movlb	0	; select bank0
  8115     0E2F  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  8116     0E30  3000               	movlw	0
  8117     0E31  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  8118     0E32  318D  25BC  318E   	fcall	_INT_SetInterruptHandler
  8119     0E35                     l361:
  8120     0E35  0008               	return
  8121     0E36                     __end_of_INTERRUPT_Initialize:
  8122                           
  8123                           	psect	text33
  8124     0DBC                     __ptext33:	
  8125 ;; *************** function _INT_SetInterruptHandler *****************
  8126 ;; Defined at:
  8127 ;;		line 109 in file "mcc_generated_files/system/src/interrupt.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8130 ;;		 -> INT_DefaultInterruptHandler(1), 
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;		None
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  1    wreg      void 
  8135 ;; Registers used:
  8136 ;;		wreg
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;Total ram usage:        2 bytes
  8147 ;; Hardware stack levels used: 1
  8148 ;; Hardware stack levels required when called: 7
  8149 ;; This function calls:
  8150 ;;		Nothing
  8151 ;; This function is called by:
  8152 ;;		_INTERRUPT_Initialize
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156     0DBC                     _INT_SetInterruptHandler:	
  8157                           ;psect for function _INT_SetInterruptHandler
  8158                           
  8159     0DBC                     l3065:	
  8160                           ;incstack = 0
  8161                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  8162                           
  8163                           
  8164                           ;mcc_generated_files/system/src/interrupt.c: 110:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  8165     0DBC  0020               	movlb	0	; select bank0
  8166     0DBD  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  8167     0DBE  00EC               	movwf	_INT_InterruptHandler+1
  8168     0DBF  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
  8169     0DC0  00EB               	movwf	_INT_InterruptHandler
  8170     0DC1                     l386:
  8171     0DC1  0008               	return
  8172     0DC2                     __end_of_INT_SetInterruptHandler:
  8173                           
  8174                           	psect	text34
  8175     0E62                     __ptext34:	
  8176 ;; *************** function _I2C1_Initialize *****************
  8177 ;; Defined at:
  8178 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		status,2, status,0, pclath, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 8
  8199 ;; This function calls:
  8200 ;;		_I2C1_InterruptsEnable
  8201 ;; This function is called by:
  8202 ;;		_SYSTEM_Initialize
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206     0E62                     _I2C1_Initialize:	
  8207                           ;psect for function _I2C1_Initialize
  8208                           
  8209     0E62                     l3161:	
  8210                           ;incstack = 0
  8211                           ; Regs used in _I2C1_Initialize: [status,2+status,0+pclath+cstack]
  8212                           
  8213                           
  8214                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  8215     0E62  3080               	movlw	128
  8216     0E63  0024               	movlb	4	; select bank4
  8217     0E64  0094               	movwf	20	;volatile
  8218                           
  8219                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  8220     0E65  3008               	movlw	8
  8221     0E66  0095               	movwf	21	;volatile
  8222     0E67                     l3163:
  8223                           
  8224                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  8225     0E67  0196               	clrf	22	;volatile
  8226                           
  8227                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  8228     0E68  0197               	clrf	23	;volatile
  8229     0E69                     l3165:
  8230                           
  8231                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x9;
  8232     0E69  3009               	movlw	9
  8233     0E6A  0092               	movwf	18	;volatile
  8234     0E6B                     l3167:
  8235                           
  8236                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  8237     0E6B  318D  259C  318E   	fcall	_I2C1_InterruptsEnable
  8238     0E6E                     l3169:
  8239                           
  8240                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     SSP1CON1bits.SSPEN = 1;
  8241     0E6E  0024               	movlb	4	; select bank4
  8242     0E6F  1695               	bsf	21,5	;volatile
  8243     0E70                     l157:
  8244     0E70  0008               	return
  8245     0E71                     __end_of_I2C1_Initialize:
  8246                           
  8247                           	psect	text35
  8248     0D9C                     __ptext35:	
  8249 ;; *************** function _I2C1_InterruptsEnable *****************
  8250 ;; Defined at:
  8251 ;;		line 474 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		None
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;Total ram usage:        0 bytes
  8270 ;; Hardware stack levels used: 1
  8271 ;; Hardware stack levels required when called: 7
  8272 ;; This function calls:
  8273 ;;		Nothing
  8274 ;; This function is called by:
  8275 ;;		_I2C1_Initialize
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279     0D9C                     _I2C1_InterruptsEnable:	
  8280                           ;psect for function _I2C1_InterruptsEnable
  8281                           
  8282     0D9C                     l2961:	
  8283                           ;incstack = 0
  8284                           ; Regs used in _I2C1_InterruptsEnable: []
  8285                           
  8286                           
  8287                           ;mcc_generated_files/i2c_host/src/mssp.c: 476:     PIE1bits.SSP1IE = 1;
  8288     0D9C  0021               	movlb	1	; select bank1
  8289     0D9D  1591               	bsf	17,3	;volatile
  8290                           
  8291                           ;mcc_generated_files/i2c_host/src/mssp.c: 477:     PIE2bits.BCL1IE = 1;
  8292     0D9E  1592               	bsf	18,3	;volatile
  8293     0D9F                     l290:
  8294     0D9F  0008               	return
  8295     0DA0                     __end_of_I2C1_InterruptsEnable:
  8296                           
  8297                           	psect	text36
  8298     06DA                     __ptext36:	
  8299 ;; *************** function _EUSART_Initialize *****************
  8300 ;; Defined at:
  8301 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;		None
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;		None
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg, status,2, status,0, pclath, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;Total ram usage:        0 bytes
  8320 ;; Hardware stack levels used: 1
  8321 ;; Hardware stack levels required when called: 8
  8322 ;; This function calls:
  8323 ;;		_EUSART_FramingErrorCallbackRegister
  8324 ;;		_EUSART_OverrunErrorCallbackRegister
  8325 ;; This function is called by:
  8326 ;;		_SYSTEM_Initialize
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330     06DA                     _EUSART_Initialize:	
  8331                           ;psect for function _EUSART_Initialize
  8332                           
  8333     06DA                     l3275:	
  8334                           ;incstack = 0
  8335                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8336                           
  8337                           
  8338                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
  8339     06DA  0021               	movlb	1	; select bank1
  8340     06DB  1291               	bcf	17,5	;volatile
  8341     06DC                     l3277:
  8342                           
  8343                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
  8344     06DC  30D1               	movlw	low _EUSART_ReceiveISR
  8345     06DD  00EC               	movwf	_EUSART_RxInterruptHandler^(0+128)
  8346     06DE  3004               	movlw	high _EUSART_ReceiveISR
  8347     06DF  00ED               	movwf	(_EUSART_RxInterruptHandler^(0+128)+1)
  8348     06E0                     l3279:
  8349                           
  8350                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
  8351     06E0  1211               	bcf	17,4	;volatile
  8352                           
  8353                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
  8354     06E1  300A               	movlw	low _EUSART_TransmitISR
  8355     06E2  00EE               	movwf	_EUSART_TxInterruptHandler^(0+128)
  8356     06E3  300F               	movlw	high _EUSART_TransmitISR
  8357     06E4  00EF               	movwf	(_EUSART_TxInterruptHandler^(0+128)+1)
  8358     06E5                     l3281:
  8359                           
  8360                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
  8361     06E5  3048               	movlw	72
  8362     06E6  0023               	movlb	3	; select bank3
  8363     06E7  009F               	movwf	31	;volatile
  8364     06E8                     l3283:
  8365                           
  8366                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
  8367     06E8  3090               	movlw	144
  8368     06E9  009D               	movwf	29	;volatile
  8369     06EA                     l3285:
  8370                           
  8371                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
  8372     06EA  3026               	movlw	38
  8373     06EB  009E               	movwf	30	;volatile
  8374     06EC                     l3287:
  8375                           
  8376                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0xA0;
  8377     06EC  30A0               	movlw	160
  8378     06ED  009B               	movwf	27	;volatile
  8379     06EE                     l3289:
  8380                           
  8381                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x1;
  8382     06EE  3001               	movlw	1
  8383     06EF  009C               	movwf	28	;volatile
  8384     06F0                     l3291:
  8385                           
  8386                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  8387     06F0  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  8388     06F1  0020               	movlb	0	; select bank0
  8389     06F2  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  8390     06F3  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  8391     06F4  00A1               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  8392     06F5  318E  2644  3186   	fcall	_EUSART_FramingErrorCallbackRegister
  8393     06F8                     l3293:
  8394                           
  8395                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  8396     06F8  3078               	movlw	low _EUSART_DefaultOverrunErrorCallback
  8397     06F9  0020               	movlb	0	; select bank0
  8398     06FA  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  8399     06FB  300D               	movlw	high _EUSART_DefaultOverrunErrorCallback
  8400     06FC  00A1               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  8401     06FD  318E  2653  3186   	fcall	_EUSART_OverrunErrorCallbackRegister
  8402     0700                     l3295:
  8403                           
  8404                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
  8405     0700  0021               	movlb	1	; select bank1
  8406     0701  01E4               	clrf	_eusartRxLastError^(0+128)	;volatile
  8407     0702  01E5               	clrf	(_eusartRxLastError+1)^(0+128)	;volatile
  8408     0703                     l3297:
  8409                           
  8410                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
  8411     0703  01FD               	clrf	_eusartTxHead	;volatile
  8412     0704                     l3299:
  8413                           
  8414                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
  8415     0704  01FC               	clrf	_eusartTxTail	;volatile
  8416     0705                     l3301:
  8417                           
  8418                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
  8419     0705  3008               	movlw	8
  8420     0706  00FB               	movwf	_eusartTxBufferRemaining	;volatile
  8421     0707                     l3303:
  8422                           
  8423                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
  8424     0707  01FA               	clrf	_eusartRxHead	;volatile
  8425     0708                     l3305:
  8426                           
  8427                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
  8428     0708  01F9               	clrf	_eusartRxTail	;volatile
  8429     0709                     l3307:
  8430                           
  8431                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
  8432     0709  0020               	movlb	0	; select bank0
  8433     070A  01EF               	clrf	_eusartRxCount	;volatile
  8434     070B                     l3309:
  8435                           
  8436                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
  8437     070B  0021               	movlb	1	; select bank1
  8438     070C  1691               	bsf	17,5	;volatile
  8439     070D                     l665:
  8440     070D  0008               	return
  8441     070E                     __end_of_EUSART_Initialize:
  8442                           
  8443                           	psect	text37
  8444     0E53                     __ptext37:	
  8445 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  8446 ;; Defined at:
  8447 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
  8450 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg, status,2, status,0
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;Total ram usage:        2 bytes
  8467 ;; Hardware stack levels used: 1
  8468 ;; Hardware stack levels required when called: 7
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_EUSART_Initialize
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476     0E53                     _EUSART_OverrunErrorCallbackRegister:	
  8477                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  8478                           
  8479     0E53                     l3073:	
  8480                           ;incstack = 0
  8481                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  8482                           
  8483                           
  8484                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
  8485     0E53  0020               	movlb	0	; select bank0
  8486     0E54  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  8487     0E55  0421               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  8488     0E56  1903               	btfsc	3,2
  8489     0E57  2E59               	goto	u1871
  8490     0E58  2E5A               	goto	u1870
  8491     0E59                     u1871:
  8492     0E59  2E61               	goto	l783
  8493     0E5A                     u1870:
  8494     0E5A                     l3075:
  8495                           
  8496                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
  8497     0E5A  0821               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  8498     0E5B  0021               	movlb	1	; select bank1
  8499     0E5C  00DD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8500     0E5D  0020               	movlb	0	; select bank0
  8501     0E5E  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  8502     0E5F  0021               	movlb	1	; select bank1
  8503     0E60  00DC               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8504     0E61                     l783:
  8505     0E61  0008               	return
  8506     0E62                     __end_of_EUSART_OverrunErrorCallbackRegister:
  8507                           
  8508                           	psect	text38
  8509     0E44                     __ptext38:	
  8510 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  8511 ;; Defined at:
  8512 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
  8515 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;Total ram usage:        2 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 7
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_EUSART_Initialize
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541     0E44                     _EUSART_FramingErrorCallbackRegister:	
  8542                           ;psect for function _EUSART_FramingErrorCallbackRegister
  8543                           
  8544     0E44                     l3069:	
  8545                           ;incstack = 0
  8546                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  8547                           
  8548                           
  8549                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
  8550     0E44  0020               	movlb	0	; select bank0
  8551     0E45  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  8552     0E46  0421               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  8553     0E47  1903               	btfsc	3,2
  8554     0E48  2E4A               	goto	u1861
  8555     0E49  2E4B               	goto	u1860
  8556     0E4A                     u1861:
  8557     0E4A  2E52               	goto	l779
  8558     0E4B                     u1860:
  8559     0E4B                     l3071:
  8560                           
  8561                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
  8562     0E4B  0821               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  8563     0E4C  0021               	movlb	1	; select bank1
  8564     0E4D  00DF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8565     0E4E  0020               	movlb	0	; select bank0
  8566     0E4F  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  8567     0E50  0021               	movlb	1	; select bank1
  8568     0E51  00DE               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8569     0E52                     l779:
  8570     0E52  0008               	return
  8571     0E53                     __end_of_EUSART_FramingErrorCallbackRegister:
  8572                           
  8573                           	psect	text39
  8574     0DFB                     __ptext39:	
  8575 ;; *************** function _CLOCK_Initialize *****************
  8576 ;; Defined at:
  8577 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		status,2
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used: 1
  8597 ;; Hardware stack levels required when called: 7
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_SYSTEM_Initialize
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605     0DFB                     _CLOCK_Initialize:	
  8606                           ;psect for function _CLOCK_Initialize
  8607                           
  8608     0DFB                     l3213:	
  8609                           ;incstack = 0
  8610                           ; Regs used in _CLOCK_Initialize: [status,2]
  8611                           
  8612                           
  8613                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  8614     0DFB  307A               	movlw	122
  8615     0DFC  0021               	movlb	1	; select bank1
  8616     0DFD  0099               	movwf	25	;volatile
  8617                           
  8618                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (1 << 0x7)
  8619     0DFE  3080               	movlw	128
  8620     0DFF  0022               	movlb	2	; select bank2
  8621     0E00  0096               	movwf	22	;volatile
  8622     0E01                     l3215:
  8623                           
  8624                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  8625     0E01  0021               	movlb	1	; select bank1
  8626     0E02  0198               	clrf	24	;volatile
  8627     0E03                     l398:
  8628     0E03  0008               	return
  8629     0E04                     __end_of_CLOCK_Initialize:
  8630                           
  8631                           	psect	text40
  8632     0E1F                     __ptext40:	
  8633 ;; *************** function _ADC_Initialize *****************
  8634 ;; Defined at:
  8635 ;;		line 53 in file "mcc_generated_files/adc/src/adc.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		status,2
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 7
  8656 ;; This function calls:
  8657 ;;		Nothing
  8658 ;; This function is called by:
  8659 ;;		_SYSTEM_Initialize
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663     0E1F                     _ADC_Initialize:	
  8664                           ;psect for function _ADC_Initialize
  8665                           
  8666     0E1F                     l3141:	
  8667                           ;incstack = 0
  8668                           ; Regs used in _ADC_Initialize: [status,2]
  8669                           
  8670                           
  8671                           ;mcc_generated_files/adc/src/adc.c: 56:     ADCON1 = 0x20;
  8672     0E1F  3020               	movlw	32
  8673     0E20  0021               	movlb	1	; select bank1
  8674     0E21  009E               	movwf	30	;volatile
  8675     0E22                     l3143:
  8676                           
  8677                           ;mcc_generated_files/adc/src/adc.c: 59:     ADRESL = 0x0;
  8678     0E22  019B               	clrf	27	;volatile
  8679                           
  8680                           ;mcc_generated_files/adc/src/adc.c: 62:     ADRESH = 0x0;
  8681     0E23  019C               	clrf	28	;volatile
  8682                           
  8683                           ;mcc_generated_files/adc/src/adc.c: 65:     ADCON2 = 0x0;
  8684     0E24  019F               	clrf	31	;volatile
  8685     0E25                     l3145:
  8686                           
  8687                           ;mcc_generated_files/adc/src/adc.c: 68:     ADCON0 = 0x1;
  8688     0E25  3001               	movlw	1
  8689     0E26  009D               	movwf	29	;volatile
  8690     0E27                     l3147:
  8691                           
  8692                           ;mcc_generated_files/adc/src/adc.c: 71:     PIR1bits.ADIF = 0;
  8693     0E27  0020               	movlb	0	; select bank0
  8694     0E28  1311               	bcf	17,6	;volatile
  8695     0E29                     l19:
  8696     0E29  0008               	return
  8697     0E2A                     __end_of_ADC_Initialize:
  8698                           
  8699                           	psect	intentry
  8700     0004                     __pintentry:	
  8701 ;; *************** function _INTERRUPT_InterruptManager *****************
  8702 ;; Defined at:
  8703 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;		None
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;		None
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      void 
  8710 ;; Registers used:
  8711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;Total ram usage:        0 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; Hardware stack levels required when called: 6
  8724 ;; This function calls:
  8725 ;;		NULL
  8726 ;;		_EUSART_ReceiveISR
  8727 ;;		_EUSART_TransmitISR
  8728 ;;		_I2C1_ERROR_ISR
  8729 ;;		_I2C1_ISR
  8730 ;; This function is called by:
  8731 ;;		Interrupt level 1
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735     0004                     _INTERRUPT_InterruptManager:
  8736                           
  8737                           ;incstack = 0
  8738     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8739                           
  8740                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8741     0005  3180               	pagesel	$
  8742     0006                     i1l3615:
  8743                           
  8744                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
  8745     0006  1F0B               	btfss	11,6	;volatile
  8746     0007  2809               	goto	u225_21
  8747     0008  280A               	goto	u225_20
  8748     0009                     u225_21:
  8749     0009  2848               	goto	i1l376
  8750     000A                     u225_20:
  8751     000A                     i1l3617:
  8752                           
  8753                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  8754     000A  0021               	movlb	1	; select bank1
  8755     000B  1E11               	btfss	17,4	;volatile
  8756     000C  280E               	goto	u226_21
  8757     000D  280F               	goto	u226_20
  8758     000E                     u226_21:
  8759     000E  281B               	goto	i1l367
  8760     000F                     u226_20:
  8761     000F                     i1l3619:
  8762     000F  0020               	movlb	0	; select bank0
  8763     0010  1E11               	btfss	17,4	;volatile
  8764     0011  2813               	goto	u227_21
  8765     0012  2814               	goto	u227_20
  8766     0013                     u227_21:
  8767     0013  281B               	goto	i1l367
  8768     0014                     u227_20:
  8769     0014                     i1l3621:
  8770                           
  8771                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
  8772     0014  0021               	movlb	1	; select bank1
  8773     0015  086F               	movf	(_EUSART_TxInterruptHandler+1)^(0+128),w
  8774     0016  008A               	movwf	10
  8775     0017  086E               	movf	_EUSART_TxInterruptHandler^(0+128),w
  8776     0018  000A               	callw
  8777     0019  3180               	pagesel	$
  8778                           
  8779                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  8780     001A  2848               	goto	i1l376
  8781     001B                     i1l367:	
  8782                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
  8783                           
  8784     001B  0021               	movlb	1	; select bank1
  8785     001C  1E91               	btfss	17,5	;volatile
  8786     001D  281F               	goto	u228_21
  8787     001E  2820               	goto	u228_20
  8788     001F                     u228_21:
  8789     001F  282C               	goto	i1l369
  8790     0020                     u228_20:
  8791     0020                     i1l3623:
  8792     0020  0020               	movlb	0	; select bank0
  8793     0021  1E91               	btfss	17,5	;volatile
  8794     0022  2824               	goto	u229_21
  8795     0023  2825               	goto	u229_20
  8796     0024                     u229_21:
  8797     0024  282C               	goto	i1l369
  8798     0025                     u229_20:
  8799     0025                     i1l3625:
  8800                           
  8801                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
  8802     0025  0021               	movlb	1	; select bank1
  8803     0026  086D               	movf	(_EUSART_RxInterruptHandler+1)^(0+128),w
  8804     0027  008A               	movwf	10
  8805     0028  086C               	movf	_EUSART_RxInterruptHandler^(0+128),w
  8806     0029  000A               	callw
  8807     002A  3180               	pagesel	$
  8808                           
  8809                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
  8810     002B  2848               	goto	i1l376
  8811     002C                     i1l369:	
  8812                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
  8813                           
  8814     002C  0021               	movlb	1	; select bank1
  8815     002D  1D92               	btfss	18,3	;volatile
  8816     002E  2830               	goto	u230_21
  8817     002F  2831               	goto	u230_20
  8818     0030                     u230_21:
  8819     0030  283A               	goto	i1l371
  8820     0031                     u230_20:
  8821     0031                     i1l3627:
  8822     0031  0020               	movlb	0	; select bank0
  8823     0032  1D92               	btfss	18,3	;volatile
  8824     0033  2835               	goto	u231_21
  8825     0034  2836               	goto	u231_20
  8826     0035                     u231_21:
  8827     0035  283A               	goto	i1l371
  8828     0036                     u231_20:
  8829     0036                     i1l3629:
  8830                           
  8831                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ERROR_ISR();
  8832     0036  318D  2594  3180   	fcall	_I2C1_ERROR_ISR
  8833                           
  8834                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
  8835     0039  2848               	goto	i1l376
  8836     003A                     i1l371:	
  8837                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
  8838                           
  8839     003A  0021               	movlb	1	; select bank1
  8840     003B  1D91               	btfss	17,3	;volatile
  8841     003C  283E               	goto	u232_21
  8842     003D  283F               	goto	u232_20
  8843     003E                     u232_21:
  8844     003E  2848               	goto	i1l370
  8845     003F                     u232_20:
  8846     003F                     i1l3631:
  8847     003F  0020               	movlb	0	; select bank0
  8848     0040  1D91               	btfss	17,3	;volatile
  8849     0041  2843               	goto	u233_21
  8850     0042  2844               	goto	u233_20
  8851     0043                     u233_21:
  8852     0043  2848               	goto	i1l370
  8853     0044                     u233_20:
  8854     0044                     i1l3633:
  8855                           
  8856                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             I2C1_ISR();
  8857     0044  318D  2598  3180   	fcall	_I2C1_ISR
  8858                           
  8859                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
  8860     0047  2848               	goto	i1l376
  8861     0048                     i1l370:
  8862     0048                     i1l376:
  8863     0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8864     0049  0009               	retfie
  8865     004A                     __end_of_INTERRUPT_InterruptManager:
  8866                           
  8867                           	psect	text42
  8868     0D98                     __ptext42:	
  8869 ;; *************** function _I2C1_ISR *****************
  8870 ;; Defined at:
  8871 ;;		line 217 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;		None
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;Total ram usage:        0 bytes
  8890 ;; Hardware stack levels used: 1
  8891 ;; Hardware stack levels required when called: 5
  8892 ;; This function calls:
  8893 ;;		_I2C1_EventHandler
  8894 ;; This function is called by:
  8895 ;;		_INTERRUPT_InterruptManager
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899     0D98                     _I2C1_ISR:	
  8900                           ;psect for function _I2C1_ISR
  8901                           
  8902     0D98                     i1l3393:	
  8903                           ;incstack = 0
  8904                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8905                           
  8906                           
  8907                           ;mcc_generated_files/i2c_host/src/mssp.c: 219:     I2C1_EventHandler();
  8908     0D98  3185  25CE  318D   	fcall	_I2C1_EventHandler
  8909     0D9B                     i1l185:
  8910     0D9B  0008               	return
  8911     0D9C                     __end_of_I2C1_ISR:
  8912                           
  8913                           	psect	text43
  8914     05CE                     __ptext43:	
  8915 ;; *************** function _I2C1_EventHandler *****************
  8916 ;; Defined at:
  8917 ;;		line 254 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;Total ram usage:        2 bytes
  8936 ;; Hardware stack levels used: 1
  8937 ;; Hardware stack levels required when called: 4
  8938 ;; This function calls:
  8939 ;;		_I2C1_Close
  8940 ;;		_I2C1_EVENT_ERROR
  8941 ;;		_I2C1_EVENT_IDLE
  8942 ;;		_I2C1_EVENT_NACK
  8943 ;;		_I2C1_EVENT_RESET
  8944 ;;		_I2C1_EVENT_RX
  8945 ;;		_I2C1_EVENT_SEND_RD_ADDR
  8946 ;;		_I2C1_EVENT_SEND_WR_ADDR
  8947 ;;		_I2C1_EVENT_STOP
  8948 ;;		_I2C1_EVENT_TX
  8949 ;;		_I2C1_InterruptClear
  8950 ;;		_I2C1_IsAddr
  8951 ;;		_I2C1_IsData
  8952 ;;		_I2C1_IsNack
  8953 ;; This function is called by:
  8954 ;;		_I2C1_ISR
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958     05CE                     _I2C1_EventHandler:	
  8959                           ;psect for function _I2C1_EventHandler
  8960                           
  8961     05CE                     i1l3171:	
  8962                           ;incstack = 0
  8963                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8964                           
  8965                           
  8966                           ;mcc_generated_files/i2c_host/src/mssp.c: 256:     I2C1_InterruptClear();
  8967     05CE  318D  2557  3185   	fcall	_I2C1_InterruptClear
  8968     05D1                     i1l3173:
  8969                           
  8970                           ;mcc_generated_files/i2c_host/src/mssp.c: 257:     if (0U != SSP1STATbits.P)
  8971     05D1  0024               	movlb	4	; select bank4
  8972     05D2  1E14               	btfss	20,4	;volatile
  8973     05D3  2DD5               	goto	u199_21
  8974     05D4  2DD6               	goto	u199_20
  8975     05D5                     u199_21:
  8976     05D5  2DDA               	goto	i1l3177
  8977     05D6                     u199_20:
  8978     05D6                     i1l3175:
  8979                           
  8980                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 259:         I2C1_Close();
  8981     05D6  318E  26C5  3185   	fcall	_I2C1_Close
  8982                           
  8983                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     }
  8984     05D9  2E06               	goto	i1l3189
  8985     05DA                     i1l3177:
  8986                           
  8987                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 263:         if (I2C1_IsAddr() && I2C1_IsNack())
  8988     05DA  318D  25DC  3185   	fcall	_I2C1_IsAddr
  8989     05DD  3A00               	xorlw	0
  8990     05DE  1903               	skipnz
  8991     05DF  2DE1               	goto	u200_21
  8992     05E0  2DE2               	goto	u200_20
  8993     05E1                     u200_21:
  8994     05E1  2DF0               	goto	i1l3183
  8995     05E2                     u200_20:
  8996     05E2                     i1l3179:
  8997     05E2  318D  25B6  3185   	fcall	_I2C1_IsNack
  8998     05E5  3A00               	xorlw	0
  8999     05E6  1903               	skipnz
  9000     05E7  2DE9               	goto	u201_21
  9001     05E8  2DEA               	goto	u201_20
  9002     05E9                     u201_21:
  9003     05E9  2DF0               	goto	i1l3183
  9004     05EA                     u201_20:
  9005     05EA                     i1l3181:
  9006                           
  9007                           ;mcc_generated_files/i2c_host/src/mssp.c: 264:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 265:             i2c1Status.state = I2C_STATE_NACK;
  9008     05EA  3005               	movlw	5
  9009     05EB  0021               	movlb	1	; select bank1
  9010     05EC  00BD               	movwf	(_i2c1Status^(0+128)+13)	;volatile
  9011                           
  9012                           ;mcc_generated_files/i2c_host/src/mssp.c: 266:             i2c1Status.errorState = I2C_E
      +                          RROR_ADDR_NACK;
  9013     05ED  3001               	movlw	1
  9014     05EE  00BC               	movwf	(_i2c1Status^(0+128)+12)	;volatile
  9015                           
  9016                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         }
  9017     05EF  2E06               	goto	i1l3189
  9018     05F0                     i1l3183:
  9019     05F0  318D  25A5  3185   	fcall	_I2C1_IsData
  9020     05F3  3A00               	xorlw	0
  9021     05F4  1903               	skipnz
  9022     05F5  2DF7               	goto	u202_21
  9023     05F6  2DF8               	goto	u202_20
  9024     05F7                     u202_21:
  9025     05F7  2E06               	goto	i1l203
  9026     05F8                     u202_20:
  9027     05F8                     i1l3185:
  9028     05F8  318D  25B6  3185   	fcall	_I2C1_IsNack
  9029     05FB  3A00               	xorlw	0
  9030     05FC  1903               	skipnz
  9031     05FD  2DFF               	goto	u203_21
  9032     05FE  2E00               	goto	u203_20
  9033     05FF                     u203_21:
  9034     05FF  2E06               	goto	i1l203
  9035     0600                     u203_20:
  9036     0600                     i1l3187:
  9037                           
  9038                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 270:             i2c1Status.state = I2C_STATE_NACK;
  9039     0600  3005               	movlw	5
  9040     0601  0021               	movlb	1	; select bank1
  9041     0602  00BD               	movwf	(_i2c1Status^(0+128)+13)	;volatile
  9042                           
  9043                           ;mcc_generated_files/i2c_host/src/mssp.c: 271:             i2c1Status.errorState = I2C_E
      +                          RROR_DATA_NACK;
  9044     0603  3002               	movlw	2
  9045     0604  00BC               	movwf	(_i2c1Status^(0+128)+12)	;volatile
  9046                           
  9047                           ;mcc_generated_files/i2c_host/src/mssp.c: 272:         }
  9048     0605  2E06               	goto	i1l3189
  9049     0606                     i1l203:
  9050     0606                     i1l3189:
  9051                           
  9052                           ;mcc_generated_files/i2c_host/src/mssp.c: 279:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
  9053     0606  0021               	movlb	1	; select bank1
  9054     0607  083D               	movf	(_i2c1Status^(0+128)+13),w	;volatile
  9055     0608  00F2               	movwf	??_I2C1_EventHandler
  9056     0609  01F3               	clrf	??_I2C1_EventHandler+1
  9057     060A  35F2               	lslf	??_I2C1_EventHandler,f
  9058     060B  0DF3               	rlf	??_I2C1_EventHandler+1,f
  9059     060C  30D1               	movlw	low _i2c1_eventTable
  9060     060D  0772               	addwf	??_I2C1_EventHandler,w
  9061     060E  0084               	movwf	4
  9062     060F  3010               	movlw	high _i2c1_eventTable
  9063     0610  3D73               	addwfc	??_I2C1_EventHandler+1,w
  9064     0611  3880               	iorlw	128
  9065     0612  0085               	movwf	5
  9066     0613  3F01               	moviw [1]fsr0
  9067     0614  008A               	movwf	10
  9068     0615  3F00               	moviw [0]fsr0
  9069     0616  000A               	callw
  9070     0617  3185               	pagesel	$
  9071     0618  0021               	movlb	1	; select bank1
  9072     0619  00BD               	movwf	(_i2c1Status^(0+128)+13)	;volatile
  9073     061A                     i1l206:
  9074     061A  0008               	return
  9075     061B                     __end_of_I2C1_EventHandler:
  9076                           
  9077                           	psect	text44
  9078     0DB6                     __ptext44:	
  9079 ;; *************** function _I2C1_IsNack *****************
  9080 ;; Defined at:
  9081 ;;		line 454 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      _Bool 
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, status,0
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;Total ram usage:        0 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_I2C1_EventHandler
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108     0DB6                     _I2C1_IsNack:	
  9109                           ;psect for function _I2C1_IsNack
  9110                           
  9111     0DB6                     i1l2967:	
  9112                           ;incstack = 0
  9113                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
  9114                           
  9115                           
  9116                           ;mcc_generated_files/i2c_host/src/mssp.c: 456:     return SSP1CON2bits.ACKSTAT;
  9117     0DB6  0024               	movlb	4	; select bank4
  9118     0DB7  0E16               	swapf	22,w	;volatile
  9119     0DB8  0C89               	rrf	9,f
  9120     0DB9  0C89               	rrf	9,f
  9121     0DBA  3901               	andlw	1
  9122     0DBB                     i1l278:
  9123     0DBB  0008               	return
  9124     0DBC                     __end_of_I2C1_IsNack:
  9125                           
  9126                           	psect	text45
  9127     0DA5                     __ptext45:	
  9128 ;; *************** function _I2C1_IsData *****************
  9129 ;; Defined at:
  9130 ;;		line 459 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      _Bool 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_I2C1_EventHandler
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157     0DA5                     _I2C1_IsData:	
  9158                           ;psect for function _I2C1_IsData
  9159                           
  9160     0DA5                     i1l2971:	
  9161                           ;incstack = 0
  9162                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
  9163                           
  9164                           
  9165                           ;mcc_generated_files/i2c_host/src/mssp.c: 461:     return (SSP1STATbits.D_nA);
  9166     0DA5  0024               	movlb	4	; select bank4
  9167     0DA6  0E14               	swapf	20,w	;volatile
  9168     0DA7  0C89               	rrf	9,f
  9169     0DA8  3901               	andlw	1
  9170     0DA9                     i1l281:
  9171     0DA9  0008               	return
  9172     0DAA                     __end_of_I2C1_IsData:
  9173                           
  9174                           	psect	text46
  9175     0DDC                     __ptext46:	
  9176 ;; *************** function _I2C1_IsAddr *****************
  9177 ;; Defined at:
  9178 ;;		line 464 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      _Bool 
  9185 ;; Registers used:
  9186 ;;		wreg, status,0
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;Total ram usage:        0 bytes
  9197 ;; Hardware stack levels used: 1
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_I2C1_EventHandler
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205     0DDC                     _I2C1_IsAddr:	
  9206                           ;psect for function _I2C1_IsAddr
  9207                           
  9208     0DDC                     i1l2963:	
  9209                           ;incstack = 0
  9210                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
  9211                           
  9212                           
  9213                           ;mcc_generated_files/i2c_host/src/mssp.c: 466:     return !(SSP1STATbits.D_nA);
  9214     0DDC  1003               	clrc
  9215     0DDD  0024               	movlb	4	; select bank4
  9216     0DDE  1E94               	btfss	20,5	;volatile
  9217     0DDF  1403               	setc
  9218     0DE0  3000               	movlw	0
  9219     0DE1  3D09               	addwfc	9,w
  9220     0DE2                     i1l284:
  9221     0DE2  0008               	return
  9222     0DE3                     __end_of_I2C1_IsAddr:
  9223                           
  9224                           	psect	text47
  9225     0D94                     __ptext47:	
  9226 ;; *************** function _I2C1_ERROR_ISR *****************
  9227 ;; Defined at:
  9228 ;;		line 222 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; Hardware stack levels required when called: 5
  9249 ;; This function calls:
  9250 ;;		_I2C1_ErrorEventHandler
  9251 ;; This function is called by:
  9252 ;;		_INTERRUPT_InterruptManager
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256     0D94                     _I2C1_ERROR_ISR:	
  9257                           ;psect for function _I2C1_ERROR_ISR
  9258                           
  9259     0D94                     i1l3395:	
  9260                           ;incstack = 0
  9261                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9262                           
  9263                           
  9264                           ;mcc_generated_files/i2c_host/src/mssp.c: 224:     I2C1_ErrorEventHandler();
  9265     0D94  318F  275A  318D   	fcall	_I2C1_ErrorEventHandler
  9266     0D97                     i1l188:
  9267     0D97  0008               	return
  9268     0D98                     __end_of_I2C1_ERROR_ISR:
  9269                           
  9270                           	psect	text48
  9271     0F5A                     __ptext48:	
  9272 ;; *************** function _I2C1_ErrorEventHandler *****************
  9273 ;; Defined at:
  9274 ;;		line 282 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;		None
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;		None
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;Total ram usage:        2 bytes
  9293 ;; Hardware stack levels used: 1
  9294 ;; Hardware stack levels required when called: 4
  9295 ;; This function calls:
  9296 ;;		_I2C1_EVENT_ERROR
  9297 ;;		_I2C1_EVENT_IDLE
  9298 ;;		_I2C1_EVENT_NACK
  9299 ;;		_I2C1_EVENT_RESET
  9300 ;;		_I2C1_EVENT_RX
  9301 ;;		_I2C1_EVENT_SEND_RD_ADDR
  9302 ;;		_I2C1_EVENT_SEND_WR_ADDR
  9303 ;;		_I2C1_EVENT_STOP
  9304 ;;		_I2C1_EVENT_TX
  9305 ;;		_I2C1_ErrorInterruptClear
  9306 ;; This function is called by:
  9307 ;;		_I2C1_ERROR_ISR
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311     0F5A                     _I2C1_ErrorEventHandler:	
  9312                           ;psect for function _I2C1_ErrorEventHandler
  9313                           
  9314     0F5A                     i1l3191:	
  9315                           ;incstack = 0
  9316                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9317                           
  9318                           
  9319                           ;mcc_generated_files/i2c_host/src/mssp.c: 284:     i2c1Status.state = I2C_STATE_ERROR;
  9320     0F5A  3006               	movlw	6
  9321     0F5B  0021               	movlb	1	; select bank1
  9322     0F5C  00BD               	movwf	(_i2c1Status^(0+128)+13)	;volatile
  9323                           
  9324                           ;mcc_generated_files/i2c_host/src/mssp.c: 285:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
  9325     0F5D  3003               	movlw	3
  9326     0F5E  00BC               	movwf	(_i2c1Status^(0+128)+12)	;volatile
  9327     0F5F                     i1l3193:
  9328                           
  9329                           ;mcc_generated_files/i2c_host/src/mssp.c: 286:     I2C1_ErrorInterruptClear();
  9330     0F5F  318D  2554  318F   	fcall	_I2C1_ErrorInterruptClear
  9331     0F62                     i1l3195:
  9332                           
  9333                           ;mcc_generated_files/i2c_host/src/mssp.c: 288:     I2C1_Callback();
  9334     0F62  0021               	movlb	1	; select bank1
  9335     0F63  083D               	movf	(_i2c1Status^(0+128)+13),w	;volatile
  9336     0F64  00F2               	movwf	??_I2C1_ErrorEventHandler
  9337     0F65  01F3               	clrf	??_I2C1_ErrorEventHandler+1
  9338     0F66  35F2               	lslf	??_I2C1_ErrorEventHandler,f
  9339     0F67  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
  9340     0F68  30D1               	movlw	low _i2c1_eventTable
  9341     0F69  0772               	addwf	??_I2C1_ErrorEventHandler,w
  9342     0F6A  0084               	movwf	4
  9343     0F6B  3010               	movlw	high _i2c1_eventTable
  9344     0F6C  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
  9345     0F6D  3880               	iorlw	128
  9346     0F6E  0085               	movwf	5
  9347     0F6F  3F01               	moviw [1]fsr0
  9348     0F70  008A               	movwf	10
  9349     0F71  3F00               	moviw [0]fsr0
  9350     0F72  000A               	callw
  9351     0F73  318F               	pagesel	$
  9352     0F74  0021               	movlb	1	; select bank1
  9353     0F75  00BD               	movwf	(_i2c1Status^(0+128)+13)	;volatile
  9354     0F76                     i1l209:
  9355     0F76  0008               	return
  9356     0F77                     __end_of_I2C1_ErrorEventHandler:
  9357                           
  9358                           	psect	text49
  9359     0DD5                     __ptext49:	
  9360 ;; *************** function _I2C1_EVENT_RESET *****************
  9361 ;; Defined at:
  9362 ;;		line 391 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;		None
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;		None
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      enum E4174
  9369 ;; Registers used:
  9370 ;;		wreg, status,2, status,0, pclath, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;Total ram usage:        0 bytes
  9381 ;; Hardware stack levels used: 1
  9382 ;; Hardware stack levels required when called: 1
  9383 ;; This function calls:
  9384 ;;		_I2C1_BusReset
  9385 ;; This function is called by:
  9386 ;;		_I2C1_EVENT_ERROR
  9387 ;;		_I2C1_EventHandler
  9388 ;;		_I2C1_ErrorEventHandler
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392     0DD5                     _I2C1_EVENT_RESET:	
  9393                           ;psect for function _I2C1_EVENT_RESET
  9394                           
  9395     0DD5                     i1l2943:	
  9396                           ;incstack = 0
  9397                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
  9398                           
  9399                           
  9400                           ;mcc_generated_files/i2c_host/src/mssp.c: 393:     I2C1_BusReset();
  9401     0DD5  318D  257C  318D   	fcall	_I2C1_BusReset
  9402     0DD8                     i1l2945:
  9403                           
  9404                           ;mcc_generated_files/i2c_host/src/mssp.c: 394:     i2c1Status.busy = 0;
  9405     0DD8  0021               	movlb	1	; select bank1
  9406     0DD9  01B0               	clrf	_i2c1Status^(0+128)	;volatile
  9407     0DDA                     i1l2947:
  9408                           
  9409                           ;mcc_generated_files/i2c_host/src/mssp.c: 395:     return I2C_STATE_IDLE;
  9410     0DDA  3000               	movlw	0
  9411     0DDB                     i1l245:
  9412     0DDB  0008               	return
  9413     0DDC                     __end_of_I2C1_EVENT_RESET:
  9414                           
  9415                           	psect	text50
  9416     0DEB                     __ptext50:	
  9417 ;; *************** function _I2C1_EVENT_STOP *****************
  9418 ;; Defined at:
  9419 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;		None
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      enum E4174
  9426 ;; Registers used:
  9427 ;;		wreg, status,2, status,0, pclath, cstack
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used: 1
  9439 ;; Hardware stack levels required when called: 2
  9440 ;; This function calls:
  9441 ;;		_I2C1_Close
  9442 ;;		_I2C1_StopSend
  9443 ;; This function is called by:
  9444 ;;		_I2C1_EVENT_TX
  9445 ;;		_I2C1_EVENT_NACK
  9446 ;;		_I2C1_EventHandler
  9447 ;;		_I2C1_ErrorEventHandler
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451     0DEB                     _I2C1_EVENT_STOP:	
  9452                           ;psect for function _I2C1_EVENT_STOP
  9453                           
  9454     0DEB                     i1l2921:	
  9455                           ;incstack = 0
  9456                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
  9457                           
  9458                           
  9459                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_StopSend();
  9460     0DEB  318D  255A  318D   	fcall	_I2C1_StopSend
  9461                           
  9462                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     I2C1_Close();
  9463     0DEE  318E  26C5  318D   	fcall	_I2C1_Close
  9464     0DF1                     i1l2923:
  9465                           
  9466                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
  9467     0DF1  3000               	movlw	0
  9468     0DF2                     i1l242:
  9469     0DF2  0008               	return
  9470     0DF3                     __end_of_I2C1_EVENT_STOP:
  9471                           
  9472                           	psect	text51
  9473     0DB0                     __ptext51:	
  9474 ;; *************** function _I2C1_EVENT_ERROR *****************
  9475 ;; Defined at:
  9476 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  retEventStat    1    0[COMMON] enum E4174
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      enum E4174
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0, pclath, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;Total ram usage:        1 bytes
  9495 ;; Hardware stack levels used: 1
  9496 ;; Hardware stack levels required when called: 2
  9497 ;; This function calls:
  9498 ;;		_I2C1_EVENT_RESET
  9499 ;; This function is called by:
  9500 ;;		_I2C1_EventHandler
  9501 ;;		_I2C1_ErrorEventHandler
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505     0DB0                     _I2C1_EVENT_ERROR:	
  9506                           ;psect for function _I2C1_EVENT_ERROR
  9507                           
  9508     0DB0                     i1l3053:	
  9509                           ;incstack = 0
  9510                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
  9511                           
  9512     0DB0                     i1l3055:
  9513                           
  9514                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     retEventState = I2C1_EVENT_RESET();
  9515     0DB0  318D  25D5  318D   	fcall	_I2C1_EVENT_RESET
  9516     0DB3  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
  9517     0DB4                     i1l3057:
  9518                           
  9519                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return retEventState;
  9520     0DB4  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
  9521     0DB5                     i1l239:
  9522     0DB5  0008               	return
  9523     0DB6                     __end_of_I2C1_EVENT_ERROR:
  9524                           
  9525                           	psect	text52
  9526     0DAA                     __ptext52:	
  9527 ;; *************** function _I2C1_EVENT_NACK *****************
  9528 ;; Defined at:
  9529 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  retEventStat    1    0[COMMON] enum E4174
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      enum E4174
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0, pclath, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;Total ram usage:        1 bytes
  9548 ;; Hardware stack levels used: 1
  9549 ;; Hardware stack levels required when called: 3
  9550 ;; This function calls:
  9551 ;;		_I2C1_EVENT_STOP
  9552 ;; This function is called by:
  9553 ;;		_I2C1_EventHandler
  9554 ;;		_I2C1_ErrorEventHandler
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558     0DAA                     _I2C1_EVENT_NACK:	
  9559                           ;psect for function _I2C1_EVENT_NACK
  9560                           
  9561     0DAA                     i1l3045:	
  9562                           ;incstack = 0
  9563                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
  9564                           
  9565     0DAA                     i1l3047:
  9566                           
  9567                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_STOP();
  9568     0DAA  318D  25EB  318D   	fcall	_I2C1_EVENT_STOP
  9569     0DAD  00F0               	movwf	I2C1_EVENT_NACK@retEventState
  9570     0DAE                     i1l3049:
  9571                           
  9572                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
  9573     0DAE  0870               	movf	I2C1_EVENT_NACK@retEventState,w
  9574     0DAF                     i1l236:
  9575     0DAF  0008               	return
  9576     0DB0                     __end_of_I2C1_EVENT_NACK:
  9577                           
  9578                           	psect	text53
  9579     06A0                     __ptext53:	
  9580 ;; *************** function _I2C1_EVENT_RX *****************
  9581 ;; Defined at:
  9582 ;;		line 337 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;		None
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  retEventStat    1    0[COMMON] enum E4174
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1    wreg      enum E4174
  9589 ;; Registers used:
  9590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;Total ram usage:        1 bytes
  9601 ;; Hardware stack levels used: 1
  9602 ;; Hardware stack levels required when called: 1
  9603 ;; This function calls:
  9604 ;;		_I2C1_AckSend
  9605 ;;		_I2C1_DataReceive
  9606 ;;		_I2C1_IsRxBufFull
  9607 ;;		_I2C1_NackSend
  9608 ;;		_I2C1_ReceiveEnable
  9609 ;;		_I2C1_RestartDisable
  9610 ;; This function is called by:
  9611 ;;		_I2C1_EventHandler
  9612 ;;		_I2C1_ErrorEventHandler
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616     06A0                     _I2C1_EVENT_RX:	
  9617                           ;psect for function _I2C1_EVENT_RX
  9618                           
  9619     06A0                     i1l3019:	
  9620                           ;incstack = 0
  9621                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9622                           
  9623                           
  9624                           ;mcc_generated_files/i2c_host/src/mssp.c: 339:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
  9625     06A0  3004               	movlw	4
  9626     06A1  00F0               	movwf	I2C1_EVENT_RX@retEventState
  9627     06A2                     i1l3021:
  9628                           
  9629                           ;mcc_generated_files/i2c_host/src/mssp.c: 341:     if (I2C1_IsRxBufFull())
  9630     06A2  318D  2588  3186   	fcall	_I2C1_IsRxBufFull
  9631     06A5  3A00               	xorlw	0
  9632     06A6  1903               	skipnz
  9633     06A7  2EA9               	goto	u181_21
  9634     06A8  2EAA               	goto	u181_20
  9635     06A9                     u181_21:
  9636     06A9  2ED5               	goto	i1l3039
  9637     06AA                     u181_20:
  9638     06AA                     i1l3023:
  9639                           
  9640                           ;mcc_generated_files/i2c_host/src/mssp.c: 342:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 343:         if (i2c1Status.readLength > 0U)
  9641     06AA  0021               	movlb	1	; select bank1
  9642     06AB  0839               	movf	(_i2c1Status^(0+128)+9),w	;volatile
  9643     06AC  043A               	iorwf	((_i2c1Status+1)^(0+128)+9),w	;volatile
  9644     06AD  1903               	btfsc	3,2
  9645     06AE  2EB0               	goto	u182_21
  9646     06AF  2EB1               	goto	u182_20
  9647     06B0                     u182_21:
  9648     06B0  2EC2               	goto	i1l3031
  9649     06B1                     u182_20:
  9650     06B1                     i1l3025:
  9651                           
  9652                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 345:             *i2c1Status.readPtr = I2C1_DataReceive();
  9653     06B1  0837               	movf	(_i2c1Status^(0+128)+7),w	;volatile
  9654     06B2  0086               	movwf	6
  9655     06B3  0838               	movf	((_i2c1Status+1)^(0+128)+7),w	;volatile
  9656     06B4  0087               	movwf	7
  9657     06B5  318D  255D  3186   	fcall	_I2C1_DataReceive
  9658     06B8  0081               	movwf	1
  9659     06B9                     i1l3027:
  9660                           
  9661                           ;mcc_generated_files/i2c_host/src/mssp.c: 346:             i2c1Status.readPtr++;
  9662     06B9  3001               	movlw	1
  9663     06BA  0021               	movlb	1	; select bank1
  9664     06BB  07B7               	addwf	(_i2c1Status^(0+128)+7),f	;volatile
  9665     06BC  3000               	movlw	0
  9666     06BD  3DB8               	addwfc	((_i2c1Status+1)^(0+128)+7),f	;volatile
  9667     06BE                     i1l3029:
  9668                           
  9669                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:             i2c1Status.readLength--;
  9670     06BE  3001               	movlw	1
  9671     06BF  02B9               	subwf	(_i2c1Status^(0+128)+9),f	;volatile
  9672     06C0  3000               	movlw	0
  9673     06C1  3BBA               	subwfb	((_i2c1Status+1)^(0+128)+9),f	;volatile
  9674     06C2                     i1l3031:
  9675                           
  9676                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:         if (i2c1Status.readLength > 0U)
  9677     06C2  0839               	movf	(_i2c1Status^(0+128)+9),w	;volatile
  9678     06C3  043A               	iorwf	((_i2c1Status+1)^(0+128)+9),w	;volatile
  9679     06C4  1903               	btfsc	3,2
  9680     06C5  2EC7               	goto	u183_21
  9681     06C6  2EC8               	goto	u183_20
  9682     06C7                     u183_21:
  9683     06C7  2ECC               	goto	i1l3035
  9684     06C8                     u183_20:
  9685     06C8                     i1l3033:
  9686                           
  9687                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 353:             I2C1_AckSend();
  9688     06C8  318D  2584  3186   	fcall	_I2C1_AckSend
  9689                           
  9690                           ;mcc_generated_files/i2c_host/src/mssp.c: 354:         }
  9691     06CB  2ED8               	goto	i1l3041
  9692     06CC                     i1l3035:
  9693                           
  9694                           ;mcc_generated_files/i2c_host/src/mssp.c: 356:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 357:             I2C1_RestartDisable();
  9695     06CC  318D  2563  3186   	fcall	_I2C1_RestartDisable
  9696                           
  9697                           ;mcc_generated_files/i2c_host/src/mssp.c: 358:             I2C1_NackSend();
  9698     06CF  318D  258C  3186   	fcall	_I2C1_NackSend
  9699     06D2                     i1l3037:
  9700                           
  9701                           ;mcc_generated_files/i2c_host/src/mssp.c: 359:             retEventState = I2C_STATE_STO
      +                          P;
  9702     06D2  3007               	movlw	7
  9703     06D3  00F0               	movwf	I2C1_EVENT_RX@retEventState
  9704     06D4  2ED8               	goto	i1l3041
  9705     06D5                     i1l3039:
  9706                           
  9707                           ;mcc_generated_files/i2c_host/src/mssp.c: 364:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 365:         I2C1_ReceiveEnable();
  9708     06D5  318D  2560  3186   	fcall	_I2C1_ReceiveEnable
  9709     06D8                     i1l3041:
  9710                           
  9711                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
  9712     06D8  0870               	movf	I2C1_EVENT_RX@retEventState,w
  9713     06D9                     i1l233:
  9714     06D9  0008               	return
  9715     06DA                     __end_of_I2C1_EVENT_RX:
  9716                           
  9717                           	psect	text54
  9718     0DCE                     __ptext54:	
  9719 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
  9720 ;; Defined at:
  9721 ;;		line 304 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      enum E4174
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:        0 bytes
  9740 ;; Hardware stack levels used: 1
  9741 ;; Hardware stack levels required when called: 1
  9742 ;; This function calls:
  9743 ;;		_I2C1_DataTransmit
  9744 ;; This function is called by:
  9745 ;;		_I2C1_EventHandler
  9746 ;;		_I2C1_ErrorEventHandler
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750     0DCE                     _I2C1_EVENT_SEND_WR_ADDR:	
  9751                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
  9752                           
  9753     0DCE                     i1l2987:	
  9754                           ;incstack = 0
  9755                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
  9756                           
  9757                           
  9758                           ;mcc_generated_files/i2c_host/src/mssp.c: 306:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
  9759     0DCE  0021               	movlb	1	; select bank1
  9760     0DCF  3531               	lslf	(_i2c1Status^(0+128)+1),w	;volatile
  9761     0DD0  318D  25A0  318D   	fcall	_I2C1_DataTransmit
  9762     0DD3                     i1l2989:
  9763                           
  9764                           ;mcc_generated_files/i2c_host/src/mssp.c: 307:     return I2C_STATE_TX;
  9765     0DD3  3003               	movlw	3
  9766     0DD4                     i1l218:
  9767     0DD4  0008               	return
  9768     0DD5                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
  9769                           
  9770                           	psect	text55
  9771     0DE3                     __ptext55:	
  9772 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
  9773 ;; Defined at:
  9774 ;;		line 298 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      enum E4174
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0, pclath, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;Total ram usage:        0 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 1
  9795 ;; This function calls:
  9796 ;;		_I2C1_DataTransmit
  9797 ;; This function is called by:
  9798 ;;		_I2C1_EventHandler
  9799 ;;		_I2C1_ErrorEventHandler
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803     0DE3                     _I2C1_EVENT_SEND_RD_ADDR:	
  9804                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
  9805                           
  9806     0DE3                     i1l2981:	
  9807                           ;incstack = 0
  9808                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
  9809                           
  9810                           
  9811                           ;mcc_generated_files/i2c_host/src/mssp.c: 300:     I2C1_DataTransmit((uint8_t) ((i2c1Sta
      +                          tus.address << 1) | 1U));
  9812     0DE3  1403               	setc
  9813     0DE4  0021               	movlb	1	; select bank1
  9814     0DE5  0D31               	rlf	(_i2c1Status^(0+128)+1),w	;volatile
  9815     0DE6  318D  25A0  318D   	fcall	_I2C1_DataTransmit
  9816     0DE9                     i1l2983:
  9817                           
  9818                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     return I2C_STATE_RX;
  9819     0DE9  3004               	movlw	4
  9820     0DEA                     i1l215:
  9821     0DEA  0008               	return
  9822     0DEB                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
  9823                           
  9824                           	psect	text56
  9825     0D90                     __ptext56:	
  9826 ;; *************** function _I2C1_EVENT_IDLE *****************
  9827 ;; Defined at:
  9828 ;;		line 292 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;		None
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      enum E4174
  9835 ;; Registers used:
  9836 ;;		wreg, status,2
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;Total ram usage:        0 bytes
  9847 ;; Hardware stack levels used: 1
  9848 ;; This function calls:
  9849 ;;		Nothing
  9850 ;; This function is called by:
  9851 ;;		_I2C1_EventHandler
  9852 ;;		_I2C1_ErrorEventHandler
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856     0D90                     _I2C1_EVENT_IDLE:	
  9857                           ;psect for function _I2C1_EVENT_IDLE
  9858                           
  9859     0D90                     i1l2975:	
  9860                           ;incstack = 0
  9861                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
  9862                           
  9863                           
  9864                           ;mcc_generated_files/i2c_host/src/mssp.c: 294:     i2c1Status.busy = 0;
  9865     0D90  0021               	movlb	1	; select bank1
  9866     0D91  01B0               	clrf	_i2c1Status^(0+128)	;volatile
  9867     0D92                     i1l2977:
  9868                           
  9869                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     return I2C_STATE_RESET;
  9870     0D92  3008               	movlw	8
  9871     0D93                     i1l212:
  9872     0D93  0008               	return
  9873     0D94                     __end_of_I2C1_EVENT_IDLE:
  9874                           
  9875                           	psect	text57
  9876     07A2                     __ptext57:	
  9877 ;; *************** function _I2C1_EVENT_TX *****************
  9878 ;; Defined at:
  9879 ;;		line 310 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;		None
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;  retEventStat    1    1[COMMON] enum E4174
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  1    wreg      enum E4174
  9886 ;; Registers used:
  9887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;Total ram usage:        1 bytes
  9898 ;; Hardware stack levels used: 1
  9899 ;; Hardware stack levels required when called: 3
  9900 ;; This function calls:
  9901 ;;		_I2C1_DataTransmit
  9902 ;;		_I2C1_EVENT_STOP
  9903 ;;		_I2C1_RestartEnable
  9904 ;; This function is called by:
  9905 ;;		_I2C1_EventHandler
  9906 ;;		_I2C1_ErrorEventHandler
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910     07A2                     _I2C1_EVENT_TX:	
  9911                           ;psect for function _I2C1_EVENT_TX
  9912                           
  9913     07A2                     i1l2993:	
  9914                           ;incstack = 0
  9915                           ; Regs used in _I2C1_EVENT_TX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9916                           
  9917     07A2                     i1l2995:
  9918                           
  9919                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     if (0U != i2c1Status.writeLength)
  9920     07A2  0021               	movlb	1	; select bank1
  9921     07A3  0835               	movf	(_i2c1Status^(0+128)+5),w	;volatile
  9922     07A4  0436               	iorwf	((_i2c1Status+1)^(0+128)+5),w	;volatile
  9923     07A5  1903               	btfsc	3,2
  9924     07A6  2FA8               	goto	u179_21
  9925     07A7  2FA9               	goto	u179_20
  9926     07A8                     u179_21:
  9927     07A8  2FBD               	goto	i1l3005
  9928     07A9                     u179_20:
  9929     07A9                     i1l2997:
  9930                           
  9931                           ;mcc_generated_files/i2c_host/src/mssp.c: 314:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 315:         i2c1Status.writeLength--;
  9932     07A9  3001               	movlw	1
  9933     07AA  02B5               	subwf	(_i2c1Status^(0+128)+5),f	;volatile
  9934     07AB  3000               	movlw	0
  9935     07AC  3BB6               	subwfb	((_i2c1Status+1)^(0+128)+5),f	;volatile
  9936     07AD                     i1l2999:
  9937                           
  9938                           ;mcc_generated_files/i2c_host/src/mssp.c: 316:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr);
  9939     07AD  0833               	movf	(_i2c1Status^(0+128)+3),w	;volatile
  9940     07AE  0086               	movwf	6
  9941     07AF  0834               	movf	((_i2c1Status+1)^(0+128)+3),w	;volatile
  9942     07B0  0087               	movwf	7
  9943     07B1  0801               	movf	1,w
  9944     07B2  318D  25A0  3187   	fcall	_I2C1_DataTransmit
  9945     07B5                     i1l3001:
  9946                           
  9947                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         i2c1Status.writePtr++;
  9948     07B5  3001               	movlw	1
  9949     07B6  0021               	movlb	1	; select bank1
  9950     07B7  07B3               	addwf	(_i2c1Status^(0+128)+3),f	;volatile
  9951     07B8  3000               	movlw	0
  9952     07B9  3DB4               	addwfc	((_i2c1Status+1)^(0+128)+3),f	;volatile
  9953     07BA                     i1l3003:
  9954                           
  9955                           ;mcc_generated_files/i2c_host/src/mssp.c: 318:         retEventState = I2C_STATE_TX;
  9956     07BA  3003               	movlw	3
  9957     07BB  00F1               	movwf	I2C1_EVENT_TX@retEventState
  9958                           
  9959                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:     }
  9960     07BC  2FCD               	goto	i1l3015
  9961     07BD                     i1l3005:
  9962                           
  9963                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 322:         if (i2c1Status.switchToRead)
  9964     07BD  083B               	movf	(_i2c1Status^(0+128)+11),w	;volatile
  9965     07BE  1903               	btfsc	3,2
  9966     07BF  2FC1               	goto	u180_21
  9967     07C0  2FC2               	goto	u180_20
  9968     07C1                     u180_21:
  9969     07C1  2FC9               	goto	i1l3013
  9970     07C2                     u180_20:
  9971     07C2                     i1l3007:
  9972                           
  9973                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             i2c1Status.switchToRead = 0;
  9974     07C2  01BB               	clrf	(_i2c1Status^(0+128)+11)	;volatile
  9975     07C3                     i1l3009:
  9976                           
  9977                           ;mcc_generated_files/i2c_host/src/mssp.c: 325:             I2C1_RestartEnable();
  9978     07C3  318D  2566  3187   	fcall	_I2C1_RestartEnable
  9979     07C6                     i1l3011:
  9980                           
  9981                           ;mcc_generated_files/i2c_host/src/mssp.c: 326:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
  9982     07C6  3001               	movlw	1
  9983     07C7  00F1               	movwf	I2C1_EVENT_TX@retEventState
  9984                           
  9985                           ;mcc_generated_files/i2c_host/src/mssp.c: 327:         }
  9986     07C8  2FCD               	goto	i1l3015
  9987     07C9                     i1l3013:
  9988                           
  9989                           ;mcc_generated_files/i2c_host/src/mssp.c: 329:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 330:             retEventState = I2C1_EVENT_STOP();
  9990     07C9  318D  25EB  3187   	fcall	_I2C1_EVENT_STOP
  9991     07CC  00F1               	movwf	I2C1_EVENT_TX@retEventState
  9992     07CD                     i1l3015:
  9993                           
  9994                           ;mcc_generated_files/i2c_host/src/mssp.c: 334:     return retEventState;
  9995     07CD  0871               	movf	I2C1_EVENT_TX@retEventState,w
  9996     07CE                     i1l225:
  9997     07CE  0008               	return
  9998     07CF                     __end_of_I2C1_EVENT_TX:
  9999                           
 10000                           	psect	text58
 10001     0D66                     __ptext58:	
 10002 ;; *************** function _I2C1_RestartEnable *****************
 10003 ;; Defined at:
 10004 ;;		line 422 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;		None
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;		None
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  1    wreg      void 
 10011 ;; Registers used:
 10012 ;;		None
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;Total ram usage:        0 bytes
 10023 ;; Hardware stack levels used: 1
 10024 ;; This function calls:
 10025 ;;		Nothing
 10026 ;; This function is called by:
 10027 ;;		_I2C1_EVENT_TX
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031     0D66                     _I2C1_RestartEnable:	
 10032                           ;psect for function _I2C1_RestartEnable
 10033                           
 10034     0D66                     i1l2919:	
 10035                           ;incstack = 0
 10036                           ; Regs used in _I2C1_RestartEnable: []
 10037                           
 10038                           
 10039                           ;mcc_generated_files/i2c_host/src/mssp.c: 424:     SSP1CON2bits.RSEN = 1;
 10040     0D66  0024               	movlb	4	; select bank4
 10041     0D67  1496               	bsf	22,1	;volatile
 10042     0D68                     i1l260:
 10043     0D68  0008               	return
 10044     0D69                     __end_of_I2C1_RestartEnable:
 10045                           
 10046                           	psect	text59
 10047     0DA0                     __ptext59:	
 10048 ;; *************** function _I2C1_DataTransmit *****************
 10049 ;; Defined at:
 10050 ;;		line 406 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  data            1    wreg     unsigned char 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  data            1    0[COMMON] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;Total ram usage:        1 bytes
 10069 ;; Hardware stack levels used: 1
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_I2C1_EVENT_SEND_RD_ADDR
 10074 ;;		_I2C1_EVENT_SEND_WR_ADDR
 10075 ;;		_I2C1_EVENT_TX
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079     0DA0                     _I2C1_DataTransmit:	
 10080                           ;psect for function _I2C1_DataTransmit
 10081                           
 10082                           
 10083                           ;incstack = 0
 10084                           ; Regs used in _I2C1_DataTransmit: [wreg]
 10085                           ;I2C1_DataTransmit@data stored from wreg
 10086     0DA0  00F0               	movwf	I2C1_DataTransmit@data
 10087     0DA1                     i1l2917:
 10088                           
 10089                           ;mcc_generated_files/i2c_host/src/mssp.c: 406: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 407: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 408:     SSP1BUF = data;
 10090     0DA1  0870               	movf	I2C1_DataTransmit@data,w
 10091     0DA2  0024               	movlb	4	; select bank4
 10092     0DA3  0091               	movwf	17	;volatile
 10093     0DA4                     i1l251:
 10094     0DA4  0008               	return
 10095     0DA5                     __end_of_I2C1_DataTransmit:
 10096                           
 10097                           	psect	text60
 10098     0D63                     __ptext60:	
 10099 ;; *************** function _I2C1_RestartDisable *****************
 10100 ;; Defined at:
 10101 ;;		line 427 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;		None
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;		None
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      void 
 10108 ;; Registers used:
 10109 ;;		None
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;Total ram usage:        0 bytes
 10120 ;; Hardware stack levels used: 1
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_I2C1_EVENT_RX
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128     0D63                     _I2C1_RestartDisable:	
 10129                           ;psect for function _I2C1_RestartDisable
 10130                           
 10131     0D63                     i1l2937:	
 10132                           ;incstack = 0
 10133                           ; Regs used in _I2C1_RestartDisable: []
 10134                           
 10135                           
 10136                           ;mcc_generated_files/i2c_host/src/mssp.c: 429:     SSP1CON2bits.RSEN = 0;
 10137     0D63  0024               	movlb	4	; select bank4
 10138     0D64  1096               	bcf	22,1	;volatile
 10139     0D65                     i1l263:
 10140     0D65  0008               	return
 10141     0D66                     __end_of_I2C1_RestartDisable:
 10142                           
 10143                           	psect	text61
 10144     0D60                     __ptext61:	
 10145 ;; *************** function _I2C1_ReceiveEnable *****************
 10146 ;; Defined at:
 10147 ;;		line 417 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;		None
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;		None
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      void 
 10154 ;; Registers used:
 10155 ;;		None
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10165 ;;Total ram usage:        0 bytes
 10166 ;; Hardware stack levels used: 1
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_I2C1_EVENT_RX
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174     0D60                     _I2C1_ReceiveEnable:	
 10175                           ;psect for function _I2C1_ReceiveEnable
 10176                           
 10177     0D60                     i1l2941:	
 10178                           ;incstack = 0
 10179                           ; Regs used in _I2C1_ReceiveEnable: []
 10180                           
 10181                           
 10182                           ;mcc_generated_files/i2c_host/src/mssp.c: 419:     SSP1CON2bits.RCEN = 1;
 10183     0D60  0024               	movlb	4	; select bank4
 10184     0D61  1596               	bsf	22,3	;volatile
 10185     0D62                     i1l257:
 10186     0D62  0008               	return
 10187     0D63                     __end_of_I2C1_ReceiveEnable:
 10188                           
 10189                           	psect	text62
 10190     0D8C                     __ptext62:	
 10191 ;; *************** function _I2C1_NackSend *****************
 10192 ;; Defined at:
 10193 ;;		line 448 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		None
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;Total ram usage:        0 bytes
 10212 ;; Hardware stack levels used: 1
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_I2C1_EVENT_RX
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220     0D8C                     _I2C1_NackSend:	
 10221                           ;psect for function _I2C1_NackSend
 10222                           
 10223     0D8C                     i1l2939:	
 10224                           ;incstack = 0
 10225                           ; Regs used in _I2C1_NackSend: []
 10226                           
 10227                           
 10228                           ;mcc_generated_files/i2c_host/src/mssp.c: 450:     SSP1CON2bits.ACKDT = 1;
 10229     0D8C  0024               	movlb	4	; select bank4
 10230     0D8D  1696               	bsf	22,5	;volatile
 10231                           
 10232                           ;mcc_generated_files/i2c_host/src/mssp.c: 451:     SSP1CON2bits.ACKEN = 1;
 10233     0D8E  1616               	bsf	22,4	;volatile
 10234     0D8F                     i1l275:
 10235     0D8F  0008               	return
 10236     0D90                     __end_of_I2C1_NackSend:
 10237                           
 10238                           	psect	text63
 10239     0D88                     __ptext63:	
 10240 ;; *************** function _I2C1_IsRxBufFull *****************
 10241 ;; Defined at:
 10242 ;;		line 469 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      _Bool 
 10249 ;; Registers used:
 10250 ;;		wreg, status,2, status,0
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;Total ram usage:        0 bytes
 10261 ;; Hardware stack levels used: 1
 10262 ;; This function calls:
 10263 ;;		Nothing
 10264 ;; This function is called by:
 10265 ;;		_I2C1_EVENT_RX
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269     0D88                     _I2C1_IsRxBufFull:	
 10270                           ;psect for function _I2C1_IsRxBufFull
 10271                           
 10272     0D88                     i1l2927:	
 10273                           ;incstack = 0
 10274                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 10275                           
 10276                           
 10277                           ;mcc_generated_files/i2c_host/src/mssp.c: 471:     return SSP1STATbits.BF;
 10278     0D88  0024               	movlb	4	; select bank4
 10279     0D89  0814               	movf	20,w	;volatile
 10280     0D8A  3901               	andlw	1
 10281     0D8B                     i1l287:
 10282     0D8B  0008               	return
 10283     0D8C                     __end_of_I2C1_IsRxBufFull:
 10284                           
 10285                           	psect	text64
 10286     0D5D                     __ptext64:	
 10287 ;; *************** function _I2C1_DataReceive *****************
 10288 ;; Defined at:
 10289 ;;		line 401 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;		None
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;		None
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  1    wreg      unsigned char 
 10296 ;; Registers used:
 10297 ;;		wreg
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;Total ram usage:        0 bytes
 10308 ;; Hardware stack levels used: 1
 10309 ;; This function calls:
 10310 ;;		Nothing
 10311 ;; This function is called by:
 10312 ;;		_I2C1_EVENT_RX
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316     0D5D                     _I2C1_DataReceive:	
 10317                           ;psect for function _I2C1_DataReceive
 10318                           
 10319     0D5D                     i1l2931:	
 10320                           ;incstack = 0
 10321                           ; Regs used in _I2C1_DataReceive: [wreg]
 10322                           
 10323                           
 10324                           ;mcc_generated_files/i2c_host/src/mssp.c: 403:     return SSP1BUF;
 10325     0D5D  0024               	movlb	4	; select bank4
 10326     0D5E  0811               	movf	17,w	;volatile
 10327     0D5F                     i1l248:
 10328     0D5F  0008               	return
 10329     0D60                     __end_of_I2C1_DataReceive:
 10330                           
 10331                           	psect	text65
 10332     0D84                     __ptext65:	
 10333 ;; *************** function _I2C1_AckSend *****************
 10334 ;; Defined at:
 10335 ;;		line 442 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		None
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;Total ram usage:        0 bytes
 10354 ;; Hardware stack levels used: 1
 10355 ;; This function calls:
 10356 ;;		Nothing
 10357 ;; This function is called by:
 10358 ;;		_I2C1_EVENT_RX
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362     0D84                     _I2C1_AckSend:	
 10363                           ;psect for function _I2C1_AckSend
 10364                           
 10365     0D84                     i1l2935:	
 10366                           ;incstack = 0
 10367                           ; Regs used in _I2C1_AckSend: []
 10368                           
 10369                           
 10370                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKDT = 0;
 10371     0D84  0024               	movlb	4	; select bank4
 10372     0D85  1296               	bcf	22,5	;volatile
 10373                           
 10374                           ;mcc_generated_files/i2c_host/src/mssp.c: 445:     SSP1CON2bits.ACKEN = 1;
 10375     0D86  1616               	bsf	22,4	;volatile
 10376     0D87                     i1l272:
 10377     0D87  0008               	return
 10378     0D88                     __end_of_I2C1_AckSend:
 10379                           
 10380                           	psect	text66
 10381     0D5A                     __ptext66:	
 10382 ;; *************** function _I2C1_StopSend *****************
 10383 ;; Defined at:
 10384 ;;		line 437 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;		None
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      void 
 10391 ;; Registers used:
 10392 ;;		None
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;Total ram usage:        0 bytes
 10403 ;; Hardware stack levels used: 1
 10404 ;; This function calls:
 10405 ;;		Nothing
 10406 ;; This function is called by:
 10407 ;;		_I2C1_EVENT_STOP
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411     0D5A                     _I2C1_StopSend:	
 10412                           ;psect for function _I2C1_StopSend
 10413                           
 10414     0D5A                     i1l2837:	
 10415                           ;incstack = 0
 10416                           ; Regs used in _I2C1_StopSend: []
 10417                           
 10418                           
 10419                           ;mcc_generated_files/i2c_host/src/mssp.c: 439:     SSP1CON2bits.PEN = 1;
 10420     0D5A  0024               	movlb	4	; select bank4
 10421     0D5B  1516               	bsf	22,2	;volatile
 10422     0D5C                     i1l269:
 10423     0D5C  0008               	return
 10424     0D5D                     __end_of_I2C1_StopSend:
 10425                           
 10426                           	psect	text67
 10427     0EC5                     __ptext67:	
 10428 ;; *************** function _I2C1_Close *****************
 10429 ;; Defined at:
 10430 ;;		line 242 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;		None
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		status,2, status,0, pclath, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;Total ram usage:        0 bytes
 10449 ;; Hardware stack levels used: 1
 10450 ;; Hardware stack levels required when called: 1
 10451 ;; This function calls:
 10452 ;;		_I2C1_ErrorInterruptClear
 10453 ;;		_I2C1_InterruptClear
 10454 ;;		_I2C1_StatusFlagsClear
 10455 ;; This function is called by:
 10456 ;;		_I2C1_EventHandler
 10457 ;;		_I2C1_EVENT_STOP
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461     0EC5                     _I2C1_Close:	
 10462                           ;psect for function _I2C1_Close
 10463                           
 10464     0EC5                     i1l2827:	
 10465                           ;incstack = 0
 10466                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 10467                           
 10468                           
 10469                           ;mcc_generated_files/i2c_host/src/mssp.c: 244:     i2c1Status.busy = 0;
 10470     0EC5  0021               	movlb	1	; select bank1
 10471     0EC6  01B0               	clrf	_i2c1Status^(0+128)	;volatile
 10472     0EC7                     i1l2829:
 10473                           
 10474                           ;mcc_generated_files/i2c_host/src/mssp.c: 245:     i2c1Status.address = 0xFF;
 10475     0EC7  3000               	movlw	0
 10476     0EC8  00B2               	movwf	((_i2c1Status+1)^(0+128)+1)	;volatile
 10477     0EC9  30FF               	movlw	255
 10478     0ECA  00B1               	movwf	(_i2c1Status^(0+128)+1)	;volatile
 10479                           
 10480                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.writePtr = ((void*)0);
 10481     0ECB  01B3               	clrf	(_i2c1Status^(0+128)+3)	;volatile
 10482     0ECC  01B4               	clrf	((_i2c1Status+1)^(0+128)+3)	;volatile
 10483                           
 10484                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.readPtr = ((void*)0);
 10485     0ECD  01B7               	clrf	(_i2c1Status^(0+128)+7)	;volatile
 10486     0ECE  01B8               	clrf	((_i2c1Status+1)^(0+128)+7)	;volatile
 10487                           
 10488                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.state = I2C_STATE_IDLE;
 10489     0ECF  01BD               	clrf	(_i2c1Status^(0+128)+13)	;volatile
 10490     0ED0                     i1l2831:
 10491                           
 10492                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     I2C1_InterruptClear();
 10493     0ED0  318D  2557  318E   	fcall	_I2C1_InterruptClear
 10494     0ED3                     i1l2833:
 10495                           
 10496                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     I2C1_ErrorInterruptClear();
 10497     0ED3  318D  2554  318E   	fcall	_I2C1_ErrorInterruptClear
 10498     0ED6                     i1l2835:
 10499                           
 10500                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_StatusFlagsClear();
 10501     0ED6  318D  2580  318E   	fcall	_I2C1_StatusFlagsClear
 10502     0ED9                     i1l197:
 10503     0ED9  0008               	return
 10504     0EDA                     __end_of_I2C1_Close:
 10505                           
 10506                           	psect	text68
 10507     0D80                     __ptext68:	
 10508 ;; *************** function _I2C1_StatusFlagsClear *****************
 10509 ;; Defined at:
 10510 ;;		line 496 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;		None
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;		None
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  1    wreg      void 
 10517 ;; Registers used:
 10518 ;;		None
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;Total ram usage:        0 bytes
 10529 ;; Hardware stack levels used: 1
 10530 ;; This function calls:
 10531 ;;		Nothing
 10532 ;; This function is called by:
 10533 ;;		_I2C1_Close
 10534 ;; This function uses a non-reentrant model
 10535 ;;
 10536                           
 10537     0D80                     _I2C1_StatusFlagsClear:	
 10538                           ;psect for function _I2C1_StatusFlagsClear
 10539                           
 10540     0D80                     i1l2671:	
 10541                           ;incstack = 0
 10542                           ; Regs used in _I2C1_StatusFlagsClear: []
 10543                           
 10544                           
 10545                           ;mcc_generated_files/i2c_host/src/mssp.c: 498:     SSP1CON1bits.WCOL = 0;
 10546     0D80  0024               	movlb	4	; select bank4
 10547     0D81  1395               	bcf	21,7	;volatile
 10548                           
 10549                           ;mcc_generated_files/i2c_host/src/mssp.c: 499:     SSP1CON1bits.SSPOV = 0;
 10550     0D82  1315               	bcf	21,6	;volatile
 10551     0D83                     i1l302:
 10552     0D83  0008               	return
 10553     0D84                     __end_of_I2C1_StatusFlagsClear:
 10554                           
 10555                           	psect	text69
 10556     0D57                     __ptext69:	
 10557 ;; *************** function _I2C1_InterruptClear *****************
 10558 ;; Defined at:
 10559 ;;		line 486 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;		None
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;		None
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  1    wreg      void 
 10566 ;; Registers used:
 10567 ;;		None
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10577 ;;Total ram usage:        0 bytes
 10578 ;; Hardware stack levels used: 1
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_I2C1_Close
 10583 ;;		_I2C1_EventHandler
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587     0D57                     _I2C1_InterruptClear:	
 10588                           ;psect for function _I2C1_InterruptClear
 10589                           
 10590     0D57                     i1l2667:	
 10591                           ;incstack = 0
 10592                           ; Regs used in _I2C1_InterruptClear: []
 10593                           
 10594                           
 10595                           ;mcc_generated_files/i2c_host/src/mssp.c: 488:     PIR1bits.SSP1IF = 0;
 10596     0D57  0020               	movlb	0	; select bank0
 10597     0D58  1191               	bcf	17,3	;volatile
 10598     0D59                     i1l296:
 10599     0D59  0008               	return
 10600     0D5A                     __end_of_I2C1_InterruptClear:
 10601                           
 10602                           	psect	text70
 10603     0D54                     __ptext70:	
 10604 ;; *************** function _I2C1_ErrorInterruptClear *****************
 10605 ;; Defined at:
 10606 ;;		line 491 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;		None
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;		None
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  1    wreg      void 
 10613 ;; Registers used:
 10614 ;;		None
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;Total ram usage:        0 bytes
 10625 ;; Hardware stack levels used: 1
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_I2C1_Close
 10630 ;;		_I2C1_ErrorEventHandler
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634     0D54                     _I2C1_ErrorInterruptClear:	
 10635                           ;psect for function _I2C1_ErrorInterruptClear
 10636                           
 10637     0D54                     i1l2669:	
 10638                           ;incstack = 0
 10639                           ; Regs used in _I2C1_ErrorInterruptClear: []
 10640                           
 10641                           
 10642                           ;mcc_generated_files/i2c_host/src/mssp.c: 493:     PIR2bits.BCL1IF = 0;
 10643     0D54  0020               	movlb	0	; select bank0
 10644     0D55  1192               	bcf	18,3	;volatile
 10645     0D56                     i1l299:
 10646     0D56  0008               	return
 10647     0D57                     __end_of_I2C1_ErrorInterruptClear:
 10648                           
 10649                           	psect	text71
 10650     0D7C                     __ptext71:	
 10651 ;; *************** function _I2C1_BusReset *****************
 10652 ;; Defined at:
 10653 ;;		line 411 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		None
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;Total ram usage:        0 bytes
 10672 ;; Hardware stack levels used: 1
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_I2C1_EVENT_RESET
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680     0D7C                     _I2C1_BusReset:	
 10681                           ;psect for function _I2C1_BusReset
 10682                           
 10683     0D7C                     i1l2839:	
 10684                           ;incstack = 0
 10685                           ; Regs used in _I2C1_BusReset: []
 10686                           
 10687                           
 10688                           ;mcc_generated_files/i2c_host/src/mssp.c: 413:     SSP1CON1bits.SSPEN = 0;
 10689     0D7C  0024               	movlb	4	; select bank4
 10690     0D7D  1295               	bcf	21,5	;volatile
 10691                           
 10692                           ;mcc_generated_files/i2c_host/src/mssp.c: 414:     SSP1CON1bits.SSPEN = 1;
 10693     0D7E  1695               	bsf	21,5	;volatile
 10694     0D7F                     i1l254:
 10695     0D7F  0008               	return
 10696     0D80                     __end_of_I2C1_BusReset:
 10697                           
 10698                           	psect	text72
 10699     0F0A                     __ptext72:	
 10700 ;; *************** function _EUSART_TransmitISR *****************
 10701 ;; Defined at:
 10702 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;		None
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  tempTxTail      1    0[COMMON] unsigned char 
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;Total ram usage:        1 bytes
 10721 ;; Hardware stack levels used: 1
 10722 ;; This function calls:
 10723 ;;		Nothing
 10724 ;; This function is called by:
 10725 ;;		_EUSART_Initialize
 10726 ;;		_INTERRUPT_InterruptManager
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730     0F0A                     _EUSART_TransmitISR:	
 10731                           ;psect for function _EUSART_TransmitISR
 10732                           
 10733     0F0A                     i1l3447:	
 10734                           ;incstack = 0
 10735                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10736                           
 10737                           
 10738                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 10739     0F0A  3008               	movlw	8
 10740     0F0B  027B               	subwf	_eusartTxBufferRemaining,w	;volatile
 10741     0F0C  1803               	skipnc
 10742     0F0D  2F0F               	goto	u217_21
 10743     0F0E  2F10               	goto	u217_20
 10744     0F0F                     u217_21:
 10745     0F0F  2F20               	goto	i1l754
 10746     0F10                     u217_20:
 10747     0F10                     i1l3449:
 10748                           
 10749                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 10750     0F10  087C               	movf	_eusartTxTail,w
 10751     0F11  3ECA               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 10752     0F12  0086               	movwf	6
 10753     0F13  0187               	clrf	7
 10754     0F14  0801               	movf	1,w
 10755     0F15  0023               	movlb	3	; select bank3
 10756     0F16  009A               	movwf	26	;volatile
 10757     0F17                     i1l3451:
 10758                           
 10759                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 10760     0F17  087C               	movf	_eusartTxTail,w	;volatile
 10761     0F18  3E01               	addlw	1
 10762     0F19  3907               	andlw	7
 10763     0F1A  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 10764     0F1B                     i1l3453:
 10765                           
 10766                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 10767     0F1B  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 10768     0F1C  00FC               	movwf	_eusartTxTail	;volatile
 10769     0F1D                     i1l3455:
 10770                           
 10771                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 10772     0F1D  3001               	movlw	1
 10773     0F1E  07FB               	addwf	_eusartTxBufferRemaining,f	;volatile
 10774                           
 10775                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 10776     0F1F  2F22               	goto	i1l757
 10777     0F20                     i1l754:	
 10778                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 10779                           
 10780                           
 10781                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 10782     0F20  0021               	movlb	1	; select bank1
 10783     0F21  1211               	bcf	17,4	;volatile
 10784     0F22                     i1l757:
 10785     0F22  0008               	return
 10786     0F23                     __end_of_EUSART_TransmitISR:
 10787                           
 10788                           	psect	text73
 10789     04D1                     __ptext73:	
 10790 ;; *************** function _EUSART_ReceiveISR *****************
 10791 ;; Defined at:
 10792 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;		None
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;  tempRxHead      1    8[COMMON] unsigned char 
 10797 ;;  regValue        1    7[COMMON] unsigned char 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      void 
 10800 ;; Registers used:
 10801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;Total ram usage:        2 bytes
 10812 ;; Hardware stack levels used: 1
 10813 ;; Hardware stack levels required when called: 2
 10814 ;; This function calls:
 10815 ;;		NULL
 10816 ;;		_APC220_Receiver_Interrupt
 10817 ;;		_EUSART_DefaultFramingErrorCallback
 10818 ;;		_EUSART_DefaultOverrunErrorCallback
 10819 ;; This function is called by:
 10820 ;;		_EUSART_Initialize
 10821 ;;		_INTERRUPT_InterruptManager
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825     04D1                     _EUSART_ReceiveISR:	
 10826                           ;psect for function _EUSART_ReceiveISR
 10827                           
 10828     04D1                     i1l3411:	
 10829                           ;incstack = 0
 10830                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10831                           
 10832                           
 10833                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 10834     04D1  357A               	lslf	_eusartRxHead,w	;volatile
 10835     04D2  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 10836     04D3  0086               	movwf	6
 10837     04D4  0187               	clrf	7
 10838     04D5  3000               	movlw	0
 10839     04D6  3FC0               	movwi [0]fsr1
 10840     04D7  3FC1               	movwi [1]fsr1
 10841     04D8                     i1l3413:
 10842                           
 10843                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 10844     04D8  0023               	movlb	3	; select bank3
 10845     04D9  1C9D               	btfss	29,1	;volatile
 10846     04DA  2CDC               	goto	u211_21
 10847     04DB  2CDD               	goto	u211_20
 10848     04DC                     u211_21:
 10849     04DC  2CEE               	goto	i1l3421
 10850     04DD                     u211_20:
 10851     04DD                     i1l3415:
 10852                           
 10853                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 10854     04DD  357A               	lslf	_eusartRxHead,w	;volatile
 10855     04DE  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 10856     04DF  0086               	movwf	6
 10857     04E0  0187               	clrf	7
 10858     04E1  1501               	bsf	1,2
 10859     04E2                     i1l3417:
 10860                           
 10861                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 10862     04E2  0021               	movlb	1	; select bank1
 10863     04E3  085C               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 10864     04E4  045D               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 10865     04E5  1903               	btfsc	3,2
 10866     04E6  2CE8               	goto	u212_21
 10867     04E7  2CE9               	goto	u212_20
 10868     04E8                     u212_21:
 10869     04E8  2CEE               	goto	i1l3421
 10870     04E9                     u212_20:
 10871     04E9                     i1l3419:
 10872                           
 10873                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 10874     04E9  085D               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 10875     04EA  008A               	movwf	10
 10876     04EB  085C               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 10877     04EC  000A               	callw
 10878     04ED  3184               	pagesel	$
 10879     04EE                     i1l3421:
 10880                           
 10881                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 10882     04EE  0023               	movlb	3	; select bank3
 10883     04EF  1D1D               	btfss	29,2	;volatile
 10884     04F0  2CF2               	goto	u213_21
 10885     04F1  2CF3               	goto	u213_20
 10886     04F2                     u213_21:
 10887     04F2  2D04               	goto	i1l3429
 10888     04F3                     u213_20:
 10889     04F3                     i1l3423:
 10890                           
 10891                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 10892     04F3  357A               	lslf	_eusartRxHead,w	;volatile
 10893     04F4  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 10894     04F5  0086               	movwf	6
 10895     04F6  0187               	clrf	7
 10896     04F7  1481               	bsf	1,1
 10897     04F8                     i1l3425:
 10898                           
 10899                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 10900     04F8  0021               	movlb	1	; select bank1
 10901     04F9  085E               	movf	_EUSART_FramingErrorHandler^(0+128),w
 10902     04FA  045F               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 10903     04FB  1903               	btfsc	3,2
 10904     04FC  2CFE               	goto	u214_21
 10905     04FD  2CFF               	goto	u214_20
 10906     04FE                     u214_21:
 10907     04FE  2D04               	goto	i1l3429
 10908     04FF                     u214_20:
 10909     04FF                     i1l3427:
 10910                           
 10911                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 10912     04FF  085F               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 10913     0500  008A               	movwf	10
 10914     0501  085E               	movf	_EUSART_FramingErrorHandler^(0+128),w
 10915     0502  000A               	callw
 10916     0503  3184               	pagesel	$
 10917     0504                     i1l3429:
 10918                           
 10919                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 10920     0504  0023               	movlb	3	; select bank3
 10921     0505  0819               	movf	25,w	;volatile
 10922     0506  00F7               	movwf	EUSART_ReceiveISR@regValue
 10923     0507                     i1l3431:
 10924                           
 10925                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 10926     0507  087A               	movf	_eusartRxHead,w	;volatile
 10927     0508  3E01               	addlw	1
 10928     0509  3907               	andlw	7
 10929     050A  00F8               	movwf	EUSART_ReceiveISR@tempRxHead
 10930     050B                     i1l3433:
 10931                           
 10932                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 10933     050B  0878               	movf	EUSART_ReceiveISR@tempRxHead,w
 10934     050C  0679               	xorwf	_eusartRxTail,w	;volatile
 10935     050D  1D03               	skipz
 10936     050E  2D10               	goto	u215_21
 10937     050F  2D11               	goto	u215_20
 10938     0510                     u215_21:
 10939     0510  2D12               	goto	i1l3437
 10940     0511                     u215_20:
 10941     0511  2D1E               	goto	i1l3443
 10942     0512                     i1l3437:
 10943                           
 10944                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 10945     0512  087A               	movf	_eusartRxHead,w
 10946     0513  3E40               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10947     0514  0086               	movwf	6
 10948     0515  3001               	movlw	1	; select bank2/3
 10949     0516  0087               	movwf	7
 10950     0517  0877               	movf	EUSART_ReceiveISR@regValue,w
 10951     0518  0081               	movwf	1
 10952     0519                     i1l3439:
 10953                           
 10954                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 10955     0519  0878               	movf	EUSART_ReceiveISR@tempRxHead,w
 10956     051A  00FA               	movwf	_eusartRxHead	;volatile
 10957     051B                     i1l3441:
 10958                           
 10959                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 10960     051B  3001               	movlw	1
 10961     051C  0020               	movlb	0	; select bank0
 10962     051D  07EF               	addwf	_eusartRxCount,f	;volatile
 10963     051E                     i1l3443:
 10964                           
 10965                           ;mcc_generated_files/uart/src/eusart.c: 347:     if(((void*)0) != EUSART_RxCompleteInter
      +                          ruptHandler)
 10966     051E  0021               	movlb	1	; select bank1
 10967     051F  0860               	movf	_EUSART_RxCompleteInterruptHandler^(0+128),w
 10968     0520  0461               	iorwf	(_EUSART_RxCompleteInterruptHandler+1)^(0+128),w
 10969     0521  1903               	btfsc	3,2
 10970     0522  2D24               	goto	u216_21
 10971     0523  2D25               	goto	u216_20
 10972     0524                     u216_21:
 10973     0524  2D2A               	goto	i1l744
 10974     0525                     u216_20:
 10975     0525                     i1l3445:
 10976                           
 10977                           ;mcc_generated_files/uart/src/eusart.c: 348:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 349:         (*EUSART_RxCompleteInterruptHandler)();
 10978     0525  0861               	movf	(_EUSART_RxCompleteInterruptHandler+1)^(0+128),w
 10979     0526  008A               	movwf	10
 10980     0527  0860               	movf	_EUSART_RxCompleteInterruptHandler^(0+128),w
 10981     0528  000A               	callw
 10982     0529  3184               	pagesel	$
 10983     052A                     i1l744:
 10984     052A  0008               	return
 10985     052B                     __end_of_EUSART_ReceiveISR:
 10986                           
 10987                           	psect	text74
 10988     0D78                     __ptext74:	
 10989 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 10990 ;; Defined at:
 10991 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  1    wreg      void 
 10998 ;; Registers used:
 10999 ;;		None
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;Total ram usage:        0 bytes
 11010 ;; Hardware stack levels used: 1
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_EUSART_Initialize
 11015 ;;		_EUSART_ReceiveISR
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019     0D78                     _EUSART_DefaultOverrunErrorCallback:	
 11020                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11021                           
 11022     0D78                     i1l3321:	
 11023                           ;incstack = 0
 11024                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11025                           
 11026                           
 11027                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 11028     0D78  0023               	movlb	3	; select bank3
 11029     0D79  121D               	bcf	29,4	;volatile
 11030                           
 11031                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 11032     0D7A  161D               	bsf	29,4	;volatile
 11033     0D7B                     i1l775:
 11034     0D7B  0008               	return
 11035     0D7C                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11036                           
 11037                           	psect	text75
 11038     0003                     __ptext75:	
 11039 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11040 ;; Defined at:
 11041 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		None
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_EUSART_Initialize
 11065 ;;		_EUSART_ReceiveISR
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069     0003                     _EUSART_DefaultFramingErrorCallback:	
 11070                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11071                           
 11072     0003                     i1l772:	
 11073                           ;incstack = 0
 11074                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11075                           
 11076     0003  0008               	return
 11077     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11078                           
 11079                           	psect	text76
 11080     07CF                     __ptext76:	
 11081 ;; *************** function _APC220_Receiver_Interrupt *****************
 11082 ;; Defined at:
 11083 ;;		line 176 in file "main.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;		None
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  msg             1    6[COMMON] unsigned char 
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      void 
 11090 ;; Registers used:
 11091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;Total ram usage:        1 bytes
 11102 ;; Hardware stack levels used: 1
 11103 ;; Hardware stack levels required when called: 1
 11104 ;; This function calls:
 11105 ;;		_EUSART_Read
 11106 ;;		i1___awmod
 11107 ;; This function is called by:
 11108 ;;		_SYSTEM_STARTUP
 11109 ;;		_EUSART_ReceiveISR
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113     07CF                     _APC220_Receiver_Interrupt:	
 11114                           ;psect for function _APC220_Receiver_Interrupt
 11115                           
 11116     07CF                     i1l3381:	
 11117                           ;incstack = 0
 11118                           ; Regs used in _APC220_Receiver_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 11119                           
 11120                           
 11121                           ;main.c: 177:  static uint8_t index = 0;;main.c: 178:     char msg = EUSART_Read();
 11122     07CF  318F  2723  3187   	fcall	_EUSART_Read
 11123     07D2  00F6               	movwf	APC220_Receiver_Interrupt@msg
 11124     07D3                     i1l3383:
 11125                           
 11126                           ;main.c: 179:     if(msg == '\r'){
 11127     07D3  300D               	movlw	13
 11128     07D4  0676               	xorwf	APC220_Receiver_Interrupt@msg,w
 11129     07D5  1D03               	btfss	3,2
 11130     07D6  2FD8               	goto	u208_21
 11131     07D7  2FD9               	goto	u208_20
 11132     07D8                     u208_21:
 11133     07D8  2FDF               	goto	i1l3389
 11134     07D9                     u208_20:
 11135     07D9                     i1l3385:
 11136                           
 11137                           ;main.c: 180:         Flags.UART_Data = 1;
 11138     07D9  3001               	movlw	1
 11139     07DA  0021               	movlb	1	; select bank1
 11140     07DB  00D2               	movwf	_Flags^(0+128)
 11141     07DC                     i1l3387:
 11142                           
 11143                           ;main.c: 181:         index = 0;
 11144     07DC  0020               	movlb	0	; select bank0
 11145     07DD  01EE               	clrf	APC220_Receiver_Interrupt@index
 11146                           
 11147                           ;main.c: 182:     }
 11148     07DE  2FF7               	goto	i1l885
 11149     07DF                     i1l3389:
 11150                           
 11151                           ;main.c: 184:         cmd[index] = msg;
 11152     07DF  0020               	movlb	0	; select bank0
 11153     07E0  086E               	movf	APC220_Receiver_Interrupt@index,w
 11154     07E1  3ED5               	addlw	(low (_cmd| 0))& (0+255)
 11155     07E2  0086               	movwf	6
 11156     07E3  0187               	clrf	7
 11157     07E4  0876               	movf	APC220_Receiver_Interrupt@msg,w
 11158     07E5  0081               	movwf	1
 11159     07E6                     i1l3391:
 11160                           
 11161                           ;main.c: 185:   index = (index + 1) % 3;
 11162     07E6  3003               	movlw	3
 11163     07E7  00F0               	movwf	i1___awmod@divisor
 11164     07E8  3000               	movlw	0
 11165     07E9  00F1               	movwf	i1___awmod@divisor+1
 11166     07EA  086E               	movf	APC220_Receiver_Interrupt@index,w
 11167     07EB  3E01               	addlw	1
 11168     07EC  00F2               	movwf	i1___awmod@dividend
 11169     07ED  3000               	movlw	0
 11170     07EE  1803               	skipnc
 11171     07EF  3001               	movlw	1
 11172     07F0  00F3               	movwf	i1___awmod@dividend+1
 11173     07F1  3185  257D  3187   	fcall	i1___awmod
 11174     07F4  0870               	movf	?i1___awmod,w
 11175     07F5  0020               	movlb	0	; select bank0
 11176     07F6  00EE               	movwf	APC220_Receiver_Interrupt@index
 11177     07F7                     i1l885:
 11178     07F7  0008               	return
 11179     07F8                     __end_of_APC220_Receiver_Interrupt:
 11180                           
 11181                           	psect	text77
 11182     057D                     __ptext77:	
 11183 ;; *************** function i1___awmod *****************
 11184 ;; Defined at:
 11185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;  divisor         2    0[COMMON] int 
 11188 ;;  dividend        2    2[COMMON] int 
 11189 ;; Auto vars:     Size  Location     Type
 11190 ;;  sign            1    5[COMMON] unsigned char 
 11191 ;;  counter         1    4[COMMON] unsigned char 
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  2    0[COMMON] int 
 11194 ;; Registers used:
 11195 ;;		wreg, status,2, status,0
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;Total ram usage:        6 bytes
 11206 ;; Hardware stack levels used: 1
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		_APC220_Receiver_Interrupt
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214     057D                     i1___awmod:	
 11215                           ;psect for function i1___awmod
 11216                           
 11217     057D                     i1l3103:	
 11218                           ;incstack = 0
 11219                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
 11220                           
 11221     057D  01F5               	clrf	i1___awmod@sign
 11222     057E                     i1l3105:
 11223     057E  1FF3               	btfss	i1___awmod@dividend+1,7
 11224     057F  2D81               	goto	u189_21
 11225     0580  2D82               	goto	u189_20
 11226     0581                     u189_21:
 11227     0581  2D89               	goto	i1l3111
 11228     0582                     u189_20:
 11229     0582                     i1l3107:
 11230     0582  09F2               	comf	i1___awmod@dividend,f
 11231     0583  09F3               	comf	i1___awmod@dividend+1,f
 11232     0584  0AF2               	incf	i1___awmod@dividend,f
 11233     0585  1903               	skipnz
 11234     0586  0AF3               	incf	i1___awmod@dividend+1,f
 11235     0587                     i1l3109:
 11236     0587  3001               	movlw	1
 11237     0588  00F5               	movwf	i1___awmod@sign
 11238     0589                     i1l3111:
 11239     0589  1FF1               	btfss	i1___awmod@divisor+1,7
 11240     058A  2D8C               	goto	u190_21
 11241     058B  2D8D               	goto	u190_20
 11242     058C                     u190_21:
 11243     058C  2D92               	goto	i1l3115
 11244     058D                     u190_20:
 11245     058D                     i1l3113:
 11246     058D  09F0               	comf	i1___awmod@divisor,f
 11247     058E  09F1               	comf	i1___awmod@divisor+1,f
 11248     058F  0AF0               	incf	i1___awmod@divisor,f
 11249     0590  1903               	skipnz
 11250     0591  0AF1               	incf	i1___awmod@divisor+1,f
 11251     0592                     i1l3115:
 11252     0592  0870               	movf	i1___awmod@divisor,w
 11253     0593  0471               	iorwf	i1___awmod@divisor+1,w
 11254     0594  1903               	btfsc	3,2
 11255     0595  2D97               	goto	u191_21
 11256     0596  2D98               	goto	u191_20
 11257     0597                     u191_21:
 11258     0597  2DBF               	goto	i1l3133
 11259     0598                     u191_20:
 11260     0598                     i1l3117:
 11261     0598  3001               	movlw	1
 11262     0599  00F4               	movwf	i1___awmod@counter
 11263     059A  2DA2               	goto	i1l3123
 11264     059B                     i1l3119:
 11265     059B  3001               	movlw	1
 11266     059C                     u192_25:
 11267     059C  35F0               	lslf	i1___awmod@divisor,f
 11268     059D  0DF1               	rlf	i1___awmod@divisor+1,f
 11269     059E  0B89               	decfsz	9,f
 11270     059F  2D9C               	goto	u192_25
 11271     05A0                     i1l3121:
 11272     05A0  3001               	movlw	1
 11273     05A1  07F4               	addwf	i1___awmod@counter,f
 11274     05A2                     i1l3123:
 11275     05A2  1FF1               	btfss	i1___awmod@divisor+1,7
 11276     05A3  2DA5               	goto	u193_21
 11277     05A4  2DA6               	goto	u193_20
 11278     05A5                     u193_21:
 11279     05A5  2D9B               	goto	i1l3119
 11280     05A6                     u193_20:
 11281     05A6                     i1l3125:
 11282     05A6  0871               	movf	i1___awmod@divisor+1,w
 11283     05A7  0273               	subwf	i1___awmod@dividend+1,w
 11284     05A8  1D03               	skipz
 11285     05A9  2DAC               	goto	u194_25
 11286     05AA  0870               	movf	i1___awmod@divisor,w
 11287     05AB  0272               	subwf	i1___awmod@dividend,w
 11288     05AC                     u194_25:
 11289     05AC  1C03               	skipc
 11290     05AD  2DAF               	goto	u194_21
 11291     05AE  2DB0               	goto	u194_20
 11292     05AF                     u194_21:
 11293     05AF  2DB4               	goto	i1l3129
 11294     05B0                     u194_20:
 11295     05B0                     i1l3127:
 11296     05B0  0870               	movf	i1___awmod@divisor,w
 11297     05B1  02F2               	subwf	i1___awmod@dividend,f
 11298     05B2  0871               	movf	i1___awmod@divisor+1,w
 11299     05B3  3BF3               	subwfb	i1___awmod@dividend+1,f
 11300     05B4                     i1l3129:
 11301     05B4  3001               	movlw	1
 11302     05B5                     u195_25:
 11303     05B5  36F1               	lsrf	i1___awmod@divisor+1,f
 11304     05B6  0CF0               	rrf	i1___awmod@divisor,f
 11305     05B7  0B89               	decfsz	9,f
 11306     05B8  2DB5               	goto	u195_25
 11307     05B9                     i1l3131:
 11308     05B9  3001               	movlw	1
 11309     05BA  02F4               	subwf	i1___awmod@counter,f
 11310     05BB  1D03               	btfss	3,2
 11311     05BC  2DBE               	goto	u196_21
 11312     05BD  2DBF               	goto	u196_20
 11313     05BE                     u196_21:
 11314     05BE  2DA6               	goto	i1l3125
 11315     05BF                     u196_20:
 11316     05BF                     i1l3133:
 11317     05BF  0875               	movf	i1___awmod@sign,w
 11318     05C0  1903               	btfsc	3,2
 11319     05C1  2DC3               	goto	u197_21
 11320     05C2  2DC4               	goto	u197_20
 11321     05C3                     u197_21:
 11322     05C3  2DC9               	goto	i1l3137
 11323     05C4                     u197_20:
 11324     05C4                     i1l3135:
 11325     05C4  09F2               	comf	i1___awmod@dividend,f
 11326     05C5  09F3               	comf	i1___awmod@dividend+1,f
 11327     05C6  0AF2               	incf	i1___awmod@dividend,f
 11328     05C7  1903               	skipnz
 11329     05C8  0AF3               	incf	i1___awmod@dividend+1,f
 11330     05C9                     i1l3137:
 11331     05C9  0873               	movf	i1___awmod@dividend+1,w
 11332     05CA  00F1               	movwf	?i1___awmod+1
 11333     05CB  0872               	movf	i1___awmod@dividend,w
 11334     05CC  00F0               	movwf	?i1___awmod
 11335     05CD                     i1l1140:
 11336     05CD  0008               	return
 11337     05CE                     __end_ofi1___awmod:
 11338                           
 11339                           	psect	text78
 11340     0F23                     __ptext78:	
 11341 ;; *************** function _EUSART_Read *****************
 11342 ;; Defined at:
 11343 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;		None
 11346 ;; Auto vars:     Size  Location     Type
 11347 ;;  readValue       1    1[COMMON] unsigned char 
 11348 ;;  tempRxTail      1    0[COMMON] unsigned char 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      unsigned char 
 11351 ;; Registers used:
 11352 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;Total ram usage:        2 bytes
 11363 ;; Hardware stack levels used: 1
 11364 ;; This function calls:
 11365 ;;		Nothing
 11366 ;; This function is called by:
 11367 ;;		_APC220_Receiver_Interrupt
 11368 ;;		_getch
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372     0F23                     _EUSART_Read:	
 11373                           ;psect for function _EUSART_Read
 11374                           
 11375     0F23                     i1l3077:	
 11376                           ;incstack = 0
 11377                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11378                           
 11379     0F23                     i1l3079:
 11380                           
 11381                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
 11382     0F23  0879               	movf	_eusartRxTail,w
 11383     0F24  3E40               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11384     0F25  0086               	movwf	6
 11385     0F26  3001               	movlw	1	; select bank2/3
 11386     0F27  0087               	movwf	7
 11387     0F28  0801               	movf	1,w
 11388     0F29  00F1               	movwf	EUSART_Read@readValue
 11389     0F2A                     i1l3081:
 11390                           
 11391                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 11392     0F2A  0879               	movf	_eusartRxTail,w	;volatile
 11393     0F2B  3E01               	addlw	1
 11394     0F2C  3907               	andlw	7
 11395     0F2D  00F0               	movwf	EUSART_Read@tempRxTail
 11396     0F2E                     i1l3083:
 11397                           
 11398                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
 11399     0F2E  0870               	movf	EUSART_Read@tempRxTail,w
 11400     0F2F  00F9               	movwf	_eusartRxTail	;volatile
 11401     0F30                     i1l3085:
 11402                           
 11403                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
 11404     0F30  0021               	movlb	1	; select bank1
 11405     0F31  1291               	bcf	17,5	;volatile
 11406     0F32                     i1l3087:
 11407                           
 11408                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
 11409     0F32  0020               	movlb	0	; select bank0
 11410     0F33  086F               	movf	_eusartRxCount,w	;volatile
 11411     0F34  1903               	btfsc	3,2
 11412     0F35  2F37               	goto	u188_21
 11413     0F36  2F38               	goto	u188_20
 11414     0F37                     u188_21:
 11415     0F37  2F3A               	goto	i1l3091
 11416     0F38                     u188_20:
 11417     0F38                     i1l3089:
 11418                           
 11419                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
 11420     0F38  3001               	movlw	1
 11421     0F39  02EF               	subwf	_eusartRxCount,f	;volatile
 11422     0F3A                     i1l3091:
 11423                           
 11424                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
 11425     0F3A  0021               	movlb	1	; select bank1
 11426     0F3B  1691               	bsf	17,5	;volatile
 11427     0F3C                     i1l3093:
 11428                           
 11429                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
 11430     0F3C  0871               	movf	EUSART_Read@readValue,w
 11431     0F3D                     i1l734:
 11432     0F3D  0008               	return
 11433     0F3E                     __end_of_EUSART_Read:
 11434     0002                     ___latbits      equ	2
 11435     007E                     btemp           set	126	;btemp
 11436     007E                     int$flags       set	126
 11437     007E                     wtemp0          set	126
 11438                           
 11439                           	psect	config
 11440                           
 11441                           ;Config register CONFIG1 @ 0x8007
 11442                           ;	Oscillator Selection Bits
 11443                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11444                           ;	Watchdog Timer Enable
 11445                           ;	WDTE = OFF, WDT disabled
 11446                           ;	Power-up Timer Enable
 11447                           ;	PWRTE = OFF, PWRT disabled
 11448                           ;	MCLR Pin Function Select
 11449                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11450                           ;	Flash Program Memory Code Protection
 11451                           ;	CP = OFF, Program memory code protection is disabled
 11452                           ;	Brown-out Reset Enable
 11453                           ;	BOREN = ON, Brown-out Reset enabled
 11454                           ;	Clock Out Enable
 11455                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11456                           ;	Internal/External Switchover Mode
 11457                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 11458                           ;	Fail-Safe Clock Monitor Enable
 11459                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11460     8007                     	org	32775
 11461     8007  3FE4               	dw	16356
 11462                           
 11463                           ;Config register CONFIG2 @ 0x8008
 11464                           ;	Flash Memory Self-Write Protection
 11465                           ;	WRT = OFF, Write protection off
 11466                           ;	Peripheral Pin Select one-way control
 11467                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 11468                           ;	Zero-cross detect disable
 11469                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 11470                           ;	Phase Lock Loop enable
 11471                           ;	PLLEN = OFF, 4x PLL is disabled
 11472                           ;	Stack Overflow/Underflow Reset Enable
 11473                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11474                           ;	Brown-out Reset Voltage Selection
 11475                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11476                           ;	Low-Power Brown Out Reset
 11477                           ;	LPBOR = OFF, Low-Power BOR is disabled
 11478                           ;	In-Circuit Debugger Mode
 11479                           ;	DEBUG = 0x1, unprogrammed default
 11480                           ;	Low-Voltage Programming Enable
 11481                           ;	LVP = ON, Low-voltage programming enabled
 11482     8008                     	org	32776
 11483     8008  3EFF               	dw	16127

Data Sizes:
    Strings     263
    Constant    86
    Data        8
    BSS         124
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     73      80
    BANK1            80      0      80
    BANK2            80      0      48
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ESC_Programming@settings	PTR unsigned char  size(1) Largest target is 8
		 -> ESC_Setting(BANK2[8]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APC220_Receiver_Interrupt(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APC220_Receiver_Interrupt(), NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2c1_eventTable	const PTR FTN()enum E4174[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C1_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C1_Host$ErrorGet	PTR FTN()enum E4165 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C1_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C1_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C1_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C1_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C1_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    i2c1Status$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    INT_IMU_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_IMU_DefaultInterruptHandler(), NULL(), 

    INT_IMU_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_IMU_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    NULL$0	PTR struct i2c_transfer_setup size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[8]), STR_10(CODE[18]), STR_11(CODE[16]), STR_12(CODE[19]), 
		 -> STR_13(CODE[28]), STR_14(CODE[27]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[24]), STR_5(CODE[27]), STR_6(CODE[3]), STR_7(CODE[21]), 
		 -> STR_8(CODE[22]), STR_9(CODE[21]), 

    S1221$17$0	PTR FTN()void  size(2) Largest target is 0

    S1221$18$0	PTR FTN()void  size(2) Largest target is 1
		 -> APC220_Receiver_Interrupt(), 

    S1221$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S1221$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S1221$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S1221$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S1221$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S1221$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1221$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1221$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1221$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1221$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S1221$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S1221$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1221$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S1221$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S1221$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S1221$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S1221$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S1221$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S1221$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1221$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S1221$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S1221$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S1221$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S1221$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1221$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S1221$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S140$2$1	PTR unsigned char  size(2) Largest target is 0

    S140$3$1	PTR unsigned char  size(2) Largest target is 0

    S140$4$1	PTR unsigned char  size(2) Largest target is 0

    S140$4$3	PTR unsigned char  size(2) Largest target is 0

    S140$8$0	PTR FTN()void  size(2) Largest target is 0

    S140$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S140$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S140$ErrorGet	PTR FTN()enum E4165 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S140$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S140$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S140$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S140$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S140$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S140$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S140$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S2104$buffer	PTR unsigned char  size(2) Largest target is 0

    S2104$source	PTR const unsigned char  size(2) Largest target is 0

    S239$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S239$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[8]), STR_10(CODE[18]), STR_11(CODE[16]), STR_12(CODE[19]), 
		 -> STR_13(CODE[28]), STR_14(CODE[27]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[24]), STR_5(CODE[27]), STR_6(CODE[3]), STR_7(CODE[21]), 
		 -> STR_8(CODE[22]), STR_9(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[8]), STR_10(CODE[18]), STR_11(CODE[16]), STR_12(CODE[19]), 
		 -> STR_13(CODE[28]), STR_14(CODE[27]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[24]), STR_5(CODE[27]), STR_6(CODE[3]), STR_7(CODE[21]), 
		 -> STR_8(CODE[22]), STR_9(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[8]), STR_10(CODE[18]), STR_11(CODE[16]), STR_12(CODE[19]), 
		 -> STR_13(CODE[28]), STR_14(CODE[27]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[24]), STR_5(CODE[27]), STR_6(CODE[3]), STR_7(CODE[21]), 
		 -> STR_8(CODE[22]), STR_9(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_ReceiveISR
    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit
    _EUSART_ReceiveISR->_APC220_Receiver_Interrupt
    _APC220_Receiver_Interrupt->i1___awmod

Critical Paths under _main in BANK0

    _main->_SYSTEM_UPDATE
    _SYSTEM_UPDATE->_ESC_Programming
    _ESC_Programming->_printf
    _PWM4_LoadDutyValue->_make16
    _PWM3_LoadDutyValue->_make16
    _SYSTEM_STARTUP->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    _PIN_MANAGER_Initialize->_INT_IMU_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7977
                                             71 BANK0      2     2      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                  _SYSTEM_Initialize
                     _SYSTEM_STARTUP
                      _SYSTEM_UPDATE
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_UPDATE                                       12    12      0    5322
                                             59 BANK0     12    12      0
                  _ADC_GetConversion
                    _ESC_Programming
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                             _make16
                             _printf
 ---------------------------------------------------------------------------------
 (2) _make16                                               8     6      2      82
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _ESC_Programming                                      8     7      1    2628
                                             51 BANK0      8     7      1
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                             _printf
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2      50
                                              8 BANK0      4     2      2
                             _make16 (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2      50
                                              8 BANK0      4     2      2
                             _make16 (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      29
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_STARTUP                                       2     2      0    2390
                                             51 BANK0      2     2      0
                      _EUSART_Enable
               _EUSART_ReceiveEnable
      _EUSART_ReceiveInterruptEnable
  _EUSART_RxCompleteCallbackRegister
              _EUSART_TransmitEnable
     _EUSART_TransmitInterruptEnable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              17     3     14    2345
                                             36 BANK0     15     1     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     3      5    2275
                                             28 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    12      4    2148
                                             12 BANK0     16    12      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     329
                                              3 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      97
                                              2 BANK0      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     1      1      68
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _EUSART_IsTxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     161
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     164
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_TransmitInterruptEnable                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_TransmitEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_RxCompleteCallbackRegister                    2     0      2      45
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_ReceiveInterruptEnable                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_ReceiveEnable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     136
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      23
        _INT_IMU_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_IMU_SetInterruptHandler                          2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     851
                                NULL *
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            0     0      0     185
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (11) _I2C1_EventHandler                                   2     2      0     185
                                              2 COMMON     2     2      0
                         _I2C1_Close
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (12) _I2C1_IsNack                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_IsData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_IsAddr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ERROR_ISR                                      0     0      0     185
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (11) _I2C1_ErrorEventHandler                              2     2      0     185
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_TX                                       1     1      0      55
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (13) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_SEND_WR_ADDR                             0     0      0      29
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_SEND_RD_ADDR                             0     0      0      29
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (13) _I2C1_DataTransmit                                   1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_RX                                       1     1      0      24
                                              0 COMMON     1     1      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (13) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_NACK                                     1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (13) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (14) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (15) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_InterruptClear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_IDLE                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_ERROR                                    1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (12) _I2C1_EVENT_RESET                                    0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (13) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_ReceiveISR                                   2     2      0     458
                                              7 COMMON     2     2      0
                                NULL *
          _APC220_Receiver_Interrupt *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APC220_Receiver_Interrupt                           1     1      0     390
                                              6 COMMON     1     1      0
                        _EUSART_Read
                          i1___awmod
 ---------------------------------------------------------------------------------
 (12) i1___awmod                                           6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (12) _EUSART_Read                                         2     2      0      47
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _PWM3_LoadDutyValue
     _make16 (ARG)
   _PWM4_LoadDutyValue
     _make16 (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _INT_IMU_SetInterruptHandler
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
   _SYSTEM_STARTUP
     _EUSART_Enable
     _EUSART_ReceiveEnable
     _EUSART_ReceiveInterruptEnable
     _EUSART_RxCompleteCallbackRegister
     _EUSART_TransmitEnable
     _EUSART_TransmitInterruptEnable
     _printf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
               _EUSART_IsTxReady
               _EUSART_Write
   _SYSTEM_UPDATE
     _ADC_GetConversion
     _ESC_Programming
       _PWM3_LoadDutyValue
       _PWM4_LoadDutyValue
       _printf
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
     _make16
     _printf

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _APC220_Receiver_Interrupt *
       _EUSART_Read
       i1___awmod
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _I2C1_ERROR_ISR *
     _I2C1_ErrorEventHandler
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR *
     _I2C1_EventHandler
       _I2C1_Close
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      9      14    100.0%
BANK0               80     73      80    100.0%
BANK1               80      0      80    100.0%
BANK2               80      0      48     60.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     222      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jan 17 19:05:35 2025

                                                l34 0FAA                                                  l19 0E29  
                                                l37 0FB5                                        ___awdiv@sign 0025  
       __end_of_EUSART_OverrunErrorCallbackRegister 0E62               ??_EUSART_OverrunErrorCallbackRegister 0022  
              ?_EUSART_OverrunErrorCallbackRegister 0020                 _EUSART_OverrunErrorCallbackRegister 0E53  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                                               l313 0E15                                                 l330 0F09  
                                               l316 0EF1                                                 l157 0E70  
                                               l503 0E0C                                                 l327 0E1E  
                                               l361 0E35                                                 l290 0D9F  
                                               l419 0F59                                                 l525 0E43  
                                               l386 0DC1                                                 l715 0D71  
                                               l492 0664                                                 l724 0DFA  
                                               l709 0D77                                                 l398 0E03  
                                               l671 0D6B                                                 l751 0FD8  
                                               l903 0416                                                 l665 070D  
                                               l906 0EC4                                                 l683 0D6E  
                                               l748 0FD6                                                 l677 0D74  
                                               l846 0FDC                                                 l783 0E61  
                                               l855 0771                                                 l871 024C  
                                               l872 0256                                                 l864 0212  
                                               l769 0EA0                                                 l779 0E52  
                                               l787 0E7F                                                 l867 021D  
                                               l878 0310                                                 l897 0393  
                                               _PR2 001B                                                 _abs 0EA1  
                                               _cmd 00D5                           __end_of_I2C1_DataTransmit 0DA5  
                                      ___awmod@sign 0025                                     _TMR2_Initialize 0E36  
                                   _PWM4_Initialize 0E16                                                 wreg 0009  
                          _I2C1_ErrorInterruptClear 0D54                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                    __end_of_I2C1_ISR 0D9C  
                                              ?_abs 0026                                                l1140 057C  
                                              l1127 04D0                                                l1501 0EB2  
                                              l1254 069F                                                l1264 0740  
                                              l3201 0E12                                                l1513 0474  
                                              l3211 0E2D                                                l3203 0E16  
                                              l3141 0E1F                                                l3213 0DFB  
                                              l3301 0705                                                l3221 061F  
                                              l3205 0E19                                                l1437 0E8F  
                                              l3061 0EDA                                                l3143 0E22  
                                              l3215 0E01                                                l3071 0E4B  
                                              l3303 0707                                                l3231 062C  
                                              l3223 0622                                                l3207 0E1B  
                                              l3311 0D69                                                l3151 0FA3  
                                              l3063 0EF2                                                l1480 016A  
                                              l3145 0E25                                                l3073 0E53  
                                              l3305 0708                                                l3161 0E62  
                                              l3065 0DBC                                                l3209 0E2A  
                                              l3241 063B                                                l3233 062E  
                                              l3225 0624                                                l3217 061B  
                                              l3401 0F44                                                l3313 0D72  
                                              l3153 0FA4                                                l3147 0E27  
                                              l3075 0E5A                                                l3307 0709  
                                              l3163 0E67                                                l3067 0E04  
                                              l3251 0647                                                l3243 063D  
                                              l3235 0633                                                l3227 0627  
                                              l3219 061D                                                l3403 0F4A  
                                              l3315 0D6C                                                l3323 0E71  
                                              l1475 01E8                                                l3155 0FA8  
                                              l3331 0311                                                l3069 0E44  
                                              l3309 070B                                                l3165 0E69  
                                              l3261 065B                                                l3253 064A  
                                              l3245 0640                                                l3237 0636  
                                              l3229 0629                                                l3405 0F4D  
                                              l3325 0E78                                                l3317 0D75  
                                              l2701 04B2                                                l3157 0FAE  
                                              l3149 0F97                                                l3341 0337  
                                              l3333 0319                                                l1494 0F94  
                                              l3167 0E6B                                                l3263 0663  
                                              l3255 064D                                                l3247 0643  
                                              l3239 0638                                                l3271 0E3F  
                                              l3319 0D6F                                                l2711 04C7  
                                              l2703 04B6                                                l3343 034B  
                                              l3335 031B                                                l3327 0EB5  
                                              l3511 02DE                                                l3503 0269  
                                              l3281 06E5                                                l3169 0E6E  
                                              l3257 0650                                                l3249 0645  
                                              l3273 0E41                                                l3265 0E36  
                                              l2713 04CC                                                l2705 04B7  
                                              l2721 0531                                                l3097 0E80  
                                              l3361 03A0                                                l3345 034D  
                                              l3337 0327                                                l3513 02FD  
                                              l3505 0283                                                l3291 06F0  
                                              l3283 06E8                                                l3275 06DA  
                                              l3259 0657                                                l3267 0E39  
                                              l2707 04BC                                                l2731 0547  
                                              l2723 0536                                                l2651 0FCC  
                                              l2643 0FB6                                                l2811 0434  
                                              l2803 0417                                                l3099 0E83  
                                              l3371 03E6                                                l3363 03AE  
                                              l3355 036F                                                l3347 0359  
                                              l3339 032F                                                l3515 0300  
                                              l3507 0286                                                l3293 06F8  
                                              l3285 06EA                                                l3277 06DC  
                                              l3197 0E0D                                                l3269 0E3A  
                                              l2709 04C2                                                l2741 055F  
                                              l2733 054A                                                l2725 0538  
                                              l2717 052B                                                l2821 0EA6  
                                              l2653 0FD0                                                l2645 0FBB  
                                              l2661 0E92                                                l2813 0454  
                                              l2805 041E                                                l2901 01B4  
                                              l3461 0743                                                l3373 03E9  
                                              l3365 03B2                                                l3357 037D  
                                              l3349 036D                                                l3517 0305  
                                              l3509 028B                                                l3295 0700  
                                              l3287 06EC                                                l3279 06E0  
                                              l3199 0E10                                                l2751 0578  
                                              l2743 0563                                                l2735 054F  
                                              l2727 053C                                                l2719 052D  
                                              l2823 0EA7                                                l2639 0DF3  
                                              l2655 0FD2                                                l2647 0FC0  
                                              l2663 0E9A                                                l2815 046A  
                                              l2807 0424                                                l2911 01CE  
                                              l3471 0757                                                l3463 0746  
                                              l3375 03EF                                                l3367 03C4  
                                              l3359 0381                                                l3519 030E  
                                              l3297 0703                                                l3289 06EE  
                                              l2681 0482                                                l2673 0475  
                                              l2745 0568                                                l2737 0551  
                                              l2729 0541                                                l2761 0671  
                                              l2657 0FD4                                                l2649 0FC5  
                                              l2809 0429                                                l2905 01BB  
                                              l2841 0079                                                l3473 075A  
                                              l3465 074E                                                l3377 03FC  
                                              l3369 03D6                                                l3299 0704  
                                              l2691 0495                                                l2683 0486  
                                              l2675 0477                                                l2739 0555  
                                              l2747 056E                                                l2771 068F  
                                              l2763 0676                                                l2755 0665  
                                              l2819 0EA1                                                l2659 0E92  
                                              l2907 01C4                                                l2851 00A6  
                                              l2843 008B                                                l3475 075B  
                                              l3467 0751                                                l3459 0741  
                                              l3379 0403                                                l3491 0228  
                                              l3483 01F0                                                l3397 0F3E  
                                              l2693 0498                                                l2685 048B  
                                              l2677 047B                                                l2749 0573  
                                              l2773 0690                                                l2765 0678  
                                              l2757 0668                                                l2781 070E  
                                              l2861 00D5                                                l2853 00B0  
                                              l2845 0093                                                l3477 0769  
                                              l3469 0754                                                l3493 023F  
                                              l3485 0201                                                l3399 0F41  
                                              l2695 049D                                                l2687 048D  
                                              l2679 0480                                                l2775 0695  
                                              l2767 067C                                                l2759 066E  
                                              l2791 0723                                                l2783 0715  
                                              l2871 0115                                                l2863 00DC  
                                              l2855 00BA                                                l2847 0099  
                                              l2951 0F77                                                l3495 024D  
                                              l3487 0214                                                l3479 01E9  
                                              l2961 0D9C                                                l2697 049F  
                                              l2689 048F                                                l2769 068B  
                                              l2777 069B                                                l2793 072D  
                                              l2785 0718                                                l2873 011A  
                                              l2881 013F                                                l2865 00FA  
                                              l2857 00C6                                                l2849 009E  
                                              l2953 0F7D                                                l3497 0257  
                                              l3489 021F                                                l2699 04A3  
                                              l2795 0731                                                l2787 071D  
                                              l2891 0182                                                l2875 011F  
                                              l2867 010A                                                l2859 00D3  
                                              l2883 0146                                                l2955 0F88  
                                              l3499 0260                                                l2797 0736  
                                              l2789 071F                                                l2893 0192  
                                              l2885 0150                                                l2877 0129  
                                              l2869 0110                                                l2957 0F92  
                                              l2799 073C                                                l2895 0198  
                                              l2887 015C                                                l2879 013C  
                                              l3679 0FD9                                                l2897 019E  
                                              l2889 016C                                                l2899 01B1  
                                              STR_1 1122                                                STR_2 1114  
                                              STR_3 1105                                                STR_4 1052  
                                              STR_5 101C                                                STR_6 112A  
                                              STR_7 1080                                                STR_8 106A  
                                              STR_9 1095                                   _I2C1_Deinitialize 0000  
                                              u1220 0DF9                                                u1221 0DF7  
                                              u1310 04A3                                                u1230 0DFA  
                                              u1311 04A2                                                u2040 0E78  
                                              u1240 0FBB                                                u2200 0305  
                                              u2041 0E77                                                u1305 0499  
                                              u1241 0FBA                                                u2201 0304  
                                              u1330 04B2                                                u1410 0555  
                                              u1250 0FC5                                                u2050 03A0  
                                              u1331 04B1                                                u1411 0554  
                                              u1251 0FC4                                                u2051 039F  
                                              u1420 055F                                                u1500 068B  
                                              u1260 0E9A                                                u2060 03D6  
                                              u1325 04A4                                                u1421 055E  
                                              u1405 054B                                                u1501 068A  
                                              u1261 0E99                                                u2061 03D5  
                                              _LATA 010C                                                u1350 04C2  
                                              u1270 047B                                                u2070 03EF  
                                              u1351 04C1                                                u1335 04AE  
                                              u1271 047A                                                u2071 03EE  
                                              u2055 039C                                                _LATC 010E  
                                              u1360 04C7                                                u1280 0486  
                                              u1440 056E                                                u1520 069B  
                                              u1600 0424                                                u1361 04C6  
                                              u1345 04B8                                                u1281 0485  
                                              u1441 056D                                                u1425 055B  
                                              u1521 069A                                                u1505 0687  
                                              u1601 0423                                                u2065 03D2  
                                              u1290 0495                                                u1450 0573  
                                              u1370 0531                                                u1530 0715  
                                              u1610 0434                                                u1291 0494  
                                              u1451 0572                                                u1435 0564  
                                              u1371 0530                                                u1515 0691  
                                              u1531 0714                                                u1611 0433  
                                              u1380 053C                                                u1460 066E  
                                              u1620 0454                                                u1700 0115  
                                              u2180 01EF                                                u1381 053B  
                                              u1461 066D                                                u1621 0453  
                                              u1701 0114                                                u2181 01EE  
                                              u1390 0547                                                u1550 0723  
                                              u1630 0EA6                                                u1710 011A  
                                              u2190 028B                                                u1391 0546  
                                              u1551 0722                                                u1631 0EA5  
                                              u1711 0119                                                u2191 028A  
                                              u2415 0FE6                                                u1480 067C  
                                              u1560 072D                                                u1720 011F  
                                              u1640 008B                                                u1481 067B  
                                              u1561 072C                                                u1545 0719  
                                              u1625 0450                                                u1721 011E  
                                              u1641 008A                                                u1730 0145  
                                              u1650 00B0                                                u1475 0672  
                                              u1731 0144                                                u1651 00AF  
                                              u2507 0FA5                                                u2427 0321  
                                              u1580 073C                                                u1740 0150  
                                              u1660 00BA                                                u1581 073B  
                                              u1565 0729                                                u1741 014F  
                                              u1661 00B9                                                u2517 0762  
                                              u2437 033D                                                u1590 041E  
                                              u1750 0198                                                u1670 00DA  
                                              u1495 067D                                                u1575 0732  
                                              u1591 041D                                                u1751 0197  
                                              u1671 00D8                                                u2447 0353  
                                              u1760 019D                                                u1680 00DB  
                                              u1761 019C                                                u2457 0367  
                                              u1770 01BA                                                u1690 0110  
                                              u1771 01B9                                                u1691 010F  
                                              u2467 0387                                                u1860 0E4B  
                                              u1780 0F92                                                u1861 0E4A  
                                              u1781 0F91                                                u1845 0EEB  
                                              u2477 03B8                                                u1870 0E5A  
                                              u1871 0E59                                                u1855 0F03  
                                              u2487 03F5                                                u2497 0410  
                                              u1980 0FAE                                                u1981 0FAD  
                                              _TMR2 001A                                                _WPUA 020C  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 0077  
                                              abs@a 0026                                     ??_I2C1_StopSend 0070  
                                              _dbuf 0120                                                _main 0FD9  
                                              _prec 00DA                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                       _INT_DefaultInterruptHandler 0000                                                start 004A  
        __end_of_EUSART_DefaultOverrunErrorCallback 0D7C                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 0D78  
                   __end_of_INT_SetInterruptHandler 0DC2                                     _I2C1_EVENT_IDLE 0D90  
                                   _I2C1_EVENT_NACK 0DAA                                          _i2c1Status 00B0  
                                   _I2C1_EVENT_STOP 0DEB                                               ??_abs 0028  
                                     ?_EUSART_Write 0020                                   __end_of_I2C1_Host 10BE  
                                             ?_main 0070                                       _EUSART_Enable 0D69  
                                   __end_of___awdiv 04D1                                               STR_10 10E3  
                                             STR_11 10F5                                               STR_12 10BE  
                                             STR_13 1000                                               STR_14 1037  
                                   __end_of___awmod 057D                                     ___awdiv@divisor 0020  
                                             _T2CON 001C                                               _IOCAF 0393  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCCN 0398  
                                             _IOCCP 0397                                     __end_of___lwdiv 06A0  
                                             i1l203 0606                                               i1l212 0D93  
                                             i1l302 0D83                                               i1l206 061A  
                                             i1l215 0DEA                                               i1l225 07CE  
                                             i1l233 06D9                                               i1l209 0F76  
                                             i1l218 0DD4                                               i1l242 0DF2  
                                             i1l251 0DA4                                               i1l260 0D68  
                                             i1l236 0DAF                                               i1l245 0DDB  
                                             i1l254 0D7F                                               i1l263 0D65  
                                             i1l239 0DB5                                               i1l272 0D87  
                                             i1l248 0D5F                                               i1l257 0D62  
                                             i1l281 0DA9                                               i1l185 0D9B  
                                   __end_of___lwmod 0741                                               i1l370 0048  
                                             i1l275 0D8F                                               i1l371 003A  
                                             i1l188 0D97                                               i1l284 0DE2  
                                             i1l197 0ED9                                               i1l269 0D5C  
                                             i1l278 0DBB                                               i1l287 0D8B  
                                             i1l367 001B                                               i1l296 0D59  
                                             i1l376 0048                                               i1l369 002C  
                                             i1l299 0D56                                               i1l734 0F3D  
                                             i1l744 052A                                               i1l754 0F20  
                                             i1l772 0003                                               i1l757 0F22  
                                             i1l775 0D7B                                               i1l885 07F7  
                                   ___awdiv@counter 0024                                               _UART1 0772  
                                      vfpfcnvrt@fmt 002E                                  _PWM4_LoadDutyValue 0EF2  
                                             _TRISA 008C                                               _TRISC 008E  
                                             _RXPPS 0E24                                               _Flags 00D2  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                   ??_I2C1_Initialize 0020  
                                    i1___awmod@sign 0075                                               _flags 006D  
                                _EUSART_TransmitISR 0F0A                                               _fputc 0417  
                               ?_PWM4_LoadDutyValue 0028                                   ?_I2C1_IsRxBufFull 0070  
                          ?_I2C1_EVENT_SEND_WR_ADDR 0070                                               _width 00D8  
                                             _putch 0E90                             __end_of_PWM3_Initialize 0E16  
                                   SYSTEM_UPDATE@ax 005B                                     SYSTEM_UPDATE@ay 005D  
                                             pclath 000A                                     SYSTEM_UPDATE@az 005F  
                             I2C1_DataTransmit@data 0070                                  ??_I2C1_IsRxBufFull 0070  
                                             status 0003                                               wtemp0 007E  
                               ?_EUSART_TransmitISR 0070                                        ??_I2C1_Close 0070  
                                 ??_ESC_Programming 0054                                     __initialization 004C  
                          ??_I2C1_ErrorEventHandler 0072                                        __end_of_main 1000  
                              ??_PWM4_LoadDutyValue 002A                                    _I2C1_EVENT_ERROR 0DB0  
                                    ??_EUSART_Write 0021                                    _I2C1_EVENT_RESET 0DD5  
                 _EUSART_TxCompleteInterruptHandler 00E2                             __end_of_PWM4_Initialize 0E1F  
                           __end_of_TMR2_Initialize 0E44                         ?_INTERRUPT_InterruptManager 0070  
                                    ?_EUSART_Enable 0070                                ??_EUSART_TransmitISR 0070  
                                            ??_main 0067                    ??_EUSART_TransmitInterruptEnable 0020  
                   ?_EUSART_TransmitInterruptEnable 0070    EUSART_RxCompleteCallbackRegister@callbackHandler 0020  
EUSART_OverrunErrorCallbackRegister@callbackHandler 0020  EUSART_FramingErrorCallbackRegister@callbackHandler 0020  
                                __end_of_I2C1_Close 0EDA                                              _ADCON0 009D  
                                            _ADCON1 009E                                              _ADCON2 009F  
                        _EUSART_OverrunErrorHandler 00DC                               _I2C1_InterruptsEnable 0D9C  
                                            ?_fputc 0023                                              _ADRESH 009C  
                                            _ADRESL 009B                                    ___awdiv@dividend 0022  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELC 018E                                              _BORCON 0116  
                                            _RC1REG 0199                                              _RA4PPS 0E94  
                                            _RC0PPS 0EA0                                              _RA5PPS 0E95  
                                            _RC1PPS 0EA1                                              _RC1STA 019D  
                                            _RC3PPS 0EA3                                              i1l1140 05CD  
                                            i1l3001 07B5                                              i1l3011 07C6  
                                            i1l3003 07BA                                              i1l3013 07C9  
                                            i1l3005 07BD                                              i1l3021 06A2  
                                            i1l3111 0589                                              i1l3103 057D  
                                            i1l3007 07C2                                              i1l3015 07CD  
                                            i1l3031 06C2                                              i1l3023 06AA  
                                            u200_20 05E2                                              i1l3121 05A0  
                                            i1l3113 058D                                              i1l3105 057E  
                                            i1l3009 07C3                                              i1l3041 06D8  
                                            i1l3033 06C8                                              i1l3025 06B1  
                                            u200_21 05E1                                              _ODCONA 028C  
                                            i1l3131 05B9                                              i1l3123 05A2  
                                            i1l3115 0592                                              i1l3107 0582  
                                            i1l3035 06CC                                              i1l3027 06B9  
                                            i1l3019 06A0                                              _ODCONC 028E  
                                            i1l3125 05A6                                              i1l3117 0598  
                                            i1l3133 05BF                                              i1l3109 0587  
                                            i1l3037 06D2                                              i1l3029 06BE  
                                            i1l3045 0DAA                                              i1l3053 0DB0  
                                            i1l3135 05C4                                              i1l3127 05B0  
                                            i1l3119 059B                                              i1l3039 06D5  
                                            i1l3047 0DAA                                              i1l3055 0DB0  
                                            u201_20 05EA                                              i1l3081 0F2A  
                                            i1l3137 05C9                                              i1l3129 05B4  
                                            i1l3321 0D78                                              i1l3049 0DAE  
                                            i1l3057 0DB4                                              u201_21 05E9  
                                            i1l3091 0F3A                                              i1l3083 0F2E  
                                            i1l3411 04D1                                              i1l3171 05CE  
                                            i1l3093 0F3C                                              i1l3085 0F30  
                                            i1l3077 0F23                                              i1l3421 04EE  
                                            i1l3413 04D8                                              i1l3181 05EA  
                                            i1l3173 05D1                                              i1l3087 0F32  
                                            i1l3079 0F23                                              i1l3431 0507  
                                            i1l3423 04F3                                              i1l3415 04DD  
                                            i1l3191 0F5A                                              i1l3183 05F0  
                                            i1l3175 05D6                                              u202_20 05F8  
                                            i1l3089 0F38                                              i1l3441 051B  
                                            i1l3433 050B                                              i1l3425 04F8  
                                            i1l3417 04E2                                              i1l3193 0F5F  
                                            i1l3185 05F8                                              u202_21 05F7  
                                            i1l3177 05DA                                              i1l3443 051E  
                                            i1l3427 04FF                                              i1l3419 04E9  
                                            i1l3451 0F17                                              i1l3195 0F62  
                                            i1l3187 0600                                              i1l3179 05E2  
                                            i1l3381 07CF                                              i1l3445 0525  
                                            i1l3437 0512                                              i1l3429 0504  
                                            i1l3453 0F1B                                              i1l3189 0606  
                                            i1l3621 0014                                              i1l3391 07E6  
                                            i1l3383 07D3                                              i1l3439 0519  
                                            i1l3455 0F1D                                              i1l3447 0F0A  
                                            i1l2671 0D80                                              i1l2831 0ED0  
                                            i1l3631 003F                                              i1l3623 0020  
                                            i1l3615 0006                                              u211_20 04DD  
                                            u203_20 0600                                              i1l3385 07D9  
                                            u211_21 04DC                                              i1l3449 0F10  
                                            i1l2833 0ED3                                              i1l2921 0DEB  
                                            u203_21 05FF                                              i1l3393 0D98  
                                            i1l3633 0044                                              i1l3625 0025  
                                            i1l3617 000A                                              i1l3387 07DC  
                                            i1l2667 0D57                                              i1l2835 0ED6  
                                            i1l2827 0EC5                                              i1l2931 0D5D  
                                            i1l2923 0DF1                                              i1l3395 0D94  
                                            i1l3627 0031                                              i1l3619 000F  
                                            i1l3389 07DF                                              i1l2669 0D54  
                                            i1l2829 0EC7                                              i1l2837 0D5A  
                                            i1l2941 0D60                                              i1l2917 0DA1  
                                            i1l3629 0036                                              i1l2839 0D7C  
                                            i1l2935 0D84                                              i1l2927 0D88  
                                            i1l2919 0D66                                              i1l2943 0DD5  
                                            u212_20 04E9                                              u212_21 04E8  
                                            i1l2937 0D63                                              i1l2945 0DD8  
                                            i1l2939 0D8C                                              i1l2947 0DDA  
                                            i1l2963 0DDC                                              i1l2971 0DA5  
                                            i1l2981 0DE3                                              i1l2975 0D90  
                                            i1l2983 0DE9                                              i1l2967 0DB6  
                                            u213_20 04F3                                              u213_21 04F2  
                                            i1l2993 07A2                                              i1l2977 0D92  
                                            i1l2995 07A2                                              i1l2987 0DCE  
                                            i1l2997 07A9                                              i1l2989 0DD3  
                                            i1l2999 07AD                                              u214_20 04FF  
                                            u230_20 0031                                              u214_21 04FE  
                                            u230_21 0030                                              u215_20 0511  
                                            u231_20 0036                                              u215_21 0510  
                                            u231_21 0035                                              u208_20 07D9  
                                            u216_20 0525                                              u232_20 003F  
                                            u208_21 07D8                                              u216_21 0524  
                                            u232_21 003E                                              _INLVLA 038C  
                                            _INLVLC 038E                                              u217_20 0F10  
                                            u233_20 0044                                              u225_20 000A  
                                            u217_21 0F0F                                              u233_21 0043  
                                            u225_21 0009                                              u226_20 000F  
                                            u226_21 000E                                              u227_20 0014  
                                            u227_21 0013                                              u180_20 07C2  
                                            u228_20 0020                                              u180_21 07C1  
                                            u228_21 001F                                              u181_20 06AA  
                                            u229_20 0025                                              u181_21 06A9  
                                            u229_21 0024                                              u190_20 058D  
                                            u182_20 06B1                                              u190_21 058C  
                                            u182_21 06B0                                              u191_20 0598  
                                            u183_20 06C8                                              u191_21 0597  
                                            u183_21 06C7                                              u192_25 059C  
                                            u193_20 05A6                                              u193_21 05A5  
                                            u194_20 05B0                                              u194_21 05AF  
                                            u194_25 05AC                                              u179_20 07A9  
                                            u179_21 07A8                                              u195_25 05B5  
                                            u188_20 0F38                                              u196_20 05BF  
                                            u188_21 0F37                                              u196_21 05BE  
                                            u197_20 05C4                                              u189_20 0582  
                                            u197_21 05C3                                              u189_21 0581  
                                            u199_20 05D6                                              u199_21 05D5  
                                            _OSCCON 0099                                       vfpfcnvrt@done 0034  
                                            _TX1REG 019A                                              _TX1STA 019E  
                           __end_of_I2C1_EVENT_IDLE 0D94                             __end_of_I2C1_EVENT_NACK 0DB0  
                           __end_of_I2C1_EVENT_STOP 0DF3                 __end_of_INT_IMU_SetInterruptHandler 0E0D  
                       _INT_IMU_SetInterruptHandler 0E04                         __end_of_I2C1_InterruptClear 0D5A  
                                      vfprintf@cfmt 0042                                           ??___awdiv 0024  
                                         ??___awmod 0024                                              _make16 0EB3  
                                         ??___lwdiv 0024                                           ??___lwmod 0024  
                                _I2C1_RestartEnable 0D66                                           ?_I2C1_ISR 0070  
                                  ___awdiv@quotient 0026                                     ___awmod@divisor 0020  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 0DEB                                   ?_EUSART_IsTxReady 0070  
                                   ___awmod@counter 0024                                              _printf 0E80  
                           ESC_Programming@settings 0053                                   ?_CLOCK_Initialize 0070  
                                 __end_ofi1___awmod 05CE                                              fputc@c 0023  
                                ??_EUSART_IsTxReady 0020                                  ??_CLOCK_Initialize 0020  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 0DD5                                 ?_I2C1_RestartEnable 0070  
                           ??_EUSART_TransmitEnable 0020                            ADC_GetConversion@channel 0023  
                       EUSART_ReceiveISR@tempRxHead 0078                                    __end_of_vfprintf 0F95  
       INT_IMU_SetInterruptHandler@InterruptHandler 0020             INT_SetInterruptHandler@InterruptHandler 0020  
                                  ?_PWM3_Initialize 0070                                   _SYSTEM_Initialize 0F3E  
                           __end_of__initialization 0075                                       ??_I2C1_IsAddr 0070  
                                     ??_I2C1_IsData 0070                                       ??_I2C1_IsNack 0070  
                                     _SYSTEM_UPDATE 01E9                                  ?_SYSTEM_Initialize 0070  
                              ??_I2C1_RestartEnable 0070                                       __end_of_UART1 07A2  
                                    __pcstackCOMMON 0070                                        __pidataBANK2 07F8  
                               ??_SYSTEM_Initialize 0022                                     ??_EUSART_Enable 0020  
                                     __end_of_fputc 0475                          ??_I2C1_ErrorInterruptClear 0070  
                             ESC_Programming@c_1783 0058                                       __end_of_putch 0EA1  
                                        ??_I2C1_ISR 0074                                    ?_PWM4_Initialize 0070  
                                  ?_TMR2_Initialize 0070                         PWM4_LoadDutyValue@dutyValue 0028  
                                    _OPTION_REGbits 0095                                _eusartRxStatusBuffer 00A0  
                             __end_of_I2C1_EVENT_RX 06DA                               __end_of_I2C1_EVENT_TX 07CF  
                            ?_I2C1_InterruptsEnable 0070                                   _I2C1_EventHandler 05CE  
                                           ??_fputc 0027                           __end_of_SYSTEM_Initialize 0F5A  
                                           ??_putch 0022                                          __pbssBANK0 0069  
                                        __pbssBANK1 00A0                                          __pbssBANK2 0120  
                              __end_of_EUSART_Write 0FD9                                  ?_I2C1_EventHandler 0070  
                                    ?_SYSTEM_UPDATE 0070                               _I2C1_StatusFlagsClear 0D80  
                                  ?_I2C1_EVENT_IDLE 0070                                    ?_I2C1_EVENT_NACK 0070  
                                  ?_I2C1_EVENT_STOP 0070                     ??_EUSART_ReceiveInterruptEnable 0020  
                               ??_I2C1_EventHandler 0072                                          __pmaintext 0FD9  
                               __end_of_I2C1_IsAddr 0DE3                                 __end_of_I2C1_IsData 0DAA  
                               __end_of_I2C1_IsNack 0DBC                                             ?_make16 0020  
                                        __pintentry 0004                                     _I2C1_Initialize 0E62  
                              _EUSART_AutoBaudQuery 0000                                             ?_printf 0044  
                             __end_of_I2C1_NackSend 0D90                               __end_of_I2C1_BusReset 0D80  
                                   _EUSART_IsTxDone 0000                                       _eusartRxCount 006F  
         __end_of_EUSART_RxCompleteCallbackRegister 0E80                 ??_EUSART_RxCompleteCallbackRegister 0022  
                ?_EUSART_RxCompleteCallbackRegister 0020                   _EUSART_RxCompleteCallbackRegister 0E71  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                                           _I2C1_Read 0000  
                                         _I2C1_Host 10AA                           __end_of_I2C1_EventHandler 061B  
                            _I2C1_ErrorEventHandler 0F5A                                             _OSCTUNE 0098  
                                           _PWM3DCH 0618                                             _PWM3DCL 0617  
                                           _PWM4DCH 061B                                             _PWM4DCL 061A  
                                           _PWM3CON 0619                                             _PWM4CON 061C  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                                   _ESC_Programming 0311                            _INT_IMU_InterruptHandler 00EA  
                          __end_of_I2C1_EVENT_ERROR 0DB6                            __end_of_I2C1_EVENT_RESET 0DDC  
                             EUSART_Read@tempRxTail 0070                               __end_of_I2C1_StopSend 0D5D  
                                         _BAT_LEVEL 0069                          ?_APC220_Receiver_Interrupt 0070  
                                           ___awdiv 0475                                             ___awmod 052B  
                                           ___lwdiv 0665                                             ___lwmod 070E  
                                         ?_vfprintf 003C                                             __ptext1 01E9  
                                           __ptext2 0EB3                                             __ptext3 0311  
                                           __ptext4 0EF2                                             __ptext5 0EDA  
                                           __ptext6 0F95                                             __ptext7 0741  
                                           __ptext8 0E80                                             __ptext9 0F77  
                                         _T2CONbits 001C                                 _I2C1_RestartDisable 0D63  
                                  ___awmod@dividend 0022                            ??_PIN_MANAGER_Initialize 0022  
                                     ?_I2C1_AckSend 0070                             _INT_SetInterruptHandler 0DBC  
                                         _IOCCFbits 0399                                     _i2c1_eventTable 10D1  
                                           clrloop0 0DC3                                     ??_SYSTEM_UPDATE 005B  
                              end_of_initialization 0075                              ?_I2C1_StatusFlagsClear 0070  
                                           fputc@fp 0025                                             init_ram 0DC8  
                                           initloop 0DC9                                          make16@Left 0027  
                                       _I2C1_IsAddr 0DDC                                         _I2C1_IsData 0DA5  
                                       _I2C1_IsNack 0DB6                                         _I2C1_IsBusy 0000  
                                 _EUSART_Initialize 06DA                                ?_I2C1_RestartDisable 0070  
                           __end_of_I2C1_Initialize 0E71                                  ?_EUSART_Initialize 0070  
                                 __end_of_vfpfcnvrt 01E9                                   _EUSART_ReceiveISR 04D1  
                 __end_of_APC220_Receiver_Interrupt 07F8                                    vfpfcnvrt@convarg 0037  
                                  _I2C1_DataReceive 0D5D               __end_of_EUSART_ReceiveInterruptEnable 0D72  
                                        ??_vfprintf 0041                       _EUSART_ReceiveInterruptEnable 0D6F  
                                ?_EUSART_ReceiveISR 0070                                 ??_EUSART_Initialize 0022  
                                         _SSPDATPPS 0E21                                           _SSPCLKPPS 0E20  
                               ??_EUSART_ReceiveISR 0077                             __end_of_ESC_Programming 0417  
                                    ??_I2C1_AckSend 0070                                           i1___awmod 057D  
                     __end_of_EUSART_TransmitEnable 0D75                                 _EUSART_Deinitialize 0000  
                                    _SYSTEM_STARTUP 0741                           __end_of_EUSART_Initialize 070E  
                             ??_I2C1_RestartDisable 0070                           __end_of_EUSART_ReceiveISR 052B  
                        __end_of_PWM3_LoadDutyValue 0EF2                        APC220_Receiver_Interrupt@msg 0076  
                   _TMR2_DefaultPeriodMatchCallback 0000                        __end_of_INTERRUPT_Initialize 0E36  
                                    _I2C1_ERROR_ISR 0D94                                         vfpfcnvrt@ap 002F  
                                       vfpfcnvrt@cp 0035                                         vfpfcnvrt@fp 002C  
                                    __end_of_make16 0EC5                          __end_of_I2C1_ReceiveEnable 0D63  
                                      _EUSART_Write 0FB6                             __end_of_i2c1_eventTable 10E3  
                                    _ADC_Initialize 0E1F                           ??_INT_SetInterruptHandler 0022  
                           ??_I2C1_InterruptsEnable 0020                                      SYSTEM_UPDATE@x 0061  
                                    SYSTEM_UPDATE@y 0063                                      SYSTEM_UPDATE@z 0065  
                                    __end_of_printf 0E90                                 start_initialization 004C  
                                       __end_of_abs 0EB3                              __end_of_SYSTEM_STARTUP 0772  
                                        ?i1___awmod 0070                                       ??_EUSART_Read 0070  
                                       putch@txData 0022                             _I2C1_EVENT_SEND_RD_ADDR 0DE3  
                         _EUSART_RxInterruptHandler 00EC                        __end_of_EUSART_ReceiveEnable 0D6F  
                                  ?_I2C1_Initialize 0070                             _I2C1_EVENT_SEND_WR_ADDR 0DCE  
                            __end_of_I2C1_ERROR_ISR 0D98                                         vfprintf@fmt 003E  
                        _EUSART_FramingErrorHandler 00DE                                    _I2C1_IsRxBufFull 0D88  
                                       _CCPTMRSbits 029E                                            ??_make16 0022  
                            __end_of_ADC_Initialize 0E2A                                         __pdataBANK2 0148  
                                i1___awmod@dividend 0072                               __end_of_EUSART_Enable 0D6C  
                                          ??_printf 0052                             ?_I2C1_ErrorEventHandler 0070  
                    ?_EUSART_ReceiveInterruptEnable 0070                                    ?_ESC_Programming 0053  
                                       __pbssCOMMON 0079                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                     ?_SYSTEM_STARTUP 0070  
                         ?_I2C1_ErrorInterruptClear 0070                                   ?_I2C1_EVENT_ERROR 0070  
                                 ?_I2C1_EVENT_RESET 0070                                 __end_of_EUSART_Read 0F3E  
                            EUSART_Write@tempTxHead 0021                                  ??_I2C1_EVENT_ERROR 0070  
                                ??_I2C1_EVENT_RESET 0070                                           __pnvBANK1 00E8  
                              __end_of_I2C1_AckSend 0D88                                    ___lwdiv@dividend 0022  
                            _PIN_MANAGER_Initialize 061B                                    ESC_Programming@c 0056  
                                  ESC_Programming@i 005A                                     ?_I2C1_ERROR_ISR 0070  
                              EUSART_Read@readValue 0071                         ??_APC220_Receiver_Interrupt 0076  
                                          ?___awdiv 0020                                            ?___awmod 0020  
                                          ?___lwdiv 0020                                            ?___lwmod 0020  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 007A  
                                      _eusartTxHead 007D                                        _eusartRxTail 0079  
                                      _eusartTxTail 007C                                            _I2C1_ISR 0D98  
                      ??_INTERRUPT_InterruptManager 0079                      __end_of_I2C1_ErrorEventHandler 0F77  
                      EUSART_TransmitISR@tempTxTail 0070                             _eusartTxBufferRemaining 007B  
                                          _BAUD1CON 019F                              _EUSART_TransmitDisable 0000  
                     I2C1_EVENT_ERROR@retEventState 0070                                         ??i1___awmod 0074  
                                  ___lwdiv@quotient 0024                             ??_I2C1_StatusFlagsClear 0070  
                          __end_of_I2C1_DataReceive 0D60                           ??_I2C1_EVENT_SEND_RD_ADDR 0070  
                                  _EUSART_IsRxReady 0000                                _INTERRUPT_Initialize 0E2A  
                                  _EUSART_IsTxReady 0DF3                                      _eusartRxBuffer 0140  
                                  _CLOCK_Initialize 0DFB                                      _eusartTxBuffer 00CA  
                                      ?_I2C1_IsAddr 0070                                        ?_I2C1_IsData 0070  
                                          _LATCbits 010E                                        ?_I2C1_IsNack 0070  
                         ??_I2C1_EVENT_SEND_WR_ADDR 0071                               _I2C1_CallbackRegister 0000  
                                         clear_ram0 0DC2                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 00E4                                          _I2C1_Close 0EC5  
                                          _IMU_Data 00BE                                            _PIR1bits 0011  
                      ?_INT_IMU_SetInterruptHandler 0020                                            _PIR2bits 0012  
                                        _I2C1_Write 0000                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                    APC220_Receiver_Interrupt@index 006E                                           _vfpfcnvrt 0079  
                                 ??_PWM3_Initialize 0020                                          _ADCON0bits 009D  
                              _EUSART_ReceiveEnable 0D6C                           _APC220_Receiver_Interrupt 07CF  
                      I2C1_EVENT_NACK@retEventState 0070                                       _I2C1_EVENT_RX 06A0  
                                     _I2C1_EVENT_TX 07A2                                         _ESC_Setting 0148  
                                       _EUSART_Read 0F23                                          vfpfcnvrt@c 003B  
                             ?_INTERRUPT_Initialize 0070                   _EUSART_RxCompleteInterruptHandler 00E0  
                             __end_of_SYSTEM_UPDATE 0311                                   ??_PWM4_Initialize 0020  
                                 ??_TMR2_Initialize 0020                                 _I2C1_InterruptClear 0D57  
                        __end_of_PWM4_LoadDutyValue 0F0A                                          vfprintf@ap 0040  
                                        vfprintf@fp 003C                                   _ADC_GetConversion 0F95  
                     ??_INT_IMU_SetInterruptHandler 0022                                   i1___awmod@divisor 0070  
                                     _I2C1_Callback 00E6                                  ?_ADC_GetConversion 0020  
                                 i1___awmod@counter 0074                          __end_of_EUSART_TransmitISR 0F23  
                                        ?_vfpfcnvrt 002C                                ?_I2C1_InterruptClear 0070  
                                _PWM3_LoadDutyValue 0EDA                                       _I2C1_NackSend 0D8C  
                                     _I2C1_BusReset 0D7C                                 ??_ADC_GetConversion 0022  
                             ?_EUSART_ReceiveEnable 0070                                   ??_I2C1_EVENT_IDLE 0070  
                                 ??_I2C1_EVENT_NACK 0070                                   ??_I2C1_EVENT_STOP 0070  
                     __end_of_I2C1_InterruptsEnable 0DA0                                      ?_I2C1_EVENT_RX 0070  
                                    ?_I2C1_EVENT_TX 0070                                     ___lwdiv@divisor 0020  
                                     _I2C1_ErrorGet 0000                                  _EUSART_AutoBaudSet 0000  
                                   ___lwdiv@counter 0026                                        make16@result 0025  
                                          __ptext10 0079                                            __ptext11 0417  
                                          __ptext20 0D75                                            __ptext12 0E90  
                                          __ptext21 0D72                                            __ptext13 0FB6  
                                          __ptext30 061B                                            __ptext22 0E71  
                                          __ptext14 0DF3                                            __ptext31 0E04  
                                          __ptext23 0D6F                                            __ptext15 0EA1  
                                          __ptext40 0E1F                                            __ptext32 0E2A  
                                          __ptext24 0D6C                                            __ptext16 070E  
                                          __ptext33 0DBC                                            __ptext25 0D69  
                                          __ptext17 0665                                            __ptext50 0DEB  
                                          __ptext42 0D98                                            __ptext34 0E62  
                                          __ptext26 0F3E                                            __ptext18 052B  
                                          __ptext51 0DB0                                            __ptext43 05CE  
                                          __ptext35 0D9C                                            __ptext27 0E36  
                                          __ptext19 0475                                            __ptext60 0D63  
                                          __ptext52 0DAA                                            __ptext44 0DB6  
                                          __ptext36 06DA                                            __ptext28 0E16  
                                          __ptext61 0D60                                            __ptext53 06A0  
                                          __ptext45 0DA5                                            __ptext37 0E53  
                                          __ptext29 0E0D                                            __ptext70 0D54  
                                          __ptext62 0D8C                                            __ptext54 0DCE  
                                          __ptext46 0DDC                                            __ptext38 0E44  
                                          __ptext71 0D7C                                            __ptext63 0D88  
                                          __ptext55 0DE3                                            __ptext47 0D94  
                                          __ptext39 0DFB                                            __ptext72 0F0A  
                                          __ptext64 0D5D                                            __ptext56 0D90  
                                          __ptext48 0F5A                                            __ptext73 04D1  
                                          __ptext65 0D84                                            __ptext57 07A2  
                                          __ptext49 0DD5                                            __ptext74 0D78  
                                          __ptext66 0D5A                                            __ptext58 0D66  
                               ?_PWM3_LoadDutyValue 0028                                            __ptext75 0003  
                                          __ptext67 0EC5                                            __ptext59 0DA0  
                                          __ptext76 07CF                                            __ptext68 0D80  
                                          __ptext77 057D                                            __ptext69 0D57  
                                          __ptext78 0F23                            __end_of_I2C1_IsRxBufFull 0D8C  
                                      _SSP1CON1bits 0215                                        _SSP1CON2bits 0216  
                       __end_of_I2C1_RestartDisable 0D66                                  _I2C1_ReceiveEnable 0D60  
                             _EUSART_TransmitEnable 0D72                                 ?_I2C1_ReceiveEnable 0070  
            __end_of_EUSART_TransmitInterruptEnable 0D78                      _EUSART_TransmitInterruptEnable 0D75  
                         __end_of_ADC_GetConversion 0FB6                                         ?_I2C1_Close 0070  
                                     _I2C1_StopSend 0D5A                     _INT_IMU_DefaultInterruptHandler 0000  
                                        _RC1STAbits 019D                                ??_PWM3_LoadDutyValue 002A  
                                          int$flags 007E                                            _vfprintf 0F77  
                __end_of_INTERRUPT_InterruptManager 004A                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 0E53               ??_EUSART_FramingErrorCallbackRegister 0022  
              ?_EUSART_FramingErrorCallbackRegister 0020                 _EUSART_FramingErrorCallbackRegister 0E44  
                                         printf@fmt 0044                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0070                    __end_of_I2C1_ErrorInterruptClear 0D57  
                                    ?_I2C1_NackSend 0070                                      ?_I2C1_BusReset 0070  
                                  ??_SYSTEM_STARTUP 0053                                ??_I2C1_ReceiveEnable 0070  
                                        _INTCONbits 000B                                        _I2C1_AckSend 0D84  
                              _INT_InterruptHandler 006B                                      __pstringtext10 1095  
                                    __pstringtext11 10BE                                      __pstringtext12 10E3  
                                    __pstringtext13 10F5                                      __pstringtext14 1105  
                                    __pstringtext15 1114                                      __pstringtext16 1122  
                                    __pstringtext17 112A                                      __pstringtext18 0000  
                            ??_INTERRUPT_Initialize 0022                          I2C1_EVENT_RX@retEventState 0070  
                                       make16@Right 0020                                            intlevel1 0000  
                                  ___lwmod@dividend 0022                           _EUSART_TxInterruptHandler 00EE  
                                  ??_I2C1_ERROR_ISR 0074                             ?_PIN_MANAGER_Initialize 0070  
                        __end_of_I2C1_RestartEnable 0D69          __end_of_EUSART_DefaultFramingErrorCallback 0004  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 0003                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 0020                                            printf@ap 0052  
                          ?_INT_SetInterruptHandler 0020                         PWM3_LoadDutyValue@dutyValue 0028  
                                       ??_vfpfcnvrt 0030                            __end_of_EUSART_IsTxReady 0DFB  
                          __end_of_CLOCK_Initialize 0E04                                       __pstringtext1 0772  
                                     __pstringtext2 10AA                                       __pstringtext3 10D1  
                                     __pstringtext4 1000                                       __pstringtext5 101C  
                                     __pstringtext6 1037                                       __pstringtext7 1052  
                                     __pstringtext8 106A                                       __pstringtext9 1080  
                            ??_EUSART_ReceiveEnable 0020                                     ??_I2C1_EVENT_RX 0070  
                                   ??_I2C1_EVENT_TX 0071                                     ___lwmod@divisor 0020  
                                   ___lwmod@counter 0024                                   _I2C1_DataTransmit 0DA0  
                                        _TX1STAbits 019E                              ?_EUSART_TransmitEnable 0070  
                                ?_I2C1_DataTransmit 0070                                   ?_I2C1_DataReceive 0070  
                                EUSART_Write@txData 0020                      __end_of_PIN_MANAGER_Initialize 0665  
                     __end_of_I2C1_StatusFlagsClear 0D84                                  ??_I2C1_DataReceive 0070  
                        I2C1_EVENT_TX@retEventState 0071                                 ??_I2C1_DataTransmit 0070  
                                   _PWM3_Initialize 0E0D                            _TMR2_PeriodMatchCallback 00E8  
